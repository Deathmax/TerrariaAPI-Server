using System;
using TerrariaApi.Server;
namespace Terraria
{
	public class NPC
	{
		public const int maxBuffs = 5;
		public float teleportTime;
		public static int immuneTime = 20;
		public static int maxAI = 4;
		public int netSpam;
		public static bool noStream = false;
		public static float waveKills = 0f;
		public static int waveCount = 0;
		private static int spawnSpaceX = 3;
		private static int spawnSpaceY = 3;
		public float gfxOffY;
		public float stepSpeed;
		private static float gravity = 0.3f;
		public bool teleporting;
		private static int maxAttack = 20;
		private static int[] attackNPC = new int[NPC.maxAttack];
		private byte netStream;
		private byte[] streamPlayer = new byte[255];
		public Vector2[] oldPos = new Vector2[10];
		public bool setFrameSize;
		public static int golemBoss = -1;
		public static int plantBoss = -1;
		public static int crimsonBoss = -1;
		public int netSkip;
		public bool netAlways;
		public int realLife = -1;
		public static int sWidth = 1920;
		public static int sHeight = 1080;
		private static int spawnRangeX = (int)((double)(NPC.sWidth / 16) * 0.7);
		private static int spawnRangeY = (int)((double)(NPC.sHeight / 16) * 0.7);
		public static int safeRangeX = (int)((double)(NPC.sWidth / 16) * 0.52);
		public static int safeRangeY = (int)((double)(NPC.sHeight / 16) * 0.52);
		private static int activeRangeX = (int)((double)NPC.sWidth * 2.1);
		private static int activeRangeY = (int)((double)NPC.sHeight * 2.1);
		private static int townRangeX = NPC.sWidth;
		private static int townRangeY = NPC.sHeight;
		public float npcSlots = 1f;
		private static bool noSpawnCycle = false;
		private static int activeTime = 750;
		public static int defaultSpawnRate = 600;
		public static int defaultMaxSpawns = 5;
		public bool wet;
		public bool honeyWet;
		public byte wetCount;
		public bool lavaWet;
		public int[] buffType = new int[5];
		public int[] buffTime = new int[5];
		public bool[] buffImmune = new bool[90];
		public bool midas;
		public bool ichor;
		public bool onFire;
		public bool onFire2;
		public bool onFrostBurn;
		public bool poisoned;
		public bool venom;
		public int lifeRegen;
		public int lifeRegenCount;
		public bool confused;
		public static bool downedBoss1 = false;
		public static bool downedBoss2 = false;
		public static bool downedBoss3 = false;
		public static bool downedQueenBee = false;
		public static bool savedGoblin = false;
		public static bool savedWizard = false;
		public static bool savedMech = false;
		public static bool downedGoblins = false;
		public static bool downedFrost = false;
		public static bool downedPirates = false;
		public static bool downedClown = false;
		public static bool downedPlantBoss = false;
		public static bool downedGolemBoss = false;
		public static bool downedMechBossAny = false;
		public static bool downedMechBoss1 = false;
		public static bool downedMechBoss2 = false;
		public static bool downedMechBoss3 = false;
		public static int spawnRate = NPC.defaultSpawnRate;
		public static int maxSpawns = NPC.defaultMaxSpawns;
		public int soundDelay;
		public Vector2 position;
		public Vector2 velocity;
		public Vector2 oldPosition;
		public Vector2 oldVelocity;
		public int width;
		public int height;
		public bool active;
		public int[] immune = new int[256];
		public int direction = 1;
		public int directionY = 1;
		public int type;
		public float[] ai = new float[NPC.maxAI];
		public float[] localAI = new float[NPC.maxAI];
		public int aiAction;
		public int aiStyle;
		public bool justHit;
		public int timeLeft;
		public int target = -1;
		public int damage;
		public int defense;
		public int defDamage;
		public int defDefense;
		public int soundHit;
		public int soundKilled;
		public int life;
		public int lifeMax;
		public Rectangle targetRect;
		public double frameCounter;
		public Rectangle frame;
		public string name;
		public string displayName;
		public Color color;
		public int alpha;
		public float scale = 1f;
		public float knockBackResist = 1f;
		public int oldDirection;
		public int oldDirectionY;
		public int oldTarget;
		public int whoAmI;
		public float rotation;
		public bool noGravity;
		public bool noTileCollide;
		public bool netUpdate;
		public bool netUpdate2;
		public bool collideX;
		public bool collideY;
		public bool boss;
		public int spriteDirection = -1;
		public bool behindTiles;
		public bool lavaImmune;
		public float value;
		public bool dontTakeDamage;
		public int netID;
		public bool townNPC;
		public bool homeless;
		public int homeTileX = -1;
		public int homeTileY = -1;
		public bool oldHomeless;
		public int oldHomeTileX = -1;
		public int oldHomeTileY = -1;
		public bool friendly;
		public bool closeDoor;
		public int doorX;
		public int doorY;
		public int friendlyRegen;
		public static void clrNames()
		{
			for (int i = 0; i < 331; i++)
			{
				Main.chrName[i] = "";
			}
		}
		public static void setNames()
		{
			if (WorldGen.genRand == null)
			{
				WorldGen.genRand = new Random();
			}
			int num = WorldGen.genRand.Next(24);
			string text;
			if (num == 0)
			{
				text = "Molly";
			}
			else if (num == 1)
			{
				text = "Amy";
			}
			else if (num == 2)
			{
				text = "Claire";
			}
			else if (num == 3)
			{
				text = "Emily";
			}
			else if (num == 4)
			{
				text = "Katie";
			}
			else if (num == 5)
			{
				text = "Madeline";
			}
			else if (num == 6)
			{
				text = "Katelyn";
			}
			else if (num == 7)
			{
				text = "Emma";
			}
			else if (num == 8)
			{
				text = "Abigail";
			}
			else if (num == 9)
			{
				text = "Carly";
			}
			else if (num == 10)
			{
				text = "Jenna";
			}
			else if (num == 11)
			{
				text = "Heather";
			}
			else if (num == 12)
			{
				text = "Katherine";
			}
			else if (num == 13)
			{
				text = "Caitlin";
			}
			else if (num == 14)
			{
				text = "Kaitlin";
			}
			else if (num == 15)
			{
				text = "Holly";
			}
			else if (num == 16)
			{
				text = "Kaitlyn";
			}
			else if (num == 17)
			{
				text = "Hannah";
			}
			else if (num == 18)
			{
				text = "Kathryn";
			}
			else if (num == 19)
			{
				text = "Lorraine";
			}
			else if (num == 20)
			{
				text = "Helen";
			}
			else if (num == 21)
			{
				text = "Kayla";
			}
			else if (num == 22)
			{
				text = "Lisa";
			}
			else
			{
				text = "Allison";
			}
			if (Main.chrName[18] == "")
			{
				Main.chrName[18] = text;
			}
			num = WorldGen.genRand.Next(24);
			if (num == 0)
			{
				text = "Shayna";
			}
			else if (num == 1)
			{
				text = "Korrie";
			}
			else if (num == 2)
			{
				text = "Ginger";
			}
			else if (num == 3)
			{
				text = "Brooke";
			}
			else if (num == 4)
			{
				text = "Jenny";
			}
			else if (num == 5)
			{
				text = "Autumn";
			}
			else if (num == 6)
			{
				text = "Nancy";
			}
			else if (num == 7)
			{
				text = "Ella";
			}
			else if (num == 8)
			{
				text = "Kayla";
			}
			else if (num == 9)
			{
				text = "Selah";
			}
			else if (num == 10)
			{
				text = "Sophia";
			}
			else if (num == 11)
			{
				text = "Marshanna";
			}
			else if (num == 12)
			{
				text = "Lauren";
			}
			else if (num == 13)
			{
				text = "Trisha";
			}
			else if (num == 14)
			{
				text = "Shirlena";
			}
			else if (num == 15)
			{
				text = "Sheena";
			}
			else if (num == 16)
			{
				text = "Ellen";
			}
			else if (num == 17)
			{
				text = "Amy";
			}
			else if (num == 18)
			{
				text = "Dawn";
			}
			else if (num == 19)
			{
				text = "Susana";
			}
			else if (num == 20)
			{
				text = "Meredith";
			}
			else if (num == 21)
			{
				text = "Selene";
			}
			else if (num == 22)
			{
				text = "Terra";
			}
			else
			{
				text = "Sally";
			}
			if (Main.chrName[124] == "")
			{
				Main.chrName[124] = text;
			}
			num = WorldGen.genRand.Next(24);
			if (num == 0)
			{
				text = "DeShawn";
			}
			else if (num == 1)
			{
				text = "DeAndre";
			}
			else if (num == 2)
			{
				text = "Marquis";
			}
			else if (num == 3)
			{
				text = "Darnell";
			}
			else if (num == 4)
			{
				text = "Terrell";
			}
			else if (num == 5)
			{
				text = "Malik";
			}
			else if (num == 6)
			{
				text = "Trevon";
			}
			else if (num == 7)
			{
				text = "Tyrone";
			}
			else if (num == 8)
			{
				text = "Willie";
			}
			else if (num == 9)
			{
				text = "Dominique";
			}
			else if (num == 10)
			{
				text = "Demetrius";
			}
			else if (num == 11)
			{
				text = "Reginald";
			}
			else if (num == 12)
			{
				text = "Jamal";
			}
			else if (num == 13)
			{
				text = "Maurice";
			}
			else if (num == 14)
			{
				text = "Jalen";
			}
			else if (num == 15)
			{
				text = "Darius";
			}
			else if (num == 16)
			{
				text = "Xavier";
			}
			else if (num == 17)
			{
				text = "Terrance";
			}
			else if (num == 18)
			{
				text = "Andre";
			}
			else if (num == 19)
			{
				text = "Dante";
			}
			else if (num == 20)
			{
				text = "Brimst";
			}
			else if (num == 21)
			{
				text = "Bronson";
			}
			else if (num == 22)
			{
				text = "Tony";
			}
			else
			{
				text = "Darryl";
			}
			if (Main.chrName[19] == "")
			{
				Main.chrName[19] = text;
			}
			num = WorldGen.genRand.Next(35);
			if (num == 0)
			{
				text = "Joe";
			}
			else if (num == 1)
			{
				text = "Connor";
			}
			else if (num == 2)
			{
				text = "Tanner";
			}
			else if (num == 3)
			{
				text = "Wyatt";
			}
			else if (num == 4)
			{
				text = "Cody";
			}
			else if (num == 5)
			{
				text = "Levi";
			}
			else if (num == 6)
			{
				text = "Luke";
			}
			else if (num == 7)
			{
				text = "Jack";
			}
			else if (num == 8)
			{
				text = "Scott";
			}
			else if (num == 9)
			{
				text = "Logan";
			}
			else if (num == 10)
			{
				text = "Cole";
			}
			else if (num == 11)
			{
				text = "Asher";
			}
			else if (num == 12)
			{
				text = "Bradley";
			}
			else if (num == 13)
			{
				text = "Jacob";
			}
			else if (num == 14)
			{
				text = "Garrett";
			}
			else if (num == 15)
			{
				text = "Dylan";
			}
			else if (num == 16)
			{
				text = "Maxwell";
			}
			else if (num == 17)
			{
				text = "Steve";
			}
			else if (num == 18)
			{
				text = "Brett";
			}
			else if (num == 19)
			{
				text = "Andrew";
			}
			else if (num == 20)
			{
				text = "Harley";
			}
			else if (num == 21)
			{
				text = "Kyle";
			}
			else if (num == 22)
			{
				text = "Jake";
			}
			else if (num == 23)
			{
				text = "Ryan";
			}
			else if (num == 24)
			{
				text = "Jeffrey";
			}
			else if (num == 25)
			{
				text = "Seth";
			}
			else if (num == 26)
			{
				text = "Marty";
			}
			else if (num == 27)
			{
				text = "Brandon";
			}
			else if (num == 28)
			{
				text = "Zach";
			}
			else if (num == 29)
			{
				text = "Jeff";
			}
			else if (num == 30)
			{
				text = "Daniel";
			}
			else if (num == 31)
			{
				text = "Trent";
			}
			else if (num == 32)
			{
				text = "Kevin";
			}
			else if (num == 33)
			{
				text = "Brian";
			}
			else
			{
				text = "Colin";
			}
			if (Main.chrName[22] == "")
			{
				Main.chrName[22] = text;
			}
			num = WorldGen.genRand.Next(22);
			if (num == 0)
			{
				text = "Alalia";
			}
			else if (num == 1)
			{
				text = "Alalia";
			}
			else if (num == 2)
			{
				text = "Alura";
			}
			else if (num == 3)
			{
				text = "Ariella";
			}
			else if (num == 4)
			{
				text = "Caelia";
			}
			else if (num == 5)
			{
				text = "Calista";
			}
			else if (num == 6)
			{
				text = "Chryseis";
			}
			else if (num == 7)
			{
				text = "Emerenta";
			}
			else if (num == 8)
			{
				text = "Elysia";
			}
			else if (num == 9)
			{
				text = "Evvie";
			}
			else if (num == 10)
			{
				text = "Faye";
			}
			else if (num == 11)
			{
				text = "Felicitae";
			}
			else if (num == 12)
			{
				text = "Lunette";
			}
			else if (num == 13)
			{
				text = "Nata";
			}
			else if (num == 14)
			{
				text = "Nissa";
			}
			else if (num == 15)
			{
				text = "Tatiana";
			}
			else if (num == 16)
			{
				text = "Rosalva";
			}
			else if (num == 17)
			{
				text = "Shea";
			}
			else if (num == 18)
			{
				text = "Tania";
			}
			else if (num == 19)
			{
				text = "Isis";
			}
			else if (num == 20)
			{
				text = "Celestia";
			}
			else
			{
				text = "Xylia";
			}
			if (Main.chrName[20] == "")
			{
				Main.chrName[20] = text;
			}
			num = WorldGen.genRand.Next(22);
			if (num == 0)
			{
				text = "Dolbere";
			}
			else if (num == 1)
			{
				text = "Bazdin";
			}
			else if (num == 2)
			{
				text = "Durim";
			}
			else if (num == 3)
			{
				text = "Tordak";
			}
			else if (num == 4)
			{
				text = "Garval";
			}
			else if (num == 5)
			{
				text = "Morthal";
			}
			else if (num == 6)
			{
				text = "Oten";
			}
			else if (num == 7)
			{
				text = "Dolgen";
			}
			else if (num == 8)
			{
				text = "Gimli";
			}
			else if (num == 9)
			{
				text = "Gimut";
			}
			else if (num == 10)
			{
				text = "Duerthen";
			}
			else if (num == 11)
			{
				text = "Beldin";
			}
			else if (num == 12)
			{
				text = "Jarut";
			}
			else if (num == 13)
			{
				text = "Ovbere";
			}
			else if (num == 14)
			{
				text = "Norkas";
			}
			else if (num == 15)
			{
				text = "Dolgrim";
			}
			else if (num == 16)
			{
				text = "Boften";
			}
			else if (num == 17)
			{
				text = "Norsun";
			}
			else if (num == 18)
			{
				text = "Dias";
			}
			else if (num == 19)
			{
				text = "Fikod";
			}
			else if (num == 20)
			{
				text = "Urist";
			}
			else
			{
				text = "Darur";
			}
			if (Main.chrName[38] == "")
			{
				Main.chrName[38] = text;
			}
			num = WorldGen.genRand.Next(21);
			if (num == 0)
			{
				text = "Dalamar";
			}
			else if (num == 1)
			{
				text = "Dulais";
			}
			else if (num == 2)
			{
				text = "Elric";
			}
			else if (num == 3)
			{
				text = "Arddun";
			}
			else if (num == 4)
			{
				text = "Maelor";
			}
			else if (num == 5)
			{
				text = "Leomund";
			}
			else if (num == 6)
			{
				text = "Hirael";
			}
			else if (num == 7)
			{
				text = "Gwentor";
			}
			else if (num == 8)
			{
				text = "Greum";
			}
			else if (num == 9)
			{
				text = "Gearroid";
			}
			else if (num == 10)
			{
				text = "Fizban";
			}
			else if (num == 11)
			{
				text = "Ningauble";
			}
			else if (num == 12)
			{
				text = "Seonag";
			}
			else if (num == 13)
			{
				text = "Sargon";
			}
			else if (num == 14)
			{
				text = "Merlyn";
			}
			else if (num == 15)
			{
				text = "Magius";
			}
			else if (num == 16)
			{
				text = "Berwyn";
			}
			else if (num == 17)
			{
				text = "Arwyn";
			}
			else if (num == 18)
			{
				text = "Alasdair";
			}
			else if (num == 19)
			{
				text = "Tagar";
			}
			else
			{
				text = "Xanadu";
			}
			if (Main.chrName[108] == "")
			{
				Main.chrName[108] = text;
			}
			num = WorldGen.genRand.Next(23);
			if (num == 0)
			{
				text = "Alfred";
			}
			else if (num == 1)
			{
				text = "Barney";
			}
			else if (num == 2)
			{
				text = "Calvin";
			}
			else if (num == 3)
			{
				text = "Edmund";
			}
			else if (num == 4)
			{
				text = "Edwin";
			}
			else if (num == 5)
			{
				text = "Eugene";
			}
			else if (num == 6)
			{
				text = "Frank";
			}
			else if (num == 7)
			{
				text = "Frederick";
			}
			else if (num == 8)
			{
				text = "Gilbert";
			}
			else if (num == 9)
			{
				text = "Gus";
			}
			else if (num == 10)
			{
				text = "Wilbur";
			}
			else if (num == 11)
			{
				text = "Seymour";
			}
			else if (num == 12)
			{
				text = "Louis";
			}
			else if (num == 13)
			{
				text = "Humphrey";
			}
			else if (num == 14)
			{
				text = "Harold";
			}
			else if (num == 15)
			{
				text = "Milton";
			}
			else if (num == 16)
			{
				text = "Mortimer";
			}
			else if (num == 17)
			{
				text = "Howard";
			}
			else if (num == 18)
			{
				text = "Walter";
			}
			else if (num == 19)
			{
				text = "Finn";
			}
			else if (num == 20)
			{
				text = "Isacc";
			}
			else if (num == 21)
			{
				text = "Joseph";
			}
			else
			{
				text = "Ralph";
			}
			if (Main.chrName[17] == "")
			{
				Main.chrName[17] = text;
			}
			num = WorldGen.genRand.Next(24);
			if (num == 0)
			{
				text = "Sebastian";
			}
			else if (num == 1)
			{
				text = "Rupert";
			}
			else if (num == 2)
			{
				text = "Clive";
			}
			else if (num == 3)
			{
				text = "Nigel";
			}
			else if (num == 4)
			{
				text = "Mervyn";
			}
			else if (num == 5)
			{
				text = "Cedric";
			}
			else if (num == 6)
			{
				text = "Pip";
			}
			else if (num == 7)
			{
				text = "Cyril";
			}
			else if (num == 8)
			{
				text = "Fitz";
			}
			else if (num == 9)
			{
				text = "Lloyd";
			}
			else if (num == 10)
			{
				text = "Arthur";
			}
			else if (num == 11)
			{
				text = "Rodney";
			}
			else if (num == 12)
			{
				text = "Graham";
			}
			else if (num == 13)
			{
				text = "Edward";
			}
			else if (num == 14)
			{
				text = "Alfred";
			}
			else if (num == 15)
			{
				text = "Edmund";
			}
			else if (num == 16)
			{
				text = "Henry";
			}
			else if (num == 17)
			{
				text = "Herald";
			}
			else if (num == 18)
			{
				text = "Roland";
			}
			else if (num == 19)
			{
				text = "Lincoln";
			}
			else if (num == 20)
			{
				text = "Lloyd";
			}
			else if (num == 21)
			{
				text = "Edgar";
			}
			else if (num == 22)
			{
				text = "Eustace";
			}
			else
			{
				text = "Rodrick";
			}
			if (Main.chrName[54] == "")
			{
				Main.chrName[54] = text;
			}
			num = WorldGen.genRand.Next(25);
			if (num == 0)
			{
				text = "Grodax";
			}
			else if (num == 1)
			{
				text = "Sarx";
			}
			else if (num == 2)
			{
				text = "Xon";
			}
			else if (num == 3)
			{
				text = "Mrunok";
			}
			else if (num == 4)
			{
				text = "Nuxatk";
			}
			else if (num == 5)
			{
				text = "Tgerd";
			}
			else if (num == 6)
			{
				text = "Darz";
			}
			else if (num == 7)
			{
				text = "Smador";
			}
			else if (num == 8)
			{
				text = "Stazen";
			}
			else if (num == 9)
			{
				text = "Mobart";
			}
			else if (num == 10)
			{
				text = "Knogs";
			}
			else if (num == 11)
			{
				text = "Tkanus";
			}
			else if (num == 12)
			{
				text = "Negurk";
			}
			else if (num == 13)
			{
				text = "Nort";
			}
			else if (num == 14)
			{
				text = "Durnok";
			}
			else if (num == 15)
			{
				text = "Trogem";
			}
			else if (num == 16)
			{
				text = "Stezom";
			}
			else if (num == 17)
			{
				text = "Gnudar";
			}
			else if (num == 18)
			{
				text = "Ragz";
			}
			else if (num == 19)
			{
				text = "Fahd";
			}
			else if (num == 20)
			{
				text = "Xanos";
			}
			else if (num == 21)
			{
				text = "Arback";
			}
			else if (num == 22)
			{
				text = "Fjell";
			}
			else if (num == 23)
			{
				text = "Dalek";
			}
			else
			{
				text = "Knub";
			}
			if (Main.chrName[107] == "")
			{
				Main.chrName[107] = text;
			}
			num = WorldGen.genRand.Next(12);
			if (num == 0)
			{
				text = "Reishi";
			}
			else if (num == 1)
			{
				text = "Maitake";
			}
			else if (num == 2)
			{
				text = "Chanterelle";
			}
			else if (num == 3)
			{
				text = "Porcini";
			}
			else if (num == 4)
			{
				text = "Shimeji";
			}
			else if (num == 5)
			{
				text = "Amanita";
			}
			else if (num == 6)
			{
				text = "Muscaria";
			}
			else if (num == 7)
			{
				text = "Agaric";
			}
			else if (num == 8)
			{
				text = "Cremini";
			}
			else if (num == 9)
			{
				text = "Morel";
			}
			else if (num == 10)
			{
				text = "Enoki";
			}
			else
			{
				text = "Shiitake";
			}
			if (Main.chrName[160] == "")
			{
				Main.chrName[160] = text;
			}
			num = WorldGen.genRand.Next(20);
			if (num == 0)
			{
				text = "Whitney";
			}
			else if (num == 1)
			{
				text = "Verity";
			}
			else if (num == 2)
			{
				text = "Ada";
			}
			else if (num == 3)
			{
				text = "Cornelia";
			}
			else if (num == 4)
			{
				text = "Lydia";
			}
			else if (num == 5)
			{
				text = "Leila";
			}
			else if (num == 6)
			{
				text = "Minerva";
			}
			else if (num == 7)
			{
				text = "Emeline";
			}
			else if (num == 8)
			{
				text = "Cynthia";
			}
			else if (num == 9)
			{
				text = "Fidelia";
			}
			else if (num == 10)
			{
				text = "Lilly";
			}
			else if (num == 11)
			{
				text = "Phoebe";
			}
			else if (num == 12)
			{
				text = "Zylphia";
			}
			else if (num == 13)
			{
				text = "Zelda";
			}
			else if (num == 14)
			{
				text = "Selina";
			}
			else if (num == 15)
			{
				text = "Hope";
			}
			else if (num == 16)
			{
				text = "Isabella";
			}
			else if (num == 17)
			{
				text = "Judith";
			}
			else if (num == 18)
			{
				text = "Savannah";
			}
			else
			{
				text = "Vivian";
			}
			if (Main.chrName[178] == "")
			{
				Main.chrName[178] = text;
			}
			num = WorldGen.genRand.Next(16);
			if (num == 0)
			{
				text = "Abdosir";
			}
			else if (num == 1)
			{
				text = "Akbar";
			}
			else if (num == 2)
			{
				text = "Bodashtart";
			}
			else if (num == 3)
			{
				text = "Danel";
			}
			else if (num == 4)
			{
				text = "Hanno";
			}
			else if (num == 5)
			{
				text = "Hiram";
			}
			else if (num == 6)
			{
				text = "Kanmi";
			}
			else if (num == 7)
			{
				text = "Philosir";
			}
			else if (num == 8)
			{
				text = "Tabnit";
			}
			else if (num == 9)
			{
				text = "Yutpan";
			}
			else if (num == 10)
			{
				text = "Ahirom";
			}
			else if (num == 11)
			{
				text = "Batnoam";
			}
			else if (num == 12)
			{
				text = "Sikarbaal";
			}
			else if (num == 13)
			{
				text = "Hannibal";
			}
			else if (num == 14)
			{
				text = "Yehomilk";
			}
			else
			{
				text = "Ahinadab";
			}
			if (Main.chrName[207] == "")
			{
				Main.chrName[207] = text;
			}
			num = WorldGen.genRand.Next(18);
			if (num == 0)
			{
				text = "Candy";
			}
			else if (num == 1)
			{
				text = "Roxanne";
			}
			else if (num == 2)
			{
				text = "Trixy";
			}
			else if (num == 3)
			{
				text = "Destiny";
			}
			else if (num == 4)
			{
				text = "Lexus";
			}
			else if (num == 5)
			{
				text = "Bambi";
			}
			else if (num == 6)
			{
				text = "Bailey";
			}
			else if (num == 7)
			{
				text = "Glitter";
			}
			else if (num == 8)
			{
				text = "Sparkle";
			}
			else if (num == 9)
			{
				text = "Paris";
			}
			else if (num == 10)
			{
				text = "Dazzle";
			}
			else if (num == 11)
			{
				text = "Fantasy";
			}
			else if (num == 12)
			{
				text = "Bunny";
			}
			else if (num == 13)
			{
				text = "Sugar";
			}
			else if (num == 14)
			{
				text = "Fantasia";
			}
			else if (num == 15)
			{
				text = "Star";
			}
			else if (num == 16)
			{
				text = "Isis";
			}
			else
			{
				text = "Cherry";
			}
			if (Main.chrName[208] == "")
			{
				Main.chrName[208] = text;
			}
			num = WorldGen.genRand.Next(23);
			if (num == 0)
			{
				text = "Alpha";
			}
			else if (num == 1)
			{
				text = "Beta";
			}
			else if (num == 2)
			{
				text = "Delta";
			}
			else if (num == 3)
			{
				text = "Omega";
			}
			else if (num == 4)
			{
				text = "Gamma";
			}
			else if (num == 5)
			{
				text = "Theta";
			}
			else if (num == 6)
			{
				text = "Kappa";
			}
			else if (num == 7)
			{
				text = "Omicron";
			}
			else if (num == 8)
			{
				text = "Sigma";
			}
			else if (num == 9)
			{
				text = "Upsilon";
			}
			else if (num == 10)
			{
				text = "Phi";
			}
			else if (num == 11)
			{
				text = "Zeta";
			}
			else if (num == 12)
			{
				text = "Lambda";
			}
			else if (num == 13)
			{
				text = "Nu";
			}
			else if (num == 14)
			{
				text = "Ci";
			}
			else if (num == 15)
			{
				text = "Rho";
			}
			else if (num == 16)
			{
				text = "Phi";
			}
			else if (num == 17)
			{
				text = "Fender";
			}
			else if (num == 18)
			{
				text = "T-3E0";
			}
			else if (num == 19)
			{
				text = "Niner-7";
			}
			else if (num == 20)
			{
				text = "A.N.D.Y";
			}
			else if (num == 21)
			{
				text = "Syn-X";
			}
			else
			{
				text = "Mu";
			}
			if (Main.chrName[209] == "")
			{
				Main.chrName[209] = text;
			}
			num = WorldGen.genRand.Next(17);
			if (num == 0)
			{
				text = "Marco";
			}
			else if (num == 1)
			{
				text = "Guido";
			}
			else if (num == 2)
			{
				text = "Enzo";
			}
			else if (num == 3)
			{
				text = "Martino";
			}
			else if (num == 4)
			{
				text = "Mauro";
			}
			else if (num == 5)
			{
				text = "Lorenzo";
			}
			else if (num == 6)
			{
				text = "Ludo";
			}
			else if (num == 7)
			{
				text = "Luciano";
			}
			else if (num == 8)
			{
				text = "Carlo";
			}
			else if (num == 9)
			{
				text = "Bruno";
			}
			else if (num == 10)
			{
				text = "Mario";
			}
			else if (num == 11)
			{
				text = "Leonardo";
			}
			else if (num == 12)
			{
				text = "Raphael";
			}
			else if (num == 13)
			{
				text = "Luigi";
			}
			else if (num == 14)
			{
				text = "Luca";
			}
			else if (num == 15)
			{
				text = "Darren";
			}
			else
			{
				text = "Stefano";
			}
			if (Main.chrName[227] == "")
			{
				Main.chrName[227] = text;
			}
			num = WorldGen.genRand.Next(10);
			if (num == 0)
			{
				text = "Abibe";
			}
			else if (num == 1)
			{
				text = "Jamundi";
			}
			else if (num == 2)
			{
				text = "U'wa";
			}
			else if (num == 3)
			{
				text = "Tairona";
			}
			else if (num == 4)
			{
				text = "Xirigua";
			}
			else if (num == 5)
			{
				text = "Zop'a";
			}
			else if (num == 6)
			{
				text = "Opuni";
			}
			else if (num == 7)
			{
				text = "Kogi-ghi";
			}
			else if (num == 8)
			{
				text = "Konah";
			}
			else
			{
				text = "Gboto";
			}
			if (Main.chrName[228] == "")
			{
				Main.chrName[228] = text;
			}
			num = WorldGen.genRand.Next(11);
			if (num == 0)
			{
				text = "David";
			}
			else if (num == 1)
			{
				text = "Red Beard";
			}
			else if (num == 2)
			{
				text = "Jack";
			}
			else if (num == 3)
			{
				text = "Black Beard";
			}
			else if (num == 4)
			{
				text = "Captain Morgan";
			}
			else if (num == 5)
			{
				text = "Wet Beard";
			}
			else if (num == 6)
			{
				text = "James T. Beard";
			}
			else if (num == 7)
			{
				text = "Gunpowder Garry";
			}
			else if (num == 8)
			{
				text = "Captain Stoney Dirt";
			}
			else if (num == 9)
			{
				text = "Jake";
			}
			else
			{
				text = "Captain Bullywort";
			}
			if (Main.chrName[229] == "")
			{
				Main.chrName[229] = text;
			}
		}
		public void netDefaults(int type)
		{
			netDefaultsHelper(type);
			if (type > -66)
			{
				ServerApi.Hooks.InvokeNpcNetDefaults(ref type, this);
			}
		}
		public void netDefaultsHelper(int type)
		{
			if (type < 0)
			{
				if (type == -1)
				{
					this.SetDefaults("Slimeling");
					return;
				}
				if (type == -2)
				{
					this.SetDefaults("Slimer2");
					return;
				}
				if (type == -3)
				{
					this.SetDefaults("Green Slime");
					return;
				}
				if (type == -4)
				{
					this.SetDefaults("Pinky");
					return;
				}
				if (type == -5)
				{
					this.SetDefaults("Baby Slime");
					return;
				}
				if (type == -6)
				{
					this.SetDefaults("Black Slime");
					return;
				}
				if (type == -7)
				{
					this.SetDefaults("Purple Slime");
					return;
				}
				if (type == -8)
				{
					this.SetDefaults("Red Slime");
					return;
				}
				if (type == -9)
				{
					this.SetDefaults("Yellow Slime");
					return;
				}
				if (type == -10)
				{
					this.SetDefaults("Jungle Slime");
					return;
				}
				if (type == -11)
				{
					this.SetDefaults("Little Eater");
					return;
				}
				if (type == -12)
				{
					this.SetDefaults("Big Eater");
					return;
				}
				if (type == -13)
				{
					this.SetDefaults("Short Bones");
					return;
				}
				if (type == -14)
				{
					this.SetDefaults("Big Boned");
					return;
				}
				if (type == -15)
				{
					this.SetDefaults("Heavy Skeleton");
					return;
				}
				if (type == -16)
				{
					this.SetDefaults("Little Stinger");
					return;
				}
				if (type == -17)
				{
					this.SetDefaults("Big Stinger");
					return;
				}
				if (type == -18)
				{
					this.SetDefaults("Tiny Moss Hornet");
					return;
				}
				if (type == -19)
				{
					this.SetDefaults("Little Moss Hornet");
					return;
				}
				if (type == -20)
				{
					this.SetDefaults("Big Moss Hornet");
					return;
				}
				if (type == -21)
				{
					this.SetDefaults("Giant Moss Hornet");
					return;
				}
				if (type == -22)
				{
					this.SetDefaults("Little Crimera");
					return;
				}
				if (type == -23)
				{
					this.SetDefaults("Big Crimera");
					return;
				}
				if (type == -24)
				{
					this.SetDefaults("Little Crimslime");
					return;
				}
				if (type == -25)
				{
					this.SetDefaults("Big Crimslime");
					return;
				}
				if (type == -26)
				{
					this.SetDefaults("Small Zombie");
					return;
				}
				if (type == -27)
				{
					this.SetDefaults("Big Zombie");
					return;
				}
				if (type == -28)
				{
					this.SetDefaults("Small Bald Zombie");
					return;
				}
				if (type == -29)
				{
					this.SetDefaults("Big Bald Zombie");
					return;
				}
				if (type == -30)
				{
					this.SetDefaults("Small Pincushion Zombie");
					return;
				}
				if (type == -31)
				{
					this.SetDefaults("Big Pincushion Zombie");
					return;
				}
				if (type == -32)
				{
					this.SetDefaults("Small Slimed Zombie");
					return;
				}
				if (type == -33)
				{
					this.SetDefaults("Big Slimed Zombie");
					return;
				}
				if (type == -34)
				{
					this.SetDefaults("Small Swamp Zombie");
					return;
				}
				if (type == -35)
				{
					this.SetDefaults("Big Swamp Zombie");
					return;
				}
				if (type == -36)
				{
					this.SetDefaults("Small Twiggy Zombie");
					return;
				}
				if (type == -37)
				{
					this.SetDefaults("Big Twiggy Zombie");
					return;
				}
				if (type == -38)
				{
					this.SetDefaults("Cataract Eye 2");
					return;
				}
				if (type == -39)
				{
					this.SetDefaults("Sleepy Eye 2");
					return;
				}
				if (type == -40)
				{
					this.SetDefaults("Dialated Eye 2");
					return;
				}
				if (type == -41)
				{
					this.SetDefaults("Green Eye 2");
					return;
				}
				if (type == -42)
				{
					this.SetDefaults("Purple Eye 2");
					return;
				}
				if (type == -43)
				{
					this.SetDefaults("Demon Eye 2");
					return;
				}
				if (type == -44)
				{
					this.SetDefaults("Small Female Zombie");
					return;
				}
				if (type == -45)
				{
					this.SetDefaults("Big Female Zombie");
					return;
				}
				if (type == -46)
				{
					this.SetDefaults("Small Skeleton");
					return;
				}
				if (type == -47)
				{
					this.SetDefaults("Big Skeleton");
					return;
				}
				if (type == -48)
				{
					this.SetDefaults("Small Headache Skeleton");
					return;
				}
				if (type == -49)
				{
					this.SetDefaults("Big Headache Skeleton");
					return;
				}
				if (type == -50)
				{
					this.SetDefaults("Small Misassembled Skeleton");
					return;
				}
				if (type == -51)
				{
					this.SetDefaults("Big Misassembled Skeleton");
					return;
				}
				if (type == -52)
				{
					this.SetDefaults("Small Pantless Skeleton");
					return;
				}
				if (type == -53)
				{
					this.SetDefaults("Big Pantless Skeleton");
					return;
				}
				if (type == -54)
				{
					this.SetDefaults("Small Rain Zombie");
					return;
				}
				if (type == -55)
				{
					this.SetDefaults("Big Rain Zombie");
					return;
				}
				if (type == -56)
				{
					this.SetDefaults("Little Hornet Fatty");
					return;
				}
				if (type == -57)
				{
					this.SetDefaults("Big Hornet Fatty");
					return;
				}
				if (type == -58)
				{
					this.SetDefaults("Little Hornet Honey");
					return;
				}
				if (type == -59)
				{
					this.SetDefaults("Big Hornet Honey");
					return;
				}
				if (type == -60)
				{
					this.SetDefaults("Little Hornet Leafy");
					return;
				}
				if (type == -61)
				{
					this.SetDefaults("Big Hornet Leafy");
					return;
				}
				if (type == -62)
				{
					this.SetDefaults("Little Hornet Spikey");
					return;
				}
				if (type == -63)
				{
					this.SetDefaults("Big Hornet Spikey");
					return;
				}
				if (type == -64)
				{
					this.SetDefaults("Little Hornet Stingy");
					return;
				}
				if (type == -65)
				{
					this.SetDefaults("Big Hornet Stingy");
					return;
				}
			}
			else
			{
				this.SetDefaults(type, -1f);
			}
		}
		public void SetDefaults(string Name)
		{
			this.SetDefaults(0, -1f);
			if (Name == "Slimeling")
			{
				this.SetDefaults(81, 0.6f);
				this.name = Name;
				this.damage = 45;
				this.defense = 10;
				this.life = 90;
				this.knockBackResist = 1.2f;
				this.value = 100f;
				this.netID = -1;
			}
			else if (Name == "Slimer2")
			{
				this.SetDefaults(81, 0.9f);
				this.displayName = "Slimer";
				this.name = Name;
				this.damage = 45;
				this.defense = 20;
				this.life = 90;
				this.knockBackResist = 1.2f;
				this.value = 100f;
				this.netID = -2;
			}
			else if (Name == "Green Slime")
			{
				this.SetDefaults(1, 0.9f);
				this.name = Name;
				this.damage = 6;
				this.defense = 0;
				this.life = 14;
				this.knockBackResist = 1.2f;
				this.color = new Color(0, 220, 40, 100);
				this.value = 3f;
				this.netID = -3;
			}
			else if (Name == "Pinky")
			{
				this.SetDefaults(1, 0.6f);
				this.name = Name;
				this.damage = 5;
				this.defense = 5;
				this.life = 150;
				this.knockBackResist = 1.4f;
				this.color = new Color(250, 30, 90, 90);
				this.value = 10000f;
				this.netID = -4;
			}
			else if (Name == "Baby Slime")
			{
				this.SetDefaults(1, 0.9f);
				this.name = Name;
				this.damage = 13;
				this.defense = 4;
				this.life = 30;
				this.knockBackResist = 0.95f;
				this.alpha = 120;
				this.color = new Color(0, 0, 0, 50);
				this.value = 10f;
				this.netID = -5;
			}
			else if (Name == "Black Slime")
			{
				this.SetDefaults(1, -1f);
				this.name = Name;
				this.damage = 15;
				this.defense = 4;
				this.life = 45;
				this.color = new Color(0, 0, 0, 50);
				this.value = 20f;
				this.netID = -6;
			}
			else if (Name == "Purple Slime")
			{
				this.SetDefaults(1, 1.2f);
				this.name = Name;
				this.damage = 12;
				this.defense = 6;
				this.life = 40;
				this.knockBackResist = 0.9f;
				this.color = new Color(200, 0, 255, 150);
				this.value = 10f;
				this.netID = -7;
			}
			else if (Name == "Red Slime")
			{
				this.SetDefaults(1, -1f);
				this.name = Name;
				this.damage = 12;
				this.defense = 4;
				this.life = 35;
				this.color = new Color(255, 30, 0, 100);
				this.value = 8f;
				this.netID = -8;
			}
			else if (Name == "Yellow Slime")
			{
				this.SetDefaults(1, 1.2f);
				this.name = Name;
				this.damage = 15;
				this.defense = 7;
				this.life = 45;
				this.color = new Color(255, 255, 0, 100);
				this.value = 10f;
				this.netID = -9;
			}
			else if (Name == "Jungle Slime")
			{
				this.SetDefaults(1, 1.1f);
				this.name = Name;
				this.damage = 18;
				this.defense = 6;
				this.life = 60;
				this.color = new Color(143, 215, 93, 100);
				this.value = 500f;
				this.netID = -10;
			}
			else if (Name == "Little Eater")
			{
				this.SetDefaults(6, 0.85f);
				this.name = Name;
				this.displayName = "Eater of Souls";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -11;
			}
			else if (Name == "Big Eater")
			{
				this.SetDefaults(6, 1.15f);
				this.name = Name;
				this.displayName = "Eater of Souls";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -12;
			}
			else if (Name == "Short Bones")
			{
				this.SetDefaults(31, 0.9f);
				this.name = Name;
				this.displayName = "Angry Bones";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.netID = -13;
			}
			else if (Name == "Big Boned")
			{
				this.SetDefaults(31, 1.15f);
				this.name = Name;
				this.displayName = "Angry Bones";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((double)((float)this.damage * this.scale) * 1.1);
				this.life = (int)((double)((float)this.life * this.scale) * 1.1);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots = 2f;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -14;
			}
			else if (Name == "Heavy Skeleton")
			{
				this.SetDefaults(77, 1.15f);
				this.name = Name;
				this.displayName = "Armored Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((double)((float)this.damage * this.scale) * 1.1);
				this.life = 400;
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots = 2f;
				this.knockBackResist *= 2f - this.scale;
				this.height = 44;
				this.netID = -15;
			}
			else if (Name == "Little Stinger")
			{
				this.SetDefaults(42, 0.85f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -16;
			}
			else if (Name == "Big Stinger")
			{
				this.SetDefaults(42, 1.2f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -17;
			}
			else if (Name == "Tiny Moss Hornet")
			{
				this.SetDefaults(176, 0.8f);
				this.displayName = "Moss Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -18;
			}
			else if (Name == "Little Moss Hornet")
			{
				this.SetDefaults(176, 0.9f);
				this.displayName = "Moss Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -19;
			}
			else if (Name == "Big Moss Hornet")
			{
				this.SetDefaults(176, 1.1f);
				this.displayName = "Moss Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -20;
			}
			else if (Name == "Giant Moss Hornet")
			{
				this.SetDefaults(176, 1.2f);
				this.displayName = "Moss Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -21;
			}
			else if (Name == "Little Crimera")
			{
				this.SetDefaults(173, 0.85f);
				this.displayName = "Crimera";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -22;
			}
			else if (Name == "Big Crimera")
			{
				this.SetDefaults(173, 1.15f);
				this.displayName = "Crimera";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -23;
			}
			else if (Name == "Little Crimslime")
			{
				this.SetDefaults(183, 0.85f);
				this.displayName = "Crimslime";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -24;
			}
			else if (Name == "Big Crimslime")
			{
				this.SetDefaults(183, 1.15f);
				this.displayName = "Crimslime";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -25;
			}
			else if (Name == "Small Zombie")
			{
				this.SetDefaults(3, 0.9f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -26;
			}
			else if (Name == "Big Zombie")
			{
				this.SetDefaults(3, 1.1f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -27;
			}
			else if (Name == "Small Bald Zombie")
			{
				this.SetDefaults(132, 0.85f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -28;
			}
			else if (Name == "Big Bald Zombie")
			{
				this.SetDefaults(132, 1.15f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -29;
			}
			else if (Name == "Small Pincushion Zombie")
			{
				this.SetDefaults(186, 0.93f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -30;
			}
			else if (Name == "Big Pincushion Zombie")
			{
				this.SetDefaults(186, 1.13f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -31;
			}
			else if (Name == "Small Slimed Zombie")
			{
				this.SetDefaults(187, 0.89f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -32;
			}
			else if (Name == "Big Slimed Zombie")
			{
				this.SetDefaults(187, 1.11f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -33;
			}
			else if (Name == "Small Swamp Zombie")
			{
				this.SetDefaults(188, 0.87f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -34;
			}
			else if (Name == "Big Swamp Zombie")
			{
				this.SetDefaults(188, 1.13f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -35;
			}
			else if (Name == "Small Twiggy Zombie")
			{
				this.SetDefaults(189, 0.92f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -36;
			}
			else if (Name == "Big Twiggy Zombie")
			{
				this.SetDefaults(189, 1.08f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -37;
			}
			else if (Name == "Cataract Eye 2")
			{
				this.SetDefaults(190, 1.15f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -38;
			}
			else if (Name == "Sleepy Eye 2")
			{
				this.SetDefaults(191, 1.1f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -39;
			}
			else if (Name == "Dialated Eye 2")
			{
				this.SetDefaults(192, 0.9f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -40;
			}
			else if (Name == "Green Eye 2")
			{
				this.SetDefaults(193, 0.85f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -41;
			}
			else if (Name == "Purple Eye 2")
			{
				this.SetDefaults(194, 1.1f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -42;
			}
			else if (Name == "Demon Eye 2")
			{
				this.SetDefaults(2, 1.15f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -43;
			}
			else if (Name == "Small Female Zombie")
			{
				this.SetDefaults(200, 0.87f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -44;
			}
			else if (Name == "Big Female Zombie")
			{
				this.SetDefaults(200, 1.05f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -45;
			}
			else if (Name == "Small Skeleton")
			{
				this.SetDefaults(21, 0.9f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -46;
			}
			else if (Name == "Big Skeleton")
			{
				this.SetDefaults(21, 1.1f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -47;
			}
			else if (Name == "Small Headache Skeleton")
			{
				this.SetDefaults(201, 0.93f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -48;
			}
			else if (Name == "Big Headache Skeleton")
			{
				this.SetDefaults(201, 1.07f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -49;
			}
			else if (Name == "Small Misassembled Skeleton")
			{
				this.SetDefaults(202, 0.87f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -50;
			}
			else if (Name == "Big Misassembled Skeleton")
			{
				this.SetDefaults(202, 1.13f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -51;
			}
			else if (Name == "Small Pantless Skeleton")
			{
				this.SetDefaults(203, 0.85f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -52;
			}
			else if (Name == "Big Pantless Skeleton")
			{
				this.SetDefaults(203, 1.15f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -53;
			}
			else if (Name == "Small Rain Zombie")
			{
				this.SetDefaults(223, 0.9f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -54;
			}
			else if (Name == "Big Rain Zombie")
			{
				this.SetDefaults(223, 1.1f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -55;
			}
			else if (Name == "Little Hornet Fatty")
			{
				this.SetDefaults(231, 0.85f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -56;
			}
			else if (Name == "Big Hornet Fatty")
			{
				this.SetDefaults(231, 1.25f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -57;
			}
			else if (Name == "Little Hornet Honey")
			{
				this.SetDefaults(232, 0.8f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -58;
			}
			else if (Name == "Big Hornet Honey")
			{
				this.SetDefaults(232, 1.15f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -59;
			}
			else if (Name == "Little Hornet Leafy")
			{
				this.SetDefaults(233, 0.92f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -60;
			}
			else if (Name == "Big Hornet Leafy")
			{
				this.SetDefaults(233, 1.1f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -61;
			}
			else if (Name == "Little Hornet Spikey")
			{
				this.SetDefaults(234, 0.78f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -62;
			}
			else if (Name == "Big Hornet Spikey")
			{
				this.SetDefaults(234, 1.16f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -63;
			}
			else if (Name == "Little Hornet Stingy")
			{
				this.SetDefaults(235, 0.87f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -64;
			}
			else if (Name == "Big Hornet Stingy")
			{
				this.SetDefaults(235, 1.21f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -65;
			}
			else if (Name != "")
			{
				for (int i = 1; i < 331; i++)
				{
					if (Main.npcName[i] == Name)
					{
						this.SetDefaults(i, -1f);
						return;
					}
				}
				this.SetDefaults(0, -1f);
				this.active = false;
			}
			else
			{
				this.active = false;
			}
			this.displayName = Lang.npcName(this.netID, false);
			this.lifeMax = this.life;
			this.defDamage = this.damage;
			this.defDefense = this.defense;
			ServerApi.Hooks.InvokeNpcSetDefaultsString(ref Name, this);
		}
		public static bool MechSpawn(float x, float y, int type)
		{
			int num = 0;
			int num2 = 0;
			int num3 = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == type)
				{
					num++;
					Vector2 vector = new Vector2(x, y);
					float num4 = Main.npc[i].position.X - vector.X;
					float num5 = Main.npc[i].position.Y - vector.Y;
					float num6 = (float)Math.Sqrt((double)(num4 * num4 + num5 * num5));
					if (num6 < 200f)
					{
						num2++;
					}
					if (num6 < 600f)
					{
						num3++;
					}
				}
			}
			return num2 < 3 && num3 < 6 && num < 10;
		}
		public static int TypeToNum(int type)
		{
			if (type == 17)
			{
				return 2;
			}
			if (type == 18)
			{
				return 3;
			}
			if (type == 19)
			{
				return 6;
			}
			if (type == 20)
			{
				return 5;
			}
			if (type == 22)
			{
				return 1;
			}
			if (type == 38)
			{
				return 4;
			}
			if (type == 54)
			{
				return 7;
			}
			if (type == 107)
			{
				return 9;
			}
			if (type == 108)
			{
				return 10;
			}
			if (type == 124)
			{
				return 8;
			}
			if (type == 142)
			{
				return 11;
			}
			if (type == 160)
			{
				return 12;
			}
			if (type == 178)
			{
				return 13;
			}
			if (type == 207)
			{
				return 14;
			}
			if (type == 208)
			{
				return 15;
			}
			if (type == 209)
			{
				return 16;
			}
			if (type == 227)
			{
				return 17;
			}
			if (type == 228)
			{
				return 18;
			}
			if (type == 229)
			{
				return 19;
			}
			return -1;
		}
		public static int NumToType(int type)
		{
			if (type == 2)
			{
				return 17;
			}
			if (type == 3)
			{
				return 18;
			}
			if (type == 6)
			{
				return 19;
			}
			if (type == 5)
			{
				return 20;
			}
			if (type == 1)
			{
				return 22;
			}
			if (type == 4)
			{
				return 38;
			}
			if (type == 7)
			{
				return 54;
			}
			if (type == 9)
			{
				return 107;
			}
			if (type == 10)
			{
				return 108;
			}
			if (type == 8)
			{
				return 124;
			}
			if (type == 11)
			{
				return 142;
			}
			if (type == 12)
			{
				return 160;
			}
			if (type == 13)
			{
				return 178;
			}
			if (type == 14)
			{
				return 207;
			}
			if (type == 15)
			{
				return 208;
			}
			if (type == 16)
			{
				return 209;
			}
			if (type == 17)
			{
				return 227;
			}
			if (type == 18)
			{
				return 228;
			}
			if (type == 19)
			{
				return 229;
			}
			return -1;
		}
		public void SetDefaults(int Type, float scaleOverride = -1f)
		{
			NPC.noStream = false;
			this.netStream = 32;
			bool flag = false;
			this.netID = 0;
			this.netAlways = false;
			this.netSpam = 0;
			for (int i = 0; i < this.oldPos.Length; i++)
			{
				this.oldPos[i].X = 0f;
				this.oldPos[i].Y = 0f;
			}
			for (int j = 0; j < 5; j++)
			{
				this.buffTime[j] = 0;
				this.buffType[j] = 0;
			}
			for (int k = 0; k < 90; k++)
			{
				this.buffImmune[k] = false;
			}
			this.setFrameSize = false;
			this.buffImmune[31] = true;
			this.netSkip = -2;
			this.realLife = -1;
			this.lifeRegen = 0;
			this.lifeRegenCount = 0;
			this.poisoned = false;
			this.venom = false;
			this.onFire = false;
			this.midas = false;
			this.ichor = false;
			this.onFrostBurn = false;
			this.confused = false;
			this.onFire2 = false;
			this.justHit = false;
			this.dontTakeDamage = false;
			this.npcSlots = 1f;
			this.lavaImmune = false;
			this.lavaWet = false;
			this.wetCount = 0;
			this.wet = false;
			this.townNPC = false;
			this.homeless = false;
			this.homeTileX = -1;
			this.homeTileY = -1;
			this.friendly = false;
			this.behindTiles = false;
			this.boss = false;
			this.noTileCollide = false;
			this.rotation = 0f;
			this.active = true;
			this.alpha = 0;
			this.color = default(Color);
			this.collideX = false;
			this.collideY = false;
			this.direction = 0;
			this.oldDirection = this.direction;
			this.frameCounter = 0.0;
			this.netUpdate = true;
			this.netUpdate2 = false;
			this.knockBackResist = 1f;
			this.name = "";
			this.displayName = "";
			this.noGravity = false;
			this.scale = 1f;
			this.soundHit = 0;
			this.soundKilled = 0;
			this.spriteDirection = -1;
			this.target = 255;
			this.oldTarget = this.target;
			this.targetRect = default(Rectangle);
			this.timeLeft = NPC.activeTime;
			this.type = Type;
			this.value = 0f;
			for (int l = 0; l < NPC.maxAI; l++)
			{
				this.ai[l] = 0f;
			}
			for (int m = 0; m < NPC.maxAI; m++)
			{
				this.localAI[m] = 0f;
			}
			if (this.type == 1)
			{
				this.name = "Blue Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 7;
				this.defense = 2;
				this.lifeMax = 25;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 175;
				this.color = new Color(0, 80, 255, 100);
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 2)
			{
				this.name = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 18;
				this.defense = 2;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 3)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 6;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 60f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 4)
			{
				this.name = "Eye of Cthulhu";
				this.width = 100;
				this.height = 110;
				this.aiStyle = 4;
				this.damage = 15;
				this.defense = 12;
				this.lifeMax = 2800;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 30000f;
				this.npcSlots = 5f;
			}
			else if (this.type == 5)
			{
				this.name = "Servant of Cthulhu";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 5;
				this.damage = 12;
				this.defense = 0;
				this.lifeMax = 8;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
			}
			else if (this.type == 6)
			{
				this.npcSlots = 1f;
				this.name = "Eater of Souls";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 5;
				this.damage = 22;
				this.defense = 8;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.knockBackResist = 0.5f;
				this.value = 90f;
			}
			else if (this.type == 7)
			{
				this.displayName = "Devourer";
				this.npcSlots = 3.5f;
				this.name = "Devourer Head";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.damage = 31;
				this.defense = 2;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 140f;
				this.netAlways = true;
			}
			else if (this.type == 8)
			{
				this.displayName = "Devourer";
				this.name = "Devourer Body";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 16;
				this.defense = 6;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 140f;
				NPC.noStream = true;
			}
			else if (this.type == 9)
			{
				this.displayName = "Devourer";
				this.name = "Devourer Tail";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 13;
				this.defense = 10;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 140f;
				NPC.noStream = true;
			}
			else if (this.type == 10)
			{
				this.displayName = "Giant Worm";
				this.name = "Giant Worm Head";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 8;
				this.defense = 0;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 40f;
			}
			else if (this.type == 11)
			{
				this.displayName = "Giant Worm";
				this.name = "Giant Worm Body";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 4;
				this.defense = 4;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 40f;
				NPC.noStream = true;
			}
			else if (this.type == 12)
			{
				this.displayName = "Giant Worm";
				this.name = "Giant Worm Tail";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 4;
				this.defense = 6;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 40f;
				NPC.noStream = true;
			}
			else if (this.type == 13)
			{
				this.displayName = "Eater of Worlds";
				this.npcSlots = 5f;
				this.name = "Eater of Worlds Head";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 22;
				this.defense = 2;
				this.lifeMax = 65;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 300f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 14)
			{
				this.displayName = "Eater of Worlds";
				this.name = "Eater of Worlds Body";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 13;
				this.defense = 4;
				this.lifeMax = 150;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 300f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				NPC.noStream = true;
			}
			else if (this.type == 15)
			{
				this.displayName = "Eater of Worlds";
				this.name = "Eater of Worlds Tail";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 11;
				this.defense = 8;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 300f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				NPC.noStream = true;
			}
			else if (this.type == 16)
			{
				this.npcSlots = 2f;
				this.name = "Mother Slime";
				this.width = 36;
				this.height = 24;
				this.aiStyle = 1;
				this.damage = 20;
				this.defense = 7;
				this.lifeMax = 90;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 120;
				this.color = new Color(0, 0, 0, 50);
				this.value = 75f;
				this.scale = 1.25f;
				this.knockBackResist = 0.6f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 17)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Merchant";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 18)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Nurse";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 19)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Arms Dealer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 20)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Dryad";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 21)
			{
				this.name = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 100f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 22)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Guide";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 23)
			{
				this.name = "Meteor Head";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 5;
				this.damage = 40;
				this.defense = 6;
				this.lifeMax = 26;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 80f;
				this.knockBackResist = 0.4f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 24)
			{
				this.npcSlots = 3f;
				this.name = "Fire Imp";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 30;
				this.defense = 16;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.lavaImmune = true;
				this.value = 350f;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 25)
			{
				this.name = "Burning Sphere";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 9;
				this.damage = 30;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.alpha = 100;
			}
			else if (this.type == 26)
			{
				this.name = "Goblin Peon";
				this.scale = 0.9f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 12;
				this.defense = 4;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.8f;
				this.value = 100f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 27)
			{
				this.name = "Goblin Thief";
				this.scale = 0.95f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 6;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.7f;
				this.value = 200f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 28)
			{
				this.name = "Goblin Warrior";
				this.scale = 1.1f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 25;
				this.defense = 8;
				this.lifeMax = 110;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.value = 150f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 29)
			{
				this.name = "Goblin Sorcerer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 20;
				this.defense = 2;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.6f;
				this.value = 200f;
			}
			else if (this.type == 30)
			{
				this.name = "Chaos Ball";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 9;
				this.damage = 20;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.alpha = 100;
				this.knockBackResist = 0f;
			}
			else if (this.type == 31)
			{
				this.name = "Angry Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 26;
				this.defense = 8;
				this.lifeMax = 80;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.8f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 32)
			{
				this.name = "Dark Caster";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 20;
				this.defense = 2;
				this.lifeMax = 50;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 140f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 33)
			{
				this.name = "Water Sphere";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 9;
				this.damage = 20;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.alpha = 255;
				this.knockBackResist = 0f;
			}
			else if (this.type == 34)
			{
				this.name = "Cursed Skull";
				this.width = 26;
				this.height = 28;
				this.aiStyle = 10;
				this.damage = 35;
				this.defense = 6;
				this.lifeMax = 40;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 150f;
				this.knockBackResist = 0.2f;
				this.npcSlots = 0.75f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 35)
			{
				this.displayName = "Skeletron";
				this.name = "Skeletron Head";
				this.width = 80;
				this.height = 102;
				this.aiStyle = 11;
				this.damage = 32;
				this.defense = 10;
				this.lifeMax = 4400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 50000f;
				this.knockBackResist = 0f;
				this.boss = true;
				this.npcSlots = 6f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 36)
			{
				this.displayName = "Skeletron";
				this.name = "Skeletron Hand";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 12;
				this.damage = 20;
				this.defense = 14;
				this.lifeMax = 600;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 37)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Old Man";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 38)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Demolitionist";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 39)
			{
				this.npcSlots = 6f;
				this.name = "Bone Serpent Head";
				this.displayName = "Bone Serpent";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 250;
				this.soundHit = 2;
				this.soundKilled = 5;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 1200f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 40)
			{
				this.name = "Bone Serpent Body";
				this.displayName = "Bone Serpent";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 15;
				this.defense = 12;
				this.lifeMax = 250;
				this.soundHit = 2;
				this.soundKilled = 5;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 1200f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 41)
			{
				this.name = "Bone Serpent Tail";
				this.displayName = "Bone Serpent";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 10;
				this.defense = 18;
				this.lifeMax = 250;
				this.soundHit = 2;
				this.soundKilled = 5;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 1200f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 42)
			{
				this.name = "Hornet";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 26;
				this.defense = 12;
				this.lifeMax = 48;
				this.soundHit = 1;
				this.knockBackResist = 0.5f;
				this.soundKilled = 1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 43)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Man Eater";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.damage = 34;
				this.defense = 10;
				this.lifeMax = 110;
				this.soundHit = 1;
				this.knockBackResist = 0f;
				this.soundKilled = 1;
				this.value = 350f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 44)
			{
				this.name = "Undead Miner";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 22;
				this.defense = 9;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 250f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 45)
			{
				this.name = "Tim";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 200;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 5000f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 46 || this.type == 303)
			{
				this.name = "Bunny";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
			}
			else if (this.type == 47)
			{
				this.name = "Corrupt Bunny";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 48)
			{
				this.name = "Harpy";
				this.width = 24;
				this.height = 34;
				this.aiStyle = 14;
				this.damage = 25;
				this.defense = 8;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.knockBackResist = 0.6f;
				this.soundKilled = 1;
				this.value = 300f;
			}
			else if (this.type == 49)
			{
				this.npcSlots = 0.5f;
				this.name = "Cave Bat";
				this.width = 22;
				this.height = 18;
				this.aiStyle = 14;
				this.damage = 13;
				this.defense = 2;
				this.lifeMax = 16;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 4;
				this.value = 90f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 50)
			{
				this.boss = true;
				this.name = "King Slime";
				this.width = 98;
				this.height = 92;
				this.aiStyle = 15;
				this.damage = 40;
				this.defense = 10;
				this.lifeMax = 2000;
				this.knockBackResist = 0f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 30;
				this.value = 10000f;
				this.scale = 1.25f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 51)
			{
				this.npcSlots = 0.5f;
				this.name = "Jungle Bat";
				this.width = 22;
				this.height = 18;
				this.aiStyle = 14;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 34;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 4;
				this.value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 52)
			{
				this.name = "Doctor Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 53)
			{
				this.name = "The Groom";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 8;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 54)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Clothier";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 55)
			{
				this.noGravity = true;
				this.name = "Goldfish";
				this.width = 20;
				this.height = 18;
				this.aiStyle = 16;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 56)
			{
				this.noTileCollide = true;
				this.noGravity = true;
				this.name = "Snatcher";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.damage = 25;
				this.defense = 10;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0f;
				this.soundKilled = 1;
				this.value = 90f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 57)
			{
				this.noGravity = true;
				this.name = "Corrupt Goldfish";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 30;
				this.defense = 6;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
			}
			else if (this.type == 58)
			{
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.name = "Piranha";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 25;
				this.defense = 2;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 50f;
			}
			else if (this.type == 59)
			{
				this.name = "Lava Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 15;
				this.defense = 10;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.scale = 1.1f;
				this.alpha = 50;
				this.lavaImmune = true;
				this.value = 120f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 60)
			{
				this.npcSlots = 0.5f;
				this.name = "Hellbat";
				this.width = 22;
				this.height = 18;
				this.aiStyle = 14;
				this.damage = 35;
				this.defense = 8;
				this.lifeMax = 46;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 4;
				this.value = 120f;
				this.scale = 1.1f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 61)
			{
				this.name = "Vulture";
				this.width = 36;
				this.height = 36;
				this.aiStyle = 17;
				this.damage = 15;
				this.defense = 4;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 60f;
			}
			else if (this.type == 62)
			{
				this.npcSlots = 2f;
				this.name = "Demon";
				this.width = 28;
				this.height = 48;
				this.aiStyle = 14;
				this.damage = 32;
				this.defense = 8;
				this.lifeMax = 120;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 300f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 63)
			{
				this.noGravity = true;
				this.name = "Blue Jellyfish";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 20;
				this.defense = 2;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 100f;
				this.alpha = 20;
			}
			else if (this.type == 64)
			{
				this.noGravity = true;
				this.name = "Pink Jellyfish";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 30;
				this.defense = 6;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 100f;
				this.alpha = 20;
			}
			else if (this.type == 65)
			{
				this.noGravity = true;
				this.name = "Shark";
				this.width = 100;
				this.height = 24;
				this.aiStyle = 16;
				this.damage = 40;
				this.defense = 2;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 400f;
				this.knockBackResist = 0.7f;
			}
			else if (this.type == 66)
			{
				this.npcSlots = 2f;
				this.name = "Voodoo Demon";
				this.width = 28;
				this.height = 48;
				this.aiStyle = 14;
				this.damage = 32;
				this.defense = 8;
				this.lifeMax = 140;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 1000f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 67)
			{
				this.name = "Crab";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 60f;
			}
			else if (this.type == 68)
			{
				this.name = "Dungeon Guardian";
				this.width = 80;
				this.height = 102;
				this.aiStyle = 11;
				this.damage = 1000;
				this.defense = 9000;
				this.lifeMax = 9999;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 69)
			{
				this.name = "Antlion";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 19;
				this.damage = 10;
				this.defense = 6;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.value = 60f;
				this.behindTiles = true;
			}
			else if (this.type == 70)
			{
				this.npcSlots = 0.3f;
				this.name = "Spike Ball";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 20;
				this.damage = 32;
				this.defense = 100;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.dontTakeDamage = true;
				this.scale = 1.5f;
			}
			else if (this.type == 71)
			{
				this.npcSlots = 2f;
				this.name = "Dungeon Slime";
				this.width = 36;
				this.height = 24;
				this.aiStyle = 1;
				this.damage = 30;
				this.defense = 7;
				this.lifeMax = 150;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 60;
				this.value = 150f;
				this.scale = 1.25f;
				this.knockBackResist = 0.6f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 72)
			{
				this.npcSlots = 0.3f;
				this.name = "Blazing Wheel";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 21;
				this.damage = 24;
				this.defense = 100;
				this.lifeMax = 100;
				this.alpha = 100;
				this.behindTiles = true;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.dontTakeDamage = true;
				this.scale = 1.2f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 73)
			{
				this.name = "Goblin Scout";
				this.scale = 0.95f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 6;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.7f;
				this.value = 200f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 74 || this.type == 297 || this.type == 298)
			{
				this.name = "Bird";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 24;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
			}
			else if (this.type == 75)
			{
				this.noGravity = true;
				this.name = "Pixie";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 22;
				this.damage = 55;
				this.defense = 20;
				this.lifeMax = 150;
				this.soundHit = 5;
				this.knockBackResist = 0.6f;
				this.soundKilled = 7;
				this.value = 350f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 77)
			{
				this.name = "Armored Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 40;
				this.defense = 28;
				this.lifeMax = 260;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 78)
			{
				this.name = "Mummy";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 16;
				this.lifeMax = 130;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.6f;
				this.value = 600f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 79)
			{
				this.name = "Dark Mummy";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 18;
				this.lifeMax = 180;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.5f;
				this.value = 700f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 80)
			{
				this.name = "Light Mummy";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 55;
				this.defense = 18;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.55f;
				this.value = 700f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 81)
			{
				this.name = "Corrupt Slime";
				this.width = 40;
				this.height = 30;
				this.aiStyle = 1;
				this.damage = 55;
				this.defense = 20;
				this.lifeMax = 170;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 55;
				this.value = 400f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 82)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Wraith";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 22;
				this.damage = 65;
				this.defense = 16;
				this.lifeMax = 160;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.alpha = 100;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.7f;
			}
			else if (this.type == 83)
			{
				this.name = "Cursed Hammer";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 23;
				this.damage = 80;
				this.defense = 18;
				this.lifeMax = 200;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 84)
			{
				this.name = "Enchanted Sword";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 23;
				this.damage = 80;
				this.defense = 18;
				this.lifeMax = 200;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 85)
			{
				this.name = "Mimic";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 25;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 500;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.value = 100000f;
				this.knockBackResist = 0.3f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 86)
			{
				this.name = "Unicorn";
				this.width = 46;
				this.height = 42;
				this.aiStyle = 26;
				this.damage = 65;
				this.defense = 30;
				this.lifeMax = 400;
				this.soundHit = 12;
				this.soundKilled = 18;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 87)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.npcSlots = 5f;
				this.name = "Wyvern Head";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 80;
				this.defense = 10;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 88)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Legs";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				NPC.noStream = true;
			}
			else if (this.type == 89)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Body";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 2000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				NPC.noStream = true;
			}
			else if (this.type == 90)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Body 2";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				NPC.noStream = true;
			}
			else if (this.type == 91)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Body 3";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				NPC.noStream = true;
			}
			else if (this.type == 92)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Tail";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				NPC.noStream = true;
			}
			else if (this.type == 93)
			{
				this.npcSlots = 0.5f;
				this.name = "Giant Bat";
				this.width = 26;
				this.height = 20;
				this.aiStyle = 14;
				this.damage = 45;
				this.defense = 16;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.knockBackResist = 0.75f;
				this.soundKilled = 4;
				this.value = 400f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 94)
			{
				this.npcSlots = 1f;
				this.name = "Corruptor";
				this.width = 44;
				this.height = 44;
				this.aiStyle = 5;
				this.damage = 60;
				this.defense = 32;
				this.lifeMax = 230;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.knockBackResist = 0.55f;
				this.value = 500f;
			}
			else if (this.type == 95)
			{
				this.displayName = "Digger";
				this.name = "Digger Head";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 45;
				this.defense = 10;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.scale = 0.9f;
				this.value = 300f;
			}
			else if (this.type == 96)
			{
				this.displayName = "Digger";
				this.name = "Digger Body";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 28;
				this.defense = 20;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.scale = 0.9f;
				this.value = 300f;
				NPC.noStream = true;
			}
			else if (this.type == 97)
			{
				this.displayName = "Digger";
				this.name = "Digger Tail";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 26;
				this.defense = 30;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.scale = 0.9f;
				this.value = 300f;
				NPC.noStream = true;
			}
			else if (this.type == 98)
			{
				this.displayName = "World Feeder";
				this.npcSlots = 3.5f;
				this.name = "Seeker Head";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 70;
				this.defense = 36;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 700f;
			}
			else if (this.type == 99)
			{
				this.displayName = "World Feeder";
				this.name = "Seeker Body";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 55;
				this.defense = 40;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 700f;
				NPC.noStream = true;
			}
			else if (this.type == 100)
			{
				this.displayName = "World Feeder";
				this.name = "Seeker Tail";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 44;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 700f;
				NPC.noStream = true;
			}
			else if (this.type == 101)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.behindTiles = true;
				this.name = "Clinger";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 320;
				this.soundHit = 1;
				this.knockBackResist = 0.2f;
				this.soundKilled = 1;
				this.value = 600f;
			}
			else if (this.type == 102)
			{
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.name = "Angler Fish";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 80;
				this.defense = 22;
				this.lifeMax = 90;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
			}
			else if (this.type == 103)
			{
				this.noGravity = true;
				this.name = "Green Jellyfish";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 120;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 800f;
				this.alpha = 20;
			}
			else if (this.type == 104)
			{
				this.name = "Werewolf";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 40;
				this.lifeMax = 400;
				this.soundHit = 6;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 105)
			{
				this.friendly = true;
				this.name = "Bound Goblin";
				this.width = 18;
				this.height = 34;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
			}
			else if (this.type == 106)
			{
				this.friendly = true;
				this.name = "Bound Wizard";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 107)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Goblin Tinkerer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
			}
			else if (this.type == 108)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Wizard";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 109)
			{
				this.name = "Clown";
				this.width = 34;
				this.height = 78;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 8000f;
			}
			else if (this.type == 110)
			{
				this.name = "Skeleton Archer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 45;
				this.defense = 14;
				this.lifeMax = 210;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 111)
			{
				this.name = "Goblin Archer";
				this.scale = 0.95f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 6;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.7f;
				this.value = 200f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 112)
			{
				this.name = "Vile Spit";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 9;
				this.damage = 65;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 0;
				this.soundKilled = 9;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.scale = 0.9f;
				this.alpha = 80;
			}
			else if (this.type == 113)
			{
				this.npcSlots = 10f;
				this.name = "Wall of Flesh";
				this.width = 100;
				this.height = 100;
				this.aiStyle = 27;
				this.damage = 50;
				this.defense = 12;
				this.lifeMax = 8000;
				this.soundHit = 8;
				this.soundKilled = 10;
				this.noGravity = true;
				this.noTileCollide = true;
				this.behindTiles = true;
				this.knockBackResist = 0f;
				this.scale = 1.2f;
				this.boss = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.value = 80000f;
			}
			else if (this.type == 114)
			{
				this.name = "Wall of Flesh Eye";
				this.displayName = "Wall of Flesh";
				this.width = 100;
				this.height = 100;
				this.aiStyle = 28;
				this.damage = 50;
				this.defense = 0;
				this.lifeMax = 8000;
				this.soundHit = 8;
				this.soundKilled = 10;
				this.noGravity = true;
				this.noTileCollide = true;
				this.behindTiles = true;
				this.knockBackResist = 0f;
				this.scale = 1.2f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.value = 80000f;
			}
			else if (this.type == 115)
			{
				this.name = "The Hungry";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 29;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 240;
				this.soundHit = 9;
				this.soundKilled = 11;
				this.noGravity = true;
				this.behindTiles = true;
				this.noTileCollide = true;
				this.knockBackResist = 1.1f;
			}
			else if (this.type == 116)
			{
				this.name = "The Hungry II";
				this.displayName = "The Hungry";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 30;
				this.defense = 6;
				this.lifeMax = 80;
				this.soundHit = 9;
				this.knockBackResist = 0.8f;
				this.soundKilled = 12;
			}
			else if (this.type == 117)
			{
				this.displayName = "Leech";
				this.name = "Leech Head";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 26;
				this.defense = 2;
				this.lifeMax = 60;
				this.soundHit = 9;
				this.soundKilled = 12;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
			}
			else if (this.type == 118)
			{
				this.displayName = "Leech";
				this.name = "Leech Body";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 22;
				this.defense = 6;
				this.lifeMax = 60;
				this.soundHit = 9;
				this.soundKilled = 12;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
			}
			else if (this.type == 119)
			{
				this.displayName = "Leech";
				this.name = "Leech Tail";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 18;
				this.defense = 10;
				this.lifeMax = 60;
				this.soundHit = 9;
				this.soundKilled = 12;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
			}
			else if (this.type == 120)
			{
				this.name = "Chaos Elemental";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 40;
				this.defense = 30;
				this.lifeMax = 370;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.4f;
				this.value = 600f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 121)
			{
				this.name = "Slimer";
				this.width = 40;
				this.height = 30;
				this.aiStyle = 14;
				this.damage = 45;
				this.defense = 20;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.alpha = 55;
				this.knockBackResist = 0.8f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 122)
			{
				this.noGravity = true;
				this.name = "Gastropod";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 22;
				this.damage = 60;
				this.defense = 22;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 600f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 123)
			{
				this.friendly = true;
				this.name = "Bound Mechanic";
				this.width = 18;
				this.height = 34;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
			}
			else if (this.type == 124)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Mechanic";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 125)
			{
				this.name = "Retinazer";
				this.width = 100;
				this.height = 110;
				this.aiStyle = 30;
				this.damage = 40;
				this.defense = 10;
				this.lifeMax = 20000;
				this.soundHit = 1;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 120000f;
				this.npcSlots = 5f;
				this.boss = true;
			}
			else if (this.type == 126)
			{
				this.name = "Spazmatism";
				this.width = 100;
				this.height = 110;
				this.aiStyle = 31;
				this.damage = 40;
				this.defense = 10;
				this.lifeMax = 20000;
				this.soundHit = 1;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 120000f;
				this.npcSlots = 5f;
				this.boss = true;
			}
			else if (this.type == 127)
			{
				this.name = "Skeletron Prime";
				this.width = 80;
				this.height = 102;
				this.aiStyle = 32;
				this.damage = 45;
				this.defense = 22;
				this.lifeMax = 25000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 120000f;
				this.knockBackResist = 0f;
				this.boss = true;
				this.npcSlots = 6f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.boss = true;
			}
			else if (this.type == 128)
			{
				this.name = "Prime Cannon";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 35;
				this.damage = 30;
				this.defense = 20;
				this.lifeMax = 6000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.netAlways = true;
			}
			else if (this.type == 129)
			{
				this.name = "Prime Saw";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 33;
				this.damage = 47;
				this.defense = 36;
				this.lifeMax = 8000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.netAlways = true;
			}
			else if (this.type == 130)
			{
				this.name = "Prime Vice";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 34;
				this.damage = 40;
				this.defense = 30;
				this.lifeMax = 8000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.netAlways = true;
			}
			else if (this.type == 131)
			{
				this.name = "Prime Laser";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 36;
				this.damage = 29;
				this.defense = 20;
				this.lifeMax = 5000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.netAlways = true;
			}
			else if (this.type == 132)
			{
				this.displayName = "Zombie";
				this.name = "Bald Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 15;
				this.defense = 5;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 133)
			{
				this.name = "Wandering Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 134)
			{
				this.displayName = "The Destroyer";
				this.npcSlots = 5f;
				this.name = "The Destroyer";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 37;
				this.damage = 50;
				this.defense = 0;
				this.lifeMax = 60000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 120000f;
				this.scale = 1.25f;
				this.boss = true;
				this.netAlways = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				flag = true;
			}
			else if (this.type == 135)
			{
				this.displayName = "The Destroyer";
				this.npcSlots = 5f;
				this.name = "The Destroyer Body";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 37;
				this.damage = 35;
				this.defense = 26;
				this.lifeMax = 60000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.netAlways = true;
				this.scale = 1.25f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				NPC.noStream = true;
				flag = true;
			}
			else if (this.type == 136)
			{
				this.displayName = "The Destroyer";
				this.npcSlots = 5f;
				this.name = "The Destroyer Tail";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 37;
				this.damage = 20;
				this.defense = 30;
				this.lifeMax = 60000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.scale = 1.25f;
				this.netAlways = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				NPC.noStream = true;
				flag = true;
			}
			else if (this.type == 139)
			{
				this.npcSlots = 1f;
				this.name = "Probe";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 5;
				this.damage = 40;
				this.defense = 18;
				this.lifeMax = 180;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.knockBackResist = 0.8f;
				this.noTileCollide = true;
				flag = true;
			}
			else if (this.type == 137)
			{
				this.name = "Illuminant Bat";
				this.width = 26;
				this.height = 20;
				this.aiStyle = 14;
				this.damage = 75;
				this.defense = 30;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.knockBackResist = 0.75f;
				this.soundKilled = 6;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 138)
			{
				this.name = "Illuminant Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 180;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.alpha = 100;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.85f;
				this.scale = 1.05f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 140)
			{
				this.name = "Possessed Armor";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 55;
				this.defense = 28;
				this.lifeMax = 260;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.knockBackResist = 0.4f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.buffImmune[24] = true;
			}
			else if (this.type == 141)
			{
				this.name = "Toxic Sludge";
				this.width = 34;
				this.height = 28;
				this.aiStyle = 1;
				this.damage = 50;
				this.defense = 18;
				this.lifeMax = 150;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 55;
				this.value = 400f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.knockBackResist = 0.8f;
			}
			else if (this.type == 142)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Santa Claus";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 143)
			{
				this.name = "Snowman Gangsta";
				this.width = 26;
				this.height = 40;
				this.aiStyle = 38;
				this.damage = 50;
				this.defense = 20;
				this.lifeMax = 200;
				this.soundHit = 11;
				this.soundKilled = 15;
				this.knockBackResist = 0.6f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 144)
			{
				this.name = "Mister Stabby";
				this.width = 26;
				this.height = 40;
				this.aiStyle = 38;
				this.damage = 65;
				this.defense = 26;
				this.lifeMax = 240;
				this.soundHit = 11;
				this.soundKilled = 15;
				this.knockBackResist = 0.6f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 145)
			{
				this.name = "Snow Balla";
				this.width = 26;
				this.height = 40;
				this.aiStyle = 38;
				this.damage = 55;
				this.defense = 22;
				this.lifeMax = 220;
				this.soundHit = 11;
				this.soundKilled = 15;
				this.knockBackResist = 0.6f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 147)
			{
				this.name = "Ice Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 8;
				this.defense = 4;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 50;
				this.value = 50f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 148)
			{
				this.name = "Penguin";
				this.width = 16;
				this.height = 34;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
			}
			else if (this.type == 149)
			{
				this.name = "Penguin";
				this.width = 16;
				this.height = 34;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
			}
			else if (this.type == 150)
			{
				this.npcSlots = 0.5f;
				this.name = "Ice Bat";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 14;
				this.damage = 18;
				this.defense = 6;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 4;
				this.value = 130f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 151)
			{
				this.npcSlots = 0.5f;
				this.name = "Lava bat";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 14;
				this.damage = 50;
				this.defense = 16;
				this.lifeMax = 160;
				this.soundHit = 1;
				this.knockBackResist = 0.6f;
				this.soundKilled = 4;
				this.value = 400f;
				this.scale = 1.15f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 152)
			{
				this.npcSlots = 0.5f;
				this.name = "Giant Flying Fox";
				this.width = 38;
				this.height = 34;
				this.aiStyle = 14;
				this.damage = 80;
				this.defense = 24;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.knockBackResist = 0.65f;
				this.soundKilled = 4;
				this.value = 400f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 153)
			{
				this.npcSlots = 2f;
				this.name = "Giant Tortoise";
				this.width = 46;
				this.height = 32;
				this.aiStyle = 39;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 470;
				this.soundHit = 7;
				this.knockBackResist = 0.3f;
				this.soundKilled = 5;
				this.value = 500f;
				this.noGravity = false;
				this.buffImmune[31] = false;
			}
			else if (this.type == 154)
			{
				this.npcSlots = 1.5f;
				this.name = "Ice Tortoise";
				this.width = 46;
				this.height = 32;
				this.aiStyle = 39;
				this.damage = 55;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 7;
				this.knockBackResist = 0.3f;
				this.soundKilled = 5;
				this.value = 450f;
				this.noGravity = false;
				this.buffImmune[31] = false;
			}
			else if (this.type == 155)
			{
				this.name = "Wolf";
				this.width = 46;
				this.height = 30;
				this.aiStyle = 26;
				this.damage = 65;
				this.defense = 30;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 156)
			{
				this.npcSlots = 2f;
				this.name = "Red Devil";
				this.width = 28;
				this.height = 48;
				this.aiStyle = 14;
				this.damage = 50;
				this.defense = 40;
				this.lifeMax = 600;
				this.soundHit = 1;
				this.knockBackResist = 0.5f;
				this.soundKilled = 1;
				this.value = 1200f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 157)
			{
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.name = "Arapaima";
				this.width = 74;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 75;
				this.defense = 30;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
			}
			else if (this.type == 158)
			{
				this.npcSlots = 2f;
				this.name = "Vampire";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 14;
				this.damage = 60;
				this.defense = 30;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.knockBackResist = 0.75f;
				this.soundKilled = 6;
				this.value = 5000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 159)
			{
				this.npcSlots = 2f;
				this.name = "Vampire";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 20;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.4f;
				this.value = 5000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 160)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Truffle";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 161)
			{
				this.name = "Zombie Eskimo";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 162)
			{
				this.name = "Frankenstein";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 18;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = 600f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 163)
			{
				this.name = "Black Recluse";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 90;
				this.defense = 40;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.25f;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
				this.timeLeft = NPC.activeTime * 2;
			}
			else if (this.type == 238)
			{
				this.noGravity = true;
				this.name = "Black Recluse";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 40;
				this.damage = 100;
				this.defense = 40;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.25f;
				this.value = 500f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.5f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 164)
			{
				this.name = "Wall Creeper";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.25f;
				this.value = 100f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.5f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 165)
			{
				this.noGravity = true;
				this.name = "Wall Creeper";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 40;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.25f;
				this.value = 100f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.5f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 166)
			{
				this.name = "Swamp Thing";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 32;
				this.lifeMax = 350;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[31] = false;
				this.buffImmune[20] = true;
			}
			else if (this.type == 167)
			{
				this.name = "Undead Viking";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 24;
				this.defense = 10;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 200f;
				this.buffImmune[31] = false;
				this.buffImmune[20] = true;
			}
			else if (this.type == 168)
			{
				this.name = "Corrupt Penguin";
				this.width = 16;
				this.height = 34;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 169)
			{
				this.noGravity = true;
				this.name = "Ice Elemental";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 22;
				this.damage = 55;
				this.defense = 20;
				this.lifeMax = 200;
				this.soundHit = 5;
				this.knockBackResist = 0.6f;
				this.soundKilled = 7;
				this.value = 1500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
				this.buffImmune[44] = true;
			}
			else if (this.type == 170)
			{
				this.name = "Pigron";
				this.width = 44;
				this.height = 36;
				this.aiStyle = 2;
				this.damage = 70;
				this.defense = 16;
				this.lifeMax = 210;
				this.soundHit = 7;
				this.soundKilled = 17;
				this.knockBackResist = 0.5f;
				this.value = 2000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 171)
			{
				this.name = "Pigron";
				this.width = 44;
				this.height = 36;
				this.aiStyle = 2;
				this.damage = 70;
				this.defense = 16;
				this.lifeMax = 210;
				this.soundHit = 7;
				this.soundKilled = 17;
				this.knockBackResist = 0.5f;
				this.value = 2000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 172)
			{
				this.name = "Rune Wizard";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 200;
				this.defense = 30;
				this.lifeMax = 600;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = 5000f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 173)
			{
				this.npcSlots = 1f;
				this.name = "Crimera";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 5;
				this.damage = 22;
				this.defense = 8;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.knockBackResist = 0.5f;
				this.value = 90f;
			}
			else if (this.type == 174)
			{
				this.npcSlots = 1f;
				this.name = "Herpling";
				this.width = 52;
				this.height = 26;
				this.aiStyle = 41;
				this.damage = 65;
				this.defense = 26;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.value = 450f;
			}
			else if (this.type == 175)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Angry Trapper";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.damage = 100;
				this.defense = 30;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.knockBackResist = 0.25f;
				this.soundKilled = 1;
				this.value = 650f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 176)
			{
				this.name = "Moss Hornet";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 70;
				this.defense = 22;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.knockBackResist = 0.5f;
				this.soundKilled = 1;
				this.value = 600f;
				this.noGravity = true;
				this.buffImmune[20] = true;
				this.npcSlots = 1.5f;
			}
			else if (this.type == 177)
			{
				this.npcSlots = 1f;
				this.name = "Derpling";
				this.width = 58;
				this.height = 44;
				this.aiStyle = 41;
				this.damage = 80;
				this.defense = 26;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.value = 500f;
			}
			else if (this.type == 178)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Steampunker";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 179)
			{
				this.name = "Crimson Axe";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 23;
				this.damage = 80;
				this.defense = 18;
				this.lifeMax = 200;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 180)
			{
				this.name = "Pigron";
				this.width = 44;
				this.height = 36;
				this.aiStyle = 2;
				this.damage = 70;
				this.defense = 16;
				this.lifeMax = 210;
				this.soundHit = 7;
				this.soundKilled = 17;
				this.knockBackResist = 0.5f;
				this.value = 4000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 181)
			{
				this.name = "Face Monster";
				this.width = 18;
				this.height = 44;
				this.aiStyle = 3;
				this.damage = 25;
				this.defense = 10;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 200f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 182)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Floaty Gross";
				this.width = 24;
				this.height = 62;
				this.aiStyle = 22;
				this.damage = 65;
				this.defense = 18;
				this.lifeMax = 240;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.alpha = 100;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.7f;
			}
			else if (this.type == 183)
			{
				this.name = "Crimslime";
				this.width = 40;
				this.height = 30;
				this.aiStyle = 1;
				this.damage = 60;
				this.defense = 26;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 55;
				this.value = 400f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 184)
			{
				this.name = "Spiked Ice Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 12;
				this.defense = 8;
				this.lifeMax = 60;
				this.scale = 1.1f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 50;
				this.value = 200f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 185)
			{
				this.name = "Snow Flinx";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 3;
				this.damage = 26;
				this.defense = 12;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 1.1f;
				this.value = 200f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 186)
			{
				this.name = "Pincushion Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 187)
			{
				this.name = "Slimed Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 13;
				this.defense = 6;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.value = 55f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 188)
			{
				this.name = "Swamp Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 13;
				this.defense = 8;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 189)
			{
				this.name = "Twiggy Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 4;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.value = 70f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 190)
			{
				this.name = "Cataract Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 18;
				this.defense = 4;
				this.lifeMax = 65;
				this.soundHit = 1;
				this.knockBackResist = 0.7f;
				this.soundKilled = 1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 191)
			{
				this.name = "Sleepy Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 16;
				this.defense = 2;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.85f;
				this.soundKilled = 1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 192)
			{
				this.name = "Dialated Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 18;
				this.defense = 2;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 193)
			{
				this.name = "Green Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 20;
				this.defense = 0;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 194)
			{
				this.name = "Purple Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 14;
				this.defense = 4;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 195)
			{
				this.name = "Lost Girl";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 42;
				this.damage = 10;
				this.defense = 30;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 196)
			{
				this.name = "Nymph";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 35;
				this.defense = 16;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 10000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 197)
			{
				this.name = "Armored Viking";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 28;
				this.lifeMax = 280;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 198)
			{
				this.name = "Lihzahrd";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 38;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.value = 650f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 199)
			{
				this.name = "Lihzahrd";
				this.width = 42;
				this.height = 30;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 30;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.value = 650f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 200)
			{
				this.name = "Female Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 12;
				this.defense = 4;
				this.lifeMax = 38;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 201)
			{
				this.name = "Headache Skeleton";
				this.displayName = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 12;
				this.lifeMax = 55;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 202)
			{
				this.name = "Misassembled Skeleton";
				this.displayName = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 18;
				this.defense = 8;
				this.lifeMax = 65;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 120f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 203)
			{
				this.name = "Pantless Skeleton";
				this.displayName = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 22;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 110f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 204)
			{
				this.name = "Spiked Jungle Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 28;
				this.defense = 8;
				this.lifeMax = 65;
				this.scale = 1.15f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 50;
				this.value = 300f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 205)
			{
				this.name = "Moth";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 5;
				this.damage = 70;
				this.defense = 28;
				this.lifeMax = 1000;
				this.soundHit = 1;
				this.knockBackResist = 0.4f;
				this.soundKilled = 1;
				this.value = 600f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 206)
			{
				this.name = "Icy Merman";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 30;
				this.lifeMax = 280;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 207)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Dye Trader";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 208)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Party Girl";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 209)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Cyborg";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 210)
			{
				this.name = "Bee";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 5;
				this.damage = 20;
				this.defense = 5;
				this.lifeMax = 20;
				this.soundHit = 1;
				this.knockBackResist = 0.5f;
				this.soundKilled = 1;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 211)
			{
				this.name = "Bee";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 5;
				this.damage = 15;
				this.defense = 2;
				this.lifeMax = 10;
				this.soundHit = 1;
				this.knockBackResist = 0.5f;
				this.soundKilled = 1;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 212)
			{
				this.name = "Pirate Deckhand";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 35;
				this.defense = 16;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.value = 700f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 213)
			{
				this.name = "Pirate Corsair";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 20;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 214)
			{
				this.name = "Pirate Deadeye";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 12;
				this.lifeMax = 150;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 215)
			{
				this.name = "Pirate Crossbower";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 35;
				this.defense = 18;
				this.lifeMax = 260;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.35f;
				this.value = 1500f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 216)
			{
				this.name = "Pirate Captain";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 28;
				this.lifeMax = 2000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.value = 50000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 217)
			{
				this.name = "Cochineal Beetle";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 16;
				this.value = 60f;
			}
			else if (this.type == 218)
			{
				this.name = "Cyan Beetle";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 16;
				this.value = 60f;
			}
			else if (this.type == 219)
			{
				this.name = "Lac Beetle";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 16;
				this.value = 60f;
			}
			else if (this.type == 220)
			{
				this.name = "Sea Snail";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 60f;
			}
			else if (this.type == 221)
			{
				this.noGravity = true;
				this.name = "Squid";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 20;
				this.defense = 2;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 100f;
				this.alpha = 20;
			}
			else if (this.type == 222)
			{
				this.name = "Queen Bee";
				this.width = 66;
				this.height = 66;
				this.aiStyle = 43;
				this.damage = 30;
				this.defense = 8;
				this.lifeMax = 3400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 100000f;
				this.npcSlots = 5f;
			}
			else if (this.type == 223)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 70f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 224)
			{
				this.name = "Flying Fish";
				this.width = 32;
				this.height = 18;
				this.aiStyle = 44;
				this.damage = 9;
				this.defense = 4;
				this.lifeMax = 20;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 90f;
				this.buffImmune[31] = false;
			}
			if (this.type == 225)
			{
				this.name = "Umbrella Slime";
				this.width = 38;
				this.height = 26;
				this.aiStyle = 1;
				this.damage = 10;
				this.defense = 5;
				this.lifeMax = 35;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.75f;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 226)
			{
				this.npcSlots = 0.5f;
				this.name = "Flying Snake";
				this.width = 34;
				this.height = 50;
				this.aiStyle = 14;
				this.damage = 85;
				this.defense = 28;
				this.lifeMax = 260;
				this.soundHit = 1;
				this.knockBackResist = 0.65f;
				this.soundKilled = 1;
				this.value = 400f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 227)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Painter";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 228)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Witch Doctor";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 229)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Pirate";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 230)
			{
				this.name = "Goldfish";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
			}
			else if (this.type == 231)
			{
				this.name = "Hornet Fatty";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 22;
				this.defense = 16;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.knockBackResist = 0.3f;
				this.soundKilled = 1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 232)
			{
				this.name = "Hornet Honey";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 28;
				this.defense = 12;
				this.lifeMax = 42;
				this.soundHit = 1;
				this.knockBackResist = 0.6f;
				this.soundKilled = 1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 233)
			{
				this.name = "Hornet Leafy";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 30;
				this.defense = 14;
				this.lifeMax = 38;
				this.soundHit = 1;
				this.knockBackResist = 0.45f;
				this.soundKilled = 1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 234)
			{
				this.name = "Hornet Spikey";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 32;
				this.defense = 6;
				this.lifeMax = 42;
				this.soundHit = 1;
				this.knockBackResist = 0.55f;
				this.soundKilled = 1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 235)
			{
				this.name = "Hornet Stingy";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 34;
				this.defense = 4;
				this.lifeMax = 38;
				this.soundHit = 1;
				this.knockBackResist = 0.6f;
				this.soundKilled = 1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 236)
			{
				this.name = "Jungle Creeper";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 14;
				this.lifeMax = 120;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.25f;
				this.value = 1000f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.75f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 237)
			{
				this.noGravity = true;
				this.name = "Jungle Creeper";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 40;
				this.damage = 50;
				this.defense = 14;
				this.lifeMax = 120;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.25f;
				this.value = 1000f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.75f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 239)
			{
				this.name = "Blood Crawler";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.knockBackResist = 0.5f;
				this.value = 130f;
				this.timeLeft = NPC.activeTime * 2;
				this.buffImmune[20] = true;
			}
			else if (this.type == 240)
			{
				this.noGravity = true;
				this.name = "Blood Crawler";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 40;
				this.damage = 30;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.knockBackResist = 0.5f;
				this.value = 130f;
				this.timeLeft = NPC.activeTime * 2;
				this.buffImmune[20] = true;
			}
			else if (this.type == 241)
			{
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.name = "Blood Feeder";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 30;
				this.defense = 4;
				this.lifeMax = 20;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.value = 350f;
			}
			else if (this.type == 242)
			{
				this.noGravity = true;
				this.name = "Blood Jelly";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 75;
				this.defense = 20;
				this.lifeMax = 150;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.value = 800f;
				this.alpha = 20;
			}
			else if (this.type == 243)
			{
				this.name = "Ice Golem";
				this.width = 30;
				this.height = 114;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 32;
				this.lifeMax = 3000;
				this.soundHit = 5;
				this.soundKilled = 7;
				this.knockBackResist = 0.05f;
				this.value = (float)Item.buyPrice(0, 1, 50, 0);
				this.buffImmune[20] = true;
				this.buffImmune[44] = true;
			}
			else if (this.type == 244)
			{
				this.name = "Rainbow Slime";
				this.width = 60;
				this.height = 42;
				this.aiStyle = 1;
				this.damage = 85;
				this.defense = 26;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 175;
				this.value = (float)Item.buyPrice(0, 0, 20, 0);
				this.knockBackResist = 0.3f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 245)
			{
				this.name = "Golem";
				this.width = 140;
				this.height = 140;
				this.aiStyle = 45;
				this.damage = 70;
				this.defense = 24;
				this.lifeMax = 8000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.alpha = 255;
				this.boss = true;
			}
			else if (this.type == 246)
			{
				this.noGravity = true;
				this.name = "Golem Head";
				this.width = 70;
				this.height = 70;
				this.aiStyle = 46;
				this.damage = 60;
				this.defense = 18;
				this.lifeMax = 15000;
				this.soundHit = 4;
				this.soundKilled = 0;
				this.knockBackResist = 0f;
				this.alpha = 255;
			}
			else if (this.type == 247 || this.type == 248)
			{
				this.noGravity = true;
				this.name = "Golem Fist";
				this.width = 40;
				this.height = 30;
				this.aiStyle = 47;
				this.damage = 55;
				this.defense = 28;
				this.lifeMax = 6000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.alpha = 255;
			}
			else if (this.type == 249)
			{
				this.noGravity = true;
				this.name = "Golem Head";
				this.width = 70;
				this.height = 70;
				this.aiStyle = 48;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 10000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.dontTakeDamage = true;
			}
			else if (this.type == 250)
			{
				this.name = "Angry Nimbus";
				this.width = 34;
				this.height = 26;
				this.aiStyle = 49;
				this.damage = 50;
				this.defense = 24;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.3f;
				this.value = 300f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 251)
			{
				this.name = "Eyezor";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 30;
				this.lifeMax = 1000;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = (float)Item.buyPrice(0, 0, 50, 0);
				this.buffImmune[31] = false;
			}
			else if (this.type == 252)
			{
				this.noGravity = true;
				this.npcSlots = 0.5f;
				this.name = "Parrot";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 80;
				this.defense = 12;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.knockBackResist = 0.7f;
				this.soundKilled = 4;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 253)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Reaper";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 22;
				this.damage = 80;
				this.defense = 18;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.alpha = 100;
				this.value = 1500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.6f;
			}
			else if (this.type == 254)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 40;
				this.defense = 10;
				this.lifeMax = 180;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 255)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 38;
				this.defense = 16;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.3f;
				this.value = 1200f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 256)
			{
				this.noGravity = true;
				this.name = "Fungo Fish";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 90;
				this.defense = 20;
				this.lifeMax = 140;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.value = 1200f;
				this.alpha = 20;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 257)
			{
				this.name = "Anomura Fungus";
				this.width = 44;
				this.height = 34;
				this.aiStyle = 3;
				this.damage = 38;
				this.defense = 24;
				this.lifeMax = 230;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.3f;
				this.value = 1300f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 258)
			{
				this.name = "Mushi Ladybug";
				this.width = 30;
				this.height = 24;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 16;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.3f;
				this.value = 1500f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 259)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Fungi Bulb";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 13;
				this.damage = 24;
				this.defense = 4;
				this.lifeMax = 90;
				this.soundHit = 1;
				this.knockBackResist = 0f;
				this.soundKilled = 1;
				this.value = 350f;
				this.buffImmune[20] = true;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 260)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Giant Fungi Bulb";
				this.width = 36;
				this.height = 36;
				this.aiStyle = 13;
				this.damage = 70;
				this.defense = 20;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.knockBackResist = 0f;
				this.soundKilled = 1;
				this.value = 1250f;
				this.buffImmune[20] = true;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 261)
			{
				this.name = "Fungi Spore";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 50;
				this.damage = 80;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.npcSlots = 0f;
			}
			else if (this.type == 262)
			{
				this.noTileCollide = true;
				this.name = "Plantera";
				this.width = 86;
				this.height = 86;
				this.aiStyle = 51;
				this.damage = 50;
				this.defense = 14;
				this.lifeMax = 30000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.boss = true;
				this.npcSlots = 16f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 263)
			{
				this.noTileCollide = true;
				this.noGravity = true;
				this.name = "Plantera's Hook";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 52;
				this.damage = 60;
				this.defense = 24;
				this.lifeMax = 4000;
				this.dontTakeDamage = true;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.buffImmune[20] = true;
			}
			else if (this.type == 264)
			{
				this.name = "Plantera's Tentacle";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 53;
				this.damage = 60;
				this.defense = 20;
				this.lifeMax = 1000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 265)
			{
				this.name = "Spore";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 50;
				this.damage = 70;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.npcSlots = 0f;
			}
			else if (this.type == 266)
			{
				this.name = "Brain of Cthulhu";
				this.dontTakeDamage = true;
				this.width = 160;
				this.height = 110;
				this.aiStyle = 54;
				this.damage = 30;
				this.defense = 14;
				this.lifeMax = 1000;
				this.soundHit = 9;
				this.soundKilled = 11;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 50000f;
				this.npcSlots = 6f;
			}
			else if (this.type == 267)
			{
				this.name = "Creeper";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 55;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 100;
				this.soundHit = 9;
				this.soundKilled = 11;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0.8f;
			}
			else if (this.type == 268)
			{
				this.noGravity = true;
				this.name = "Ichor Sticker";
				this.width = 28;
				this.height = 56;
				this.aiStyle = 22;
				this.damage = 55;
				this.defense = 20;
				this.lifeMax = 340;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.knockBackResist = 0.6f;
				this.value = 450f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 269)
			{
				this.name = "Rusty Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 34;
				this.lifeMax = 550;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 270)
			{
				this.name = "Rusty Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 55;
				this.defense = 50;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 271)
			{
				this.name = "Rusty Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 40;
				this.lifeMax = 450;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.25f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 272)
			{
				this.name = "Rusty Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 75;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.35f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 273)
			{
				this.name = "Blue Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 45;
				this.defense = 50;
				this.lifeMax = 500;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.15f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 274)
			{
				this.name = "Blue Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 65;
				this.defense = 34;
				this.lifeMax = 350;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 275)
			{
				this.name = "Blue Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 45;
				this.defense = 50;
				this.lifeMax = 550;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.15f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 276)
			{
				this.name = "Blue Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 85;
				this.defense = 54;
				this.lifeMax = 500;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 277)
			{
				this.name = "Hell Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 32;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 278)
			{
				this.name = "Hell Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 65;
				this.defense = 48;
				this.lifeMax = 450;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 279)
			{
				this.name = "Hell Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 40;
				this.defense = 54;
				this.lifeMax = 500;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 280)
			{
				this.name = "Hell Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 75;
				this.defense = 34;
				this.lifeMax = 500;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 281)
			{
				this.name = "Ragged Caster";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 282)
			{
				this.name = "Ragged Caster";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 35;
				this.defense = 28;
				this.lifeMax = 450;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 283)
			{
				this.name = "Necromancer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 50;
				this.defense = 18;
				this.lifeMax = 300;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 284)
			{
				this.name = "Necromancer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 35;
				this.defense = 24;
				this.lifeMax = 450;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 285)
			{
				this.name = "Diabolist";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 50;
				this.defense = 12;
				this.lifeMax = 200;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.7f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 286)
			{
				this.name = "Diabolist";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 60;
				this.defense = 10;
				this.lifeMax = 250;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.65f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 287)
			{
				this.name = "Bone Lee";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 90;
				this.defense = 42;
				this.lifeMax = 1000;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = 2000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 288)
			{
				this.name = "Dungeon Spirit";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 56;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 200;
				this.knockBackResist = 0.2f;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.value = 500f;
				this.noTileCollide = true;
				this.noGravity = true;
				flag = true;
			}
			else if (this.type == 289)
			{
				this.name = "Giant Cursed Skull";
				this.width = 44;
				this.height = 44;
				this.aiStyle = 10;
				this.damage = 60;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 150f;
				this.knockBackResist = 0.2f;
				this.npcSlots = 0.75f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 290)
			{
				this.name = "Paladin";
				this.width = 34;
				this.height = 62;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 50;
				this.lifeMax = 5000;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.knockBackResist = 0f;
				this.value = 50000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 291)
			{
				this.name = "Skeleton Sniper";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 292)
			{
				this.name = "Tactical Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 293)
			{
				this.name = "Skeleton Commando";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 294)
			{
				this.name = "Angry Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 34;
				this.defense = 6;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.9f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 295)
			{
				this.name = "Angry Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 28;
				this.defense = 12;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.7f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 296)
			{
				this.name = "Angry Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 24;
				this.defense = 14;
				this.lifeMax = 120;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 299)
			{
				this.name = "Squirrel";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
			}
			else if (this.type == 300)
			{
				this.name = "Mouse";
				this.width = 14;
				this.height = 12;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 4;
				this.npcSlots = 0.25f;
			}
			else if (this.type == 301)
			{
				this.name = "Raven";
				this.width = 36;
				this.height = 26;
				this.aiStyle = 17;
				this.damage = 12;
				this.defense = 2;
				this.lifeMax = 35;
				this.soundHit = 1;
				this.knockBackResist = 0.85f;
				this.soundKilled = 1;
				this.value = 50f;
			}
			if (this.type == 302)
			{
				this.name = "Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 7;
				this.defense = 2;
				this.lifeMax = 25;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 304)
			{
				this.name = "Hoppin' Jack";
				this.width = 34;
				this.height = 28;
				this.aiStyle = 1;
				this.damage = 80;
				this.defense = 20;
				this.lifeMax = 175;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.knockBackResist = 0.5f;
				this.npcSlots = 0.3f;
			}
			else if (this.type >= 305 && this.type <= 314)
			{
				this.name = "Scarecrow";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.value = 1200f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
				if (this.type == 305 || this.type == 310)
				{
					this.damage = 60;
					this.defense = 18;
					this.lifeMax = 500;
					this.knockBackResist = 0.4f;
				}
				else if (this.type == 306 || this.type == 311)
				{
					this.damage = 52;
					this.defense = 14;
					this.lifeMax = 400;
					this.knockBackResist = 0.2f;
					this.scale = 1.05f;
				}
				else if (this.type == 307 || this.type == 312)
				{
					this.damage = 78;
					this.defense = 16;
					this.lifeMax = 600;
					this.knockBackResist = 0.25f;
					this.scale = 0.9f;
				}
				else if (this.type == 308 || this.type == 313)
				{
					this.damage = 66;
					this.defense = 14;
					this.lifeMax = 650;
					this.knockBackResist = 0.35f;
					this.scale = 0.95f;
				}
				else if (this.type == 309 || this.type == 314)
				{
					this.damage = 52;
					this.defense = 26;
					this.lifeMax = 450;
					this.knockBackResist = 0.5f;
					this.scale = 1.1f;
				}
			}
			else if (this.type == 315)
			{
				this.name = "Headless Horseman";
				this.width = 74;
				this.height = 70;
				this.aiStyle = 26;
				this.damage = 130;
				this.defense = 40;
				this.lifeMax = 10000;
				this.soundHit = 12;
				this.soundKilled = 18;
				this.knockBackResist = 0f;
				this.value = 10000f;
				flag = true;
			}
			else if (this.type == 316)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Ghost";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 22;
				this.damage = 40;
				this.defense = 14;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.alpha = 100;
				this.value = 700f;
				flag = true;
				this.knockBackResist = 0.7f;
			}
			else if (this.type == 317)
			{
				this.name = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 16;
				this.defense = 6;
				this.lifeMax = 75;
				this.soundHit = 1;
				this.knockBackResist = 0.7f;
				this.soundKilled = 1;
				this.value = 100f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 318)
			{
				this.name = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.65f;
				this.soundKilled = 1;
				this.value = 100f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 319)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 6;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 85f;
				this.buffImmune[31] = false;
				this.scale = 0.9f;
			}
			else if (this.type == 320)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 15;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 105f;
				this.buffImmune[31] = false;
				this.scale = 1.05f;
			}
			else if (this.type == 321)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 14;
				this.lifeMax = 34;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = 120f;
				this.buffImmune[31] = false;
				this.scale = 1.1f;
			}
			else if (this.type == 322)
			{
				this.name = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 23;
				this.defense = 0;
				this.lifeMax = 115;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.65f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 323)
			{
				this.name = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 18;
				this.defense = 10;
				this.lifeMax = 65;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 120f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 324)
			{
				this.name = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 22;
				this.defense = 10;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.scale = 1.05f;
			}
			else if (this.type == 325)
			{
				this.name = "Mourning Wood";
				this.width = 164;
				this.height = 154;
				this.aiStyle = 57;
				this.damage = 120;
				this.defense = 28;
				this.lifeMax = 12000;
				this.soundHit = 7;
				this.soundKilled = 5;
				this.knockBackResist = 0f;
				this.value = 10000f;
				flag = true;
			}
			else if (this.type == 326)
			{
				this.name = "Splinterling";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 32;
				this.lifeMax = 900;
				this.soundHit = 7;
				this.soundKilled = 6;
				this.knockBackResist = 0.2f;
				this.value = 2000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 327)
			{
				this.name = "Pumpking";
				this.width = 100;
				this.height = 100;
				this.aiStyle = 58;
				this.damage = 50;
				this.defense = 36;
				this.lifeMax = 22000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 50000f;
				this.knockBackResist = 0f;
				flag = true;
			}
			else if (this.type == 328)
			{
				this.name = "Pumpking";
				this.width = 80;
				this.height = 80;
				this.aiStyle = 59;
				this.damage = 65;
				this.defense = 14;
				this.lifeMax = 5000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				flag = true;
				this.dontTakeDamage = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 329)
			{
				this.name = "Hellhound";
				this.width = 46;
				this.height = 30;
				this.aiStyle = 26;
				this.damage = 80;
				this.defense = 38;
				this.lifeMax = 1200;
				this.soundHit = 1;
				this.soundKilled = 5;
				this.knockBackResist = 0.3f;
				this.value = 3000f;
				flag = true;
			}
			else if (this.type == 330)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Poltergeist";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 22;
				this.damage = 90;
				this.defense = 44;
				this.lifeMax = 2000;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.alpha = 100;
				this.value = 4500f;
				flag = true;
				this.knockBackResist = 0.4f;
			}
			if (flag)
			{
				for (int n = 0; n < 90; n++)
				{
					this.buffImmune[n] = true;
				}
			}
			this.frame = default(Rectangle);
			if (scaleOverride > 0f)
			{
				int num = (int)((float)this.width * this.scale);
				int num2 = (int)((float)this.height * this.scale);
				this.position.X = this.position.X + (float)(num / 2);
				this.position.Y = this.position.Y + (float)num2;
				this.scale = scaleOverride;
				this.width = (int)((float)this.width * this.scale);
				this.height = (int)((float)this.height * this.scale);
				if (this.height == 16 || this.height == 32)
				{
					this.height++;
				}
				this.position.X = this.position.X - (float)(this.width / 2);
				this.position.Y = this.position.Y - (float)this.height;
			}
			else
			{
				this.width = (int)((float)this.width * this.scale);
				this.height = (int)((float)this.height * this.scale);
			}
			if (this.buffImmune[20])
			{
				this.buffImmune[70] = true;
			}
			this.life = this.lifeMax;
			this.defDamage = this.damage;
			this.defDefense = this.defense;
			this.netID = this.type;
			this.displayName = Lang.npcName(this.netID, false);
			ServerApi.Hooks.InvokeNpcSetDefaultsInt(ref Type, this);
		}
		public void AI()
		{
			if (this.aiStyle == 0)
			{
				for (int i = 0; i < 255; i++)
				{
					if (Main.player[i].active && Main.player[i].talkNPC == this.whoAmI)
					{
						if (this.type == 105)
						{
							this.Transform(107);
							return;
						}
						if (this.type == 106)
						{
							this.Transform(108);
							return;
						}
						if (this.type == 123)
						{
							this.Transform(124);
							return;
						}
					}
				}
				this.velocity.X = this.velocity.X * 0.93f;
				if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
				{
					this.velocity.X = 0f;
				}
				this.TargetClosest(true);
				this.spriteDirection = this.direction;
				return;
			}
			if (this.aiStyle == 1)
			{
				if (this.type == 244)
				{
					float num = (float)Main.DiscoR / 255f;
					float num2 = (float)Main.DiscoG / 255f;
					float num3 = (float)Main.DiscoB / 255f;
					num *= 1f;
					num2 *= 1f;
					num3 *= 1f;
					this.color.R = (byte)Main.DiscoR;
					this.color.G = (byte)Main.DiscoG;
					this.color.B = (byte)Main.DiscoB;
					this.color.A = 100;
					this.alpha = 175;
				}
				bool flag = false;
				if (!Main.dayTime || this.life != this.lifeMax || (double)this.position.Y > Main.worldSurface * 16.0)
				{
					flag = true;
				}
				if (this.type == 81)
				{
					flag = true;
					if (Main.rand.Next(30) == 0)
					{
						int num4 = Dust.NewDust(this.position, this.width, this.height, 14, 0f, 0f, this.alpha, this.color, 1f);
						Main.dust[num4].velocity *= 0.3f;
					}
				}
				if (this.type == 183)
				{
					flag = true;
				}
				if (this.type == 304)
				{
					flag = true;
				}
				if (this.type == 147 && Main.rand.Next(10) == 0)
				{
					int num5 = Dust.NewDust(this.position, this.width, this.height, 76, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num5].noGravity = true;
					Main.dust[num5].velocity *= 0.1f;
				}
				if (this.type == 244)
				{
					flag = true;
					this.ai[0] += 2f;
				}
				if (this.type == 184)
				{
					if (Main.rand.Next(8) == 0)
					{
						int num6 = Dust.NewDust(this.position - this.velocity, this.width, this.height, 76, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num6].noGravity = true;
						Main.dust[num6].velocity *= 0.15f;
					}
					flag = true;
					if (this.localAI[0] > 0f)
					{
						this.localAI[0] -= 1f;
					}
					if (!this.wet)
					{
						Vector2 vector = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num7 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector.X;
						float num8 = Main.player[this.target].position.Y - vector.Y;
						float num9 = (float)Math.Sqrt((double)(num7 * num7 + num8 * num8));
						if (num9 < 200f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && this.velocity.Y == 0f)
						{
							this.ai[0] = -40f;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (Main.netMode != 1 && this.localAI[0] == 0f)
							{
								num8 = Main.player[this.target].position.Y - vector.Y - (float)Main.rand.Next(0, 200);
								num9 = (float)Math.Sqrt((double)(num7 * num7 + num8 * num8));
								num9 = 4.5f / num9;
								num7 *= num9;
								num8 *= num9;
								this.localAI[0] = 50f;
								Projectile.NewProjectile(vector.X, vector.Y, num7, num8, 174, 9, 0f, Main.myPlayer, 0f, 0f);
							}
						}
					}
				}
				if (this.type == 204)
				{
					flag = true;
					if (this.localAI[0] > 0f)
					{
						this.localAI[0] -= 1f;
					}
					if (!this.wet)
					{
						Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num10 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
						float num11 = Main.player[this.target].position.Y - vector2.Y;
						float num12 = (float)Math.Sqrt((double)(num10 * num10 + num11 * num11));
						if (num12 < 400f && Collision.CanHit(new Vector2(this.position.X, this.position.Y - 20f), this.width, this.height + 20, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && this.velocity.Y == 0f)
						{
							this.ai[0] = -80f;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (Main.netMode != 1 && this.localAI[0] == 0f)
							{
								num11 = Main.player[this.target].position.Y - vector2.Y - (float)Main.rand.Next(-30, 20);
								num11 -= num12 * 0.05f;
								num10 = Main.player[this.target].position.X - vector2.X - (float)Main.rand.Next(-20, 20);
								num12 = (float)Math.Sqrt((double)(num10 * num10 + num11 * num11));
								num12 = 7f / num12;
								num10 *= num12;
								num11 *= num12;
								this.localAI[0] = 65f;
								Projectile.NewProjectile(vector2.X, vector2.Y, num10, num11, 176, 13, 0f, Main.myPlayer, 0f, 0f);
							}
						}
					}
				}
				if (this.ai[2] > 1f)
				{
					this.ai[2] -= 1f;
				}
				if (this.wet)
				{
					if (this.collideY)
					{
						this.velocity.Y = -2f;
					}
					if (this.velocity.Y < 0f && this.ai[3] == this.position.X)
					{
						this.direction *= -1;
						this.ai[2] = 200f;
					}
					if (this.velocity.Y > 0f)
					{
						this.ai[3] = this.position.X;
					}
					if (this.type == 59)
					{
						if (this.velocity.Y > 2f)
						{
							this.velocity.Y = this.velocity.Y * 0.9f;
						}
						else if (this.directionY < 0)
						{
							this.velocity.Y = this.velocity.Y - 0.8f;
						}
						this.velocity.Y = this.velocity.Y - 0.5f;
						if (this.velocity.Y < -10f)
						{
							this.velocity.Y = -10f;
						}
					}
					else
					{
						if (this.velocity.Y > 2f)
						{
							this.velocity.Y = this.velocity.Y * 0.9f;
						}
						this.velocity.Y = this.velocity.Y - 0.5f;
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = -4f;
						}
					}
					if (this.ai[2] == 1f && flag)
					{
						this.TargetClosest(true);
					}
				}
				this.aiAction = 0;
				if (this.ai[2] == 0f)
				{
					this.ai[0] = -100f;
					this.ai[2] = 1f;
					this.TargetClosest(true);
				}
				if (this.velocity.Y == 0f)
				{
					if (this.ai[3] == this.position.X)
					{
						this.direction *= -1;
						this.ai[2] = 200f;
					}
					this.ai[3] = 0f;
					this.velocity.X = this.velocity.X * 0.8f;
					if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
					{
						this.velocity.X = 0f;
					}
					if (flag)
					{
						this.ai[0] += 1f;
					}
					this.ai[0] += 1f;
					if (this.type == 59)
					{
						this.ai[0] += 2f;
					}
					if (this.type == 71)
					{
						this.ai[0] += 3f;
					}
					if (this.type == 138)
					{
						this.ai[0] += 2f;
					}
					if (this.type == 183)
					{
						this.ai[0] += 1f;
					}
					if (this.type == 304)
					{
						float num14 = (float)((1 - this.life / this.lifeMax) * 10);
						this.ai[0] += num14;
					}
					if (this.type == 81)
					{
						if (this.scale >= 0f)
						{
							this.ai[0] += 4f;
						}
						else
						{
							this.ai[0] += 1f;
						}
					}
					if (this.ai[0] >= 0f)
					{
						this.netUpdate = true;
						if (flag && this.ai[2] == 1f)
						{
							this.TargetClosest(true);
						}
						if (this.ai[1] == 2f)
						{
							this.velocity.Y = -8f;
							if (this.type == 59)
							{
								this.velocity.Y = this.velocity.Y - 2f;
							}
							this.velocity.X = this.velocity.X + (float)(3 * this.direction);
							if (this.type == 59)
							{
								this.velocity.X = this.velocity.X + 0.5f * (float)this.direction;
							}
							this.ai[0] = -200f;
							this.ai[1] = 0f;
							this.ai[3] = this.position.X;
						}
						else
						{
							this.velocity.Y = -6f;
							this.velocity.X = this.velocity.X + (float)(2 * this.direction);
							if (this.type == 59)
							{
								this.velocity.X = this.velocity.X + (float)(2 * this.direction);
							}
							this.ai[0] = -120f;
							this.ai[1] += 1f;
						}
						if (this.type == 141)
						{
							this.velocity.Y = this.velocity.Y * 1.3f;
							this.velocity.X = this.velocity.X * 1.2f;
							return;
						}
					}
					else if (this.ai[0] >= -30f)
					{
						this.aiAction = 1;
						return;
					}
				}
				else if (this.target < 255 && ((this.direction == 1 && this.velocity.X < 3f) || (this.direction == -1 && this.velocity.X > -3f)))
				{
					if ((this.direction == -1 && (double)this.velocity.X < 0.1) || (this.direction == 1 && (double)this.velocity.X > -0.1))
					{
						this.velocity.X = this.velocity.X + 0.2f * (float)this.direction;
						return;
					}
					this.velocity.X = this.velocity.X * 0.93f;
					return;
				}
			}
			else if (this.aiStyle == 2)
			{
				if ((this.type == 170 || this.type == 171 || this.type == 180) && Main.rand.Next(1000) == 0)
				{
					Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 9);
				}
				this.noGravity = true;
				if (!this.noTileCollide)
				{
					if (this.collideX)
					{
						this.velocity.X = this.oldVelocity.X * -0.5f;
						if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
						{
							this.velocity.X = 2f;
						}
						if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
						{
							this.velocity.X = -2f;
						}
					}
					if (this.collideY)
					{
						this.velocity.Y = this.oldVelocity.Y * -0.5f;
						if (this.velocity.Y > 0f && this.velocity.Y < 1f)
						{
							this.velocity.Y = 1f;
						}
						if (this.velocity.Y < 0f && this.velocity.Y > -1f)
						{
							this.velocity.Y = -1f;
						}
					}
				}
				if (Main.dayTime && (double)this.position.Y <= Main.worldSurface * 16.0 && (this.type == 2 || this.type == 133 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 317 || this.type == 318))
				{
					if (this.timeLeft > 10)
					{
						this.timeLeft = 10;
					}
					this.directionY = -1;
					if (this.velocity.Y > 0f)
					{
						this.direction = 1;
					}
					this.direction = -1;
					if (this.velocity.X > 0f)
					{
						this.direction = 1;
					}
				}
				else
				{
					this.TargetClosest(true);
				}
				if (this.type == 170 || this.type == 171 || this.type == 180)
				{
					if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						if (this.ai[1] > 0f && !Collision.SolidCollision(this.position, this.width, this.height))
						{
							this.ai[1] = 0f;
							this.ai[0] = 0f;
							this.netUpdate = true;
						}
					}
					else if (this.ai[1] == 0f)
					{
						this.ai[0] += 1f;
					}
					if (this.ai[0] >= 300f)
					{
						this.ai[1] = 1f;
						this.ai[0] = 0f;
						this.netUpdate = true;
					}
					if (this.ai[1] == 0f)
					{
						this.alpha = 0;
						this.noTileCollide = false;
					}
					else
					{
						this.wet = false;
						this.alpha = 200;
						this.noTileCollide = true;
					}
					this.rotation = this.velocity.Y * 0.1f * (float)this.direction;
					this.TargetClosest(true);
					if (this.direction == -1 && this.velocity.X > -4f && this.position.X > Main.player[this.target].position.X + (float)Main.player[this.target].width)
					{
						this.velocity.X = this.velocity.X - 0.08f;
						if (this.velocity.X > 4f)
						{
							this.velocity.X = this.velocity.X - 0.04f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X - 0.2f;
						}
						if (this.velocity.X < -4f)
						{
							this.velocity.X = -4f;
						}
					}
					else if (this.direction == 1 && this.velocity.X < 4f && this.position.X + (float)this.width < Main.player[this.target].position.X)
					{
						this.velocity.X = this.velocity.X + 0.08f;
						if (this.velocity.X < -4f)
						{
							this.velocity.X = this.velocity.X + 0.04f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X + 0.2f;
						}
						if (this.velocity.X > 4f)
						{
							this.velocity.X = 4f;
						}
					}
					if (this.directionY == -1 && (double)this.velocity.Y > -2.5 && this.position.Y > Main.player[this.target].position.Y + (float)Main.player[this.target].height)
					{
						this.velocity.Y = this.velocity.Y - 0.1f;
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.15f;
						}
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = -2.5f;
						}
					}
					else if (this.directionY == 1 && (double)this.velocity.Y < 2.5 && this.position.Y + (float)this.height < Main.player[this.target].position.Y)
					{
						this.velocity.Y = this.velocity.Y + 0.1f;
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.15f;
						}
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = 2.5f;
						}
					}
				}
				else if (this.type == 116)
				{
					this.TargetClosest(true);
					if (this.direction == -1 && this.velocity.X > -6f)
					{
						this.velocity.X = this.velocity.X - 0.1f;
						if (this.velocity.X > 6f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X - 0.2f;
						}
						if (this.velocity.X < -6f)
						{
							this.velocity.X = -6f;
						}
					}
					else if (this.direction == 1 && this.velocity.X < 6f)
					{
						this.velocity.X = this.velocity.X + 0.1f;
						if (this.velocity.X < -6f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X + 0.2f;
						}
						if (this.velocity.X > 6f)
						{
							this.velocity.X = 6f;
						}
					}
					if (this.directionY == -1 && (double)this.velocity.Y > -2.5)
					{
						this.velocity.Y = this.velocity.Y - 0.04f;
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.15f;
						}
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = -2.5f;
						}
					}
					else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
					{
						this.velocity.Y = this.velocity.Y + 0.04f;
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.15f;
						}
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = 2.5f;
						}
					}
					if (Main.rand.Next(40) == 0)
					{
						int num15 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((float)this.height * 0.5f), 5, this.velocity.X, 2f, 0, default(Color), 1f);
						Dust expr_1BA8_cp_0 = Main.dust[num15];
						expr_1BA8_cp_0.velocity.X = expr_1BA8_cp_0.velocity.X * 0.5f;
						Dust expr_1BC6_cp_0 = Main.dust[num15];
						expr_1BC6_cp_0.velocity.Y = expr_1BC6_cp_0.velocity.Y * 0.1f;
					}
				}
				else if (this.type == 133)
				{
					if ((double)this.life < (double)this.lifeMax * 0.5)
					{
						if (this.direction == -1 && this.velocity.X > -6f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
							if (this.velocity.X > 6f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X + 0.05f;
							}
							if (this.velocity.X < -6f)
							{
								this.velocity.X = -6f;
							}
						}
						else if (this.direction == 1 && this.velocity.X < 6f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
							if (this.velocity.X < -6f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - 0.05f;
							}
							if (this.velocity.X > 6f)
							{
								this.velocity.X = 6f;
							}
						}
						if (this.directionY == -1 && this.velocity.Y > -4f)
						{
							this.velocity.Y = this.velocity.Y - 0.1f;
							if (this.velocity.Y > 4f)
							{
								this.velocity.Y = this.velocity.Y - 0.1f;
							}
							else if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.05f;
							}
							if (this.velocity.Y < -4f)
							{
								this.velocity.Y = -4f;
							}
						}
						else if (this.directionY == 1 && this.velocity.Y < 4f)
						{
							this.velocity.Y = this.velocity.Y + 0.1f;
							if (this.velocity.Y < -4f)
							{
								this.velocity.Y = this.velocity.Y + 0.1f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.05f;
							}
							if (this.velocity.Y > 4f)
							{
								this.velocity.Y = 4f;
							}
						}
					}
					else
					{
						if (this.direction == -1 && this.velocity.X > -4f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
							if (this.velocity.X > 4f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X + 0.05f;
							}
							if (this.velocity.X < -4f)
							{
								this.velocity.X = -4f;
							}
						}
						else if (this.direction == 1 && this.velocity.X < 4f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
							if (this.velocity.X < -4f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - 0.05f;
							}
							if (this.velocity.X > 4f)
							{
								this.velocity.X = 4f;
							}
						}
						if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
						{
							this.velocity.Y = this.velocity.Y - 0.04f;
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = this.velocity.Y - 0.05f;
							}
							else if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.03f;
							}
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = -1.5f;
							}
						}
						else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
						{
							this.velocity.Y = this.velocity.Y + 0.04f;
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = this.velocity.Y + 0.05f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.03f;
							}
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = 1.5f;
							}
						}
					}
				}
				else
				{
					float num16 = 4f;
					float num17 = 1.5f;
					num16 *= 1f + (1f - this.scale);
					num17 *= 1f + (1f - this.scale);
					if (this.direction == -1 && this.velocity.X > -num16)
					{
						this.velocity.X = this.velocity.X - 0.1f;
						if (this.velocity.X > num16)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X + 0.05f;
						}
						if (this.velocity.X < -num16)
						{
							this.velocity.X = -num16;
						}
					}
					else if (this.direction == 1 && this.velocity.X < num16)
					{
						this.velocity.X = this.velocity.X + 0.1f;
						if (this.velocity.X < -num16)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X - 0.05f;
						}
						if (this.velocity.X > num16)
						{
							this.velocity.X = num16;
						}
					}
					if (this.directionY == -1 && this.velocity.Y > -num17)
					{
						this.velocity.Y = this.velocity.Y - 0.04f;
						if (this.velocity.Y > num17)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.03f;
						}
						if (this.velocity.Y < -num17)
						{
							this.velocity.Y = -num17;
						}
					}
					else if (this.directionY == 1 && this.velocity.Y < num17)
					{
						this.velocity.Y = this.velocity.Y + 0.04f;
						if (this.velocity.Y < -num17)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.03f;
						}
						if (this.velocity.Y > num17)
						{
							this.velocity.Y = num17;
						}
					}
				}
				if ((this.type == 2 || this.type == 133 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194) && Main.rand.Next(40) == 0)
				{
					int num18 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((float)this.height * 0.5f), 5, this.velocity.X, 2f, 0, default(Color), 1f);
					Dust expr_2584_cp_0 = Main.dust[num18];
					expr_2584_cp_0.velocity.X = expr_2584_cp_0.velocity.X * 0.5f;
					Dust expr_25A2_cp_0 = Main.dust[num18];
					expr_25A2_cp_0.velocity.Y = expr_25A2_cp_0.velocity.Y * 0.1f;
				}
				if (this.wet && this.type != 170 && this.type != 171 && this.type != 172)
				{
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.95f;
					}
					this.velocity.Y = this.velocity.Y - 0.5f;
					if (this.velocity.Y < -4f)
					{
						this.velocity.Y = -4f;
					}
					this.TargetClosest(true);
					return;
				}
			}
			else if (this.aiStyle == 3)
			{
				bool flag2 = false;
				if (this.velocity.X == 0f)
				{
					flag2 = true;
				}
				if (this.justHit)
				{
					flag2 = false;
				}
				if (Main.netMode != 1 && this.type == 198 && (double)this.life <= (double)this.lifeMax * 0.55)
				{
					this.Transform(199);
				}
				int num19 = 60;
				if (this.type == 120)
				{
					num19 = 180;
					if (this.ai[3] == -120f)
					{
						this.velocity *= 0f;
						this.ai[3] = 0f;
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
						Vector2 vector3 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num20 = this.oldPos[2].X + (float)this.width * 0.5f - vector3.X;
						float num21 = this.oldPos[2].Y + (float)this.height * 0.5f - vector3.Y;
						float num22 = (float)Math.Sqrt((double)(num20 * num20 + num21 * num21));
						num22 = 2f / num22;
						num20 *= num22;
						num21 *= num22;
						for (int j = 0; j < 20; j++)
						{
							int num23 = Dust.NewDust(this.position, this.width, this.height, 71, num20, num21, 200, default(Color), 2f);
							Main.dust[num23].noGravity = true;
							Dust expr_283B_cp_0 = Main.dust[num23];
							expr_283B_cp_0.velocity.X = expr_283B_cp_0.velocity.X * 2f;
						}
						for (int k = 0; k < 20; k++)
						{
							int num24 = Dust.NewDust(this.oldPos[2], this.width, this.height, 71, -num20, -num21, 200, default(Color), 2f);
							Main.dust[num24].noGravity = true;
							Dust expr_28BC_cp_0 = Main.dust[num24];
							expr_28BC_cp_0.velocity.X = expr_28BC_cp_0.velocity.X * 2f;
						}
					}
				}
				bool flag3 = false;
				bool flag4 = true;
				if (this.type == 47 || this.type == 67 || this.type == 109 || this.type == 110 || this.type == 111 || this.type == 120 || this.type == 163 || this.type == 164 || this.type == 239 || this.type == 168 || this.type == 199 || this.type == 206 || this.type == 214 || this.type == 215 || this.type == 216 || this.type == 217 || this.type == 218 || this.type == 219 || this.type == 220 || this.type == 226 || this.type == 243 || this.type == 251 || this.type == 257 || this.type == 258 || this.type == 290 || this.type == 291 || this.type == 292 || this.type == 293 || this.type == 305 || this.type == 306 || this.type == 307 || this.type == 308 || this.type == 309)
				{
					flag4 = false;
				}
				if ((this.type != 110 && this.type != 111 && this.type != 206 && this.type != 216 && this.type != 214 && this.type != 215 && this.type != 291 && this.type != 292 && this.type != 293) || this.ai[2] <= 0f)
				{
					if (this.velocity.Y == 0f && ((this.velocity.X > 0f && this.direction < 0) || (this.velocity.X < 0f && this.direction > 0)))
					{
						flag3 = true;
					}
					if (this.position.X == this.oldPosition.X || this.ai[3] >= (float)num19 || flag3)
					{
						this.ai[3] += 1f;
					}
					else if ((double)Math.Abs(this.velocity.X) > 0.9 && this.ai[3] > 0f)
					{
						this.ai[3] -= 1f;
					}
					if (this.ai[3] > (float)(num19 * 10))
					{
						this.ai[3] = 0f;
					}
					if (this.justHit)
					{
						this.ai[3] = 0f;
					}
					if (this.ai[3] == (float)num19)
					{
						this.netUpdate = true;
					}
				}
				if ((Main.eclipse || !Main.dayTime || (double)this.position.Y > Main.worldSurface * 16.0 || this.type == 26 || this.type == 27 || this.type == 28 || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 47 || this.type == 67 || this.type == 73 || this.type == 77 || this.type == 78 || this.type == 79 || this.type == 80 || this.type == 110 || this.type == 111 || this.type == 120 || this.type == 168 || this.type == 181 || this.type == 185 || this.type == 198 || this.type == 199 || this.type == 198 || this.type == 206 || this.type == 217 || this.type == 218 || this.type == 219 || this.type == 220 || this.type == 239 || this.type == 243 || this.type == 254 || (this.type == 255 | this.type == 257) || this.type == 258 || this.type == 291 || this.type == 292 || this.type == 293 || (this.type >= 212 && this.type <= 216)) && this.ai[3] < (float)num19)
				{
					if ((this.type == 3 || this.type == 21 || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 77 || this.type == 110 || this.type == 132 || this.type == 167 || this.type == 161 || this.type == 162 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 197 || this.type == 200 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 223 || this.type == 291 || this.type == 292 || this.type == 293 || this.type == 320 || this.type == 321 || this.type == 319) && Main.rand.Next(1000) == 0)
					{
						Main.PlaySound(14, (int)this.position.X, (int)this.position.Y, 1);
					}
					if ((this.type == 78 || this.type == 79 || this.type == 80) && Main.rand.Next(500) == 0)
					{
						Main.PlaySound(26, (int)this.position.X, (int)this.position.Y, 1);
					}
					if (this.type == 159 && Main.rand.Next(500) == 0)
					{
						Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 7);
					}
					if (this.type == 162 && Main.rand.Next(500) == 0)
					{
						Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 6);
					}
					if (this.type == 181 && Main.rand.Next(500) == 0)
					{
						Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 8);
					}
					if (this.type >= 269 && this.type <= 280 && Main.rand.Next(1000) == 0)
					{
						Main.PlaySound(14, (int)this.position.X, (int)this.position.Y, 1);
					}
					this.TargetClosest(true);
				}
				else if ((this.type != 110 && this.type != 111 && this.type != 206 && this.type != 216 && this.type != 214 && this.type != 215 && this.type != 291 && this.type != 292 && this.type != 293) || this.ai[2] <= 0f)
				{
					if (Main.dayTime && (double)(this.position.Y / 16f) < Main.worldSurface && this.timeLeft > 10)
					{
						this.timeLeft = 10;
					}
					if (this.velocity.X == 0f)
					{
						if (this.velocity.Y == 0f)
						{
							this.ai[0] += 1f;
							if (this.ai[0] >= 2f)
							{
								this.direction *= -1;
								this.spriteDirection = this.direction;
								this.ai[0] = 0f;
							}
						}
					}
					else
					{
						this.ai[0] = 0f;
					}
					if (this.direction == 0)
					{
						this.direction = 1;
					}
				}
				if (this.type == 159)
				{
					if (this.type == 159 && ((this.velocity.X > 0f && this.direction < 0) || (this.velocity.X < 0f && this.direction > 0)))
					{
						this.velocity.X = this.velocity.X * 0.95f;
					}
					if (this.velocity.X < -6f || this.velocity.X > 6f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < 6f && this.direction == 1)
					{
						if (this.velocity.Y == 0f && this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.99f;
						}
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > 6f)
						{
							this.velocity.X = 6f;
						}
					}
					else if (this.velocity.X > -6f && this.direction == -1)
					{
						if (this.velocity.Y == 0f && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.99f;
						}
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -6f)
						{
							this.velocity.X = -6f;
						}
					}
				}
				else if (this.type == 199)
				{
					if (this.velocity.X < -4f || this.velocity.X > 4f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < 4f && this.direction == 1)
					{
						if (this.velocity.Y == 0f && this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.8f;
						}
						this.velocity.X = this.velocity.X + 0.1f;
						if (this.velocity.X > 4f)
						{
							this.velocity.X = 4f;
						}
					}
					else if (this.velocity.X > -4f && this.direction == -1)
					{
						if (this.velocity.Y == 0f && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.8f;
						}
						this.velocity.X = this.velocity.X - 0.1f;
						if (this.velocity.X < -4f)
						{
							this.velocity.X = -4f;
						}
					}
				}
				else if (this.type == 120 || this.type == 166 || this.type == 213 || this.type == 258)
				{
					if (this.velocity.X < -3f || this.velocity.X > 3f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < 3f && this.direction == 1)
					{
						if (this.velocity.Y == 0f && this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.99f;
						}
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > 3f)
						{
							this.velocity.X = 3f;
						}
					}
					else if (this.velocity.X > -3f && this.direction == -1)
					{
						if (this.velocity.Y == 0f && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.99f;
						}
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -3f)
						{
							this.velocity.X = -3f;
						}
					}
				}
				else if (this.type == 27 || this.type == 77 || this.type == 104 || this.type == 163 || this.type == 162 || this.type == 196 || this.type == 197 || this.type == 212 || this.type == 257 || this.type == 326)
				{
					if (this.velocity.X < -2f || this.velocity.X > 2f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < 2f && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > 2f)
						{
							this.velocity.X = 2f;
						}
					}
					else if (this.velocity.X > -2f && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -2f)
						{
							this.velocity.X = -2f;
						}
					}
				}
				else if (this.type == 109)
				{
					if (this.velocity.X < -2f || this.velocity.X > 2f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < 2f && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.04f;
						if (this.velocity.X > 2f)
						{
							this.velocity.X = 2f;
						}
					}
					else if (this.velocity.X > -2f && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.04f;
						if (this.velocity.X < -2f)
						{
							this.velocity.X = -2f;
						}
					}
				}
				else if (this.type == 21 || this.type == 26 || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 47 || this.type == 73 || this.type == 140 || this.type == 164 || this.type == 239 || this.type == 167 || this.type == 168 || this.type == 185 || this.type == 198 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 217 || this.type == 218 || this.type == 219 || this.type == 226 || this.type == 181 || this.type == 254)
				{
					float num25 = 1.5f;
					if (this.type == 294)
					{
						num25 = 2f;
					}
					if (this.type == 295)
					{
						num25 = 1.75f;
					}
					if (this.type == 296)
					{
						num25 = 1.25f;
					}
					if (this.type == 201)
					{
						num25 = 1.1f;
					}
					if (this.type == 202)
					{
						num25 = 0.9f;
					}
					if (this.type == 203)
					{
						num25 = 1.2f;
					}
					if (this.type == 21 || this.type == 201 || this.type == 202 || this.type == 203)
					{
						num25 *= 1f + (1f - this.scale);
					}
					if (this.velocity.X < -num25 || this.velocity.X > num25)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < num25 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > num25)
						{
							this.velocity.X = num25;
						}
					}
					else if (this.velocity.X > -num25 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -num25)
						{
							this.velocity.X = -num25;
						}
					}
				}
				else if (this.type >= 269 && this.type <= 280)
				{
					float num26 = 1.5f;
					if (this.type == 269)
					{
						num26 = 2f;
					}
					if (this.type == 270)
					{
						num26 = 1f;
					}
					if (this.type == 271)
					{
						num26 = 1.5f;
					}
					if (this.type == 272)
					{
						num26 = 3f;
					}
					if (this.type == 273)
					{
						num26 = 1.25f;
					}
					if (this.type == 274)
					{
						num26 = 3f;
					}
					if (this.type == 275)
					{
						num26 = 3.25f;
					}
					if (this.type == 276)
					{
						num26 = 2f;
					}
					if (this.type == 277)
					{
						num26 = 2.75f;
					}
					if (this.type == 278)
					{
						num26 = 1.8f;
					}
					if (this.type == 279)
					{
						num26 = 1.3f;
					}
					if (this.type == 280)
					{
						num26 = 2.5f;
					}
					num26 *= 1f + (1f - this.scale);
					if (this.velocity.X < -num26 || this.velocity.X > num26)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < num26 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > num26)
						{
							this.velocity.X = num26;
						}
					}
					else if (this.velocity.X > -num26 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -num26)
						{
							this.velocity.X = -num26;
						}
					}
				}
				else if (this.type >= 305 && this.type <= 314)
				{
					float num27 = 1.5f;
					if (this.type == 305 || this.type == 310)
					{
						num27 = 2f;
					}
					if (this.type == 306 || this.type == 311)
					{
						num27 = 1.25f;
					}
					if (this.type == 307 || this.type == 312)
					{
						num27 = 2.25f;
					}
					if (this.type == 308 || this.type == 313)
					{
						num27 = 1.5f;
					}
					if (this.type == 309 || this.type == 314)
					{
						num27 = 1f;
					}
					if (this.type < 310)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity.X = this.velocity.X * 0.85f;
							if ((double)this.velocity.X > -0.3 && (double)this.velocity.X < 0.3)
							{
								this.velocity.Y = -7f;
								this.velocity.X = num27 * (float)this.direction;
							}
						}
						else if (this.spriteDirection == this.direction)
						{
							this.velocity.X = (this.velocity.X * 10f + num27 * (float)this.direction) / 11f;
						}
					}
					else if (this.velocity.X < -num27 || this.velocity.X > num27)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < num27 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > num27)
						{
							this.velocity.X = num27;
						}
					}
					else if (this.velocity.X > -num27 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -num27)
						{
							this.velocity.X = -num27;
						}
					}
				}
				else if (this.type == 67 || this.type == 220)
				{
					if (this.velocity.X < -0.5f || this.velocity.X > 0.5f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.7f;
						}
					}
					else if (this.velocity.X < 0.5f && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.03f;
						if (this.velocity.X > 0.5f)
						{
							this.velocity.X = 0.5f;
						}
					}
					else if (this.velocity.X > -0.5f && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.03f;
						if (this.velocity.X < -0.5f)
						{
							this.velocity.X = -0.5f;
						}
					}
				}
				else if (this.type == 78 || this.type == 79 || this.type == 80)
				{
					float num28 = 1f;
					float num29 = 0.05f;
					if (this.life < this.lifeMax / 2)
					{
						num28 = 2f;
						num29 = 0.1f;
					}
					if (this.type == 79)
					{
						num28 *= 1.5f;
					}
					if (this.velocity.X < -num28 || this.velocity.X > num28)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.7f;
						}
					}
					else if (this.velocity.X < num28 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + num29;
						if (this.velocity.X > num28)
						{
							this.velocity.X = num28;
						}
					}
					else if (this.velocity.X > -num28 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - num29;
						if (this.velocity.X < -num28)
						{
							this.velocity.X = -num28;
						}
					}
				}
				else if (this.type == 287)
				{
					float num30 = 5f;
					float num31 = 0.2f;
					if (this.velocity.X < -num30 || this.velocity.X > num30)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.7f;
						}
					}
					else if (this.velocity.X < num30 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + num31;
						if (this.velocity.X > num30)
						{
							this.velocity.X = num30;
						}
					}
					else if (this.velocity.X > -num30 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - num31;
						if (this.velocity.X < -num30)
						{
							this.velocity.X = -num30;
						}
					}
				}
				else if (this.type == 243)
				{
					float num32 = 1f;
					float num33 = 0.07f;
					num32 += (1f - (float)this.life / (float)this.lifeMax) * 1.5f;
					num33 += (1f - (float)this.life / (float)this.lifeMax) * 0.15f;
					if (this.velocity.X < -num32 || this.velocity.X > num32)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.7f;
						}
					}
					else if (this.velocity.X < num32 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + num33;
						if (this.velocity.X > num32)
						{
							this.velocity.X = num32;
						}
					}
					else if (this.velocity.X > -num32 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - num33;
						if (this.velocity.X < -num32)
						{
							this.velocity.X = -num32;
						}
					}
				}
				else if (this.type == 251)
				{
					float num34 = 1f;
					float num35 = 0.08f;
					num34 += (1f - (float)this.life / (float)this.lifeMax) * 2f;
					num35 += (1f - (float)this.life / (float)this.lifeMax) * 0.2f;
					if (this.velocity.X < -num34 || this.velocity.X > num34)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.7f;
						}
					}
					else if (this.velocity.X < num34 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + num35;
						if (this.velocity.X > num34)
						{
							this.velocity.X = num34;
						}
					}
					else if (this.velocity.X > -num34 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - num35;
						if (this.velocity.X < -num34)
						{
							this.velocity.X = -num34;
						}
					}
				}
				else if (this.type != 110 && this.type != 111 && this.type != 206 && this.type != 214 && this.type != 215 && this.type != 216 && this.type != 290 && this.type != 291 && this.type != 292 && this.type != 293)
				{
					float num36 = 1f;
					if (this.type == 186)
					{
						num36 = 1.1f;
					}
					if (this.type == 187)
					{
						num36 = 0.9f;
					}
					if (this.type == 188)
					{
						num36 = 1.2f;
					}
					if (this.type == 189)
					{
						num36 = 0.8f;
					}
					if (this.type == 132)
					{
						num36 = 0.95f;
					}
					if (this.type == 200)
					{
						num36 = 0.87f;
					}
					if (this.type == 223)
					{
						num36 = 1.05f;
					}
					if (this.type == 3 || this.type == 132 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223)
					{
						num36 *= 1f + (1f - this.scale);
					}
					if (this.velocity.X < -num36 || this.velocity.X > num36)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < num36 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > num36)
						{
							this.velocity.X = num36;
						}
					}
					else if (this.velocity.X > -num36 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -num36)
						{
							this.velocity.X = -num36;
						}
					}
				}
				if (this.type == 258)
				{
					if (this.velocity.Y != 0f)
					{
						this.TargetClosest(true);
						this.spriteDirection = this.direction;
						if (Main.player[this.target].center().X < this.position.X && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.95f;
						}
						else if (Main.player[this.target].center().X > this.position.X + (float)this.width && this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.95f;
						}
						if (Main.player[this.target].center().X < this.position.X && this.velocity.X > -5f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (Main.player[this.target].center().X > this.position.X + (float)this.width && this.velocity.X < 5f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
					}
					else if (Main.player[this.target].center().Y + 50f < this.position.Y && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.velocity.Y = -7f;
					}
				}
				if (this.type == 185)
				{
					if (this.velocity.Y == 0f)
					{
						this.rotation = 0f;
						this.localAI[0] = 0f;
					}
					else if (this.localAI[0] == 1f)
					{
						this.rotation += this.velocity.X * 0.05f;
					}
				}
				if (this.type == 159 && Main.netMode != 1)
				{
					Vector2 vector4 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num37 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector4.X;
					float num38 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector4.Y;
					float num39 = (float)Math.Sqrt((double)(num37 * num37 + num38 * num38));
					if (num39 > 300f)
					{
						this.Transform(158);
					}
				}
				if (this.type == 164 && Main.netMode != 1 && this.velocity.Y == 0f)
				{
					int num40 = (int)this.center().X / 16;
					int num41 = (int)this.center().Y / 16;
					bool flag5 = false;
					for (int l = num40 - 1; l <= num40 + 1; l++)
					{
						for (int m = num41 - 1; m <= num41 + 1; m++)
						{
							if (Main.tile[l, m].wall > 0)
							{
								flag5 = true;
							}
						}
					}
					if (flag5)
					{
						this.Transform(165);
					}
				}
				if (this.type == 239 && Main.netMode != 1 && this.velocity.Y == 0f)
				{
					int num42 = (int)this.center().X / 16;
					int num43 = (int)this.center().Y / 16;
					bool flag6 = false;
					for (int n = num42 - 1; n <= num42 + 1; n++)
					{
						for (int num44 = num43 - 1; num44 <= num43 + 1; num44++)
						{
							if (Main.tile[n, num44].wall > 0)
							{
								flag6 = true;
							}
						}
					}
					if (flag6)
					{
						this.Transform(240);
					}
				}
				if (this.type == 163 && Main.netMode != 1 && this.velocity.Y == 0f)
				{
					int num45 = (int)this.center().X / 16;
					int num46 = (int)this.center().Y / 16;
					bool flag7 = false;
					for (int num47 = num45 - 1; num47 <= num45 + 1; num47++)
					{
						for (int num48 = num46 - 1; num48 <= num46 + 1; num48++)
						{
							if (Main.tile[num47, num48].wall > 0)
							{
								flag7 = true;
							}
						}
					}
					if (flag7)
					{
						this.Transform(238);
					}
				}
				if (this.type == 236 && Main.netMode != 1 && this.velocity.Y == 0f)
				{
					int num49 = (int)this.center().X / 16;
					int num50 = (int)this.center().Y / 16;
					bool flag8 = false;
					for (int num51 = num49 - 1; num51 <= num49 + 1; num51++)
					{
						for (int num52 = num50 - 1; num52 <= num50 + 1; num52++)
						{
							if (Main.tile[num51, num52].wall > 0)
							{
								flag8 = true;
							}
						}
					}
					if (flag8)
					{
						this.Transform(237);
					}
				}
				if (this.type == 243)
				{
					if (this.justHit && Main.rand.Next(3) == 0)
					{
						this.ai[2] -= (float)Main.rand.Next(30);
					}
					if (this.ai[2] < 0f)
					{
						this.ai[2] = 0f;
					}
					if (this.confused)
					{
						this.ai[2] = 0f;
					}
					this.ai[2] += 1f;
					float num53 = (float)Main.rand.Next(30, 900);
					num53 *= (float)this.life / (float)this.lifeMax;
					num53 += 30f;
					if (Main.netMode != 1 && this.ai[2] >= num53 && this.velocity.Y == 0f && !Main.player[this.target].dead && !Main.player[this.target].frozen && ((this.direction > 0 && this.center().X < Main.player[this.target].center().X) || (this.direction < 0 && this.center().X > Main.player[this.target].center().X)) && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						float num54 = 15f;
						Vector2 vector5 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + 20f);
						vector5.X += (float)(10 * this.direction);
						float num55 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector5.X;
						float num56 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector5.Y;
						num55 += (float)Main.rand.Next(-40, 41);
						num56 += (float)Main.rand.Next(-40, 41);
						float num57 = (float)Math.Sqrt((double)(num55 * num55 + num56 * num56));
						this.netUpdate = true;
						num57 = num54 / num57;
						num55 *= num57;
						num56 *= num57;
						int num58 = 32;
						int num59 = 257;
						vector5.X += num55 * 3f;
						vector5.Y += num56 * 3f;
						Projectile.NewProjectile(vector5.X, vector5.Y, num55, num56, num59, num58, 0f, Main.myPlayer, 0f, 0f);
						this.ai[2] = 0f;
					}
				}
				if (this.type == 251)
				{
					if (this.justHit)
					{
						this.ai[2] -= (float)Main.rand.Next(30);
					}
					if (this.ai[2] < 0f)
					{
						this.ai[2] = 0f;
					}
					if (this.confused)
					{
						this.ai[2] = 0f;
					}
					this.ai[2] += 1f;
					float num60 = (float)Main.rand.Next(60, 1800);
					num60 *= (float)this.life / (float)this.lifeMax;
					num60 += 15f;
					if (Main.netMode != 1 && this.ai[2] >= num60 && this.velocity.Y == 0f && !Main.player[this.target].dead && !Main.player[this.target].frozen && ((this.direction > 0 && this.center().X < Main.player[this.target].center().X) || (this.direction < 0 && this.center().X > Main.player[this.target].center().X)) && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						float num61 = 15f;
						Vector2 vector6 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + 12f);
						vector6.X += (float)(6 * this.direction);
						float num62 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector6.X;
						float num63 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector6.Y;
						num62 += (float)Main.rand.Next(-40, 41);
						num63 += (float)Main.rand.Next(-30, 0);
						float num64 = (float)Math.Sqrt((double)(num62 * num62 + num63 * num63));
						this.netUpdate = true;
						num64 = num61 / num64;
						num62 *= num64;
						num63 *= num64;
						int num65 = 30;
						int num66 = 83;
						vector6.X += num62 * 3f;
						vector6.Y += num63 * 3f;
						Projectile.NewProjectile(vector6.X, vector6.Y, num62, num63, num66, num65, 0f, Main.myPlayer, 0f, 0f);
						this.ai[2] = 0f;
					}
				}
				if (this.type == 110 || this.type == 111 || this.type == 206 || this.type == 214 || this.type == 215 || this.type == 216 || this.type == 290 || this.type == 291 || this.type == 292 || this.type == 293)
				{
					if (this.confused)
					{
						this.ai[2] = 0f;
					}
					else
					{
						if (this.ai[1] > 0f)
						{
							this.ai[1] -= 1f;
						}
						if (this.justHit)
						{
							this.ai[1] = 30f;
							this.ai[2] = 0f;
						}
						int num67 = 70;
						if (this.type == 291)
						{
							num67 = 200;
						}
						if (this.type == 292)
						{
							num67 = 120;
						}
						if (this.type == 293)
						{
							num67 = 90;
						}
						if (this.type == 111)
						{
							num67 = 180;
						}
						if (this.type == 206)
						{
							num67 = 50;
						}
						if (this.type == 214)
						{
							num67 = 40;
						}
						if (this.type == 215)
						{
							num67 = 80;
						}
						if (this.type == 290)
						{
							num67 = 30;
						}
						bool flag9 = false;
						if (this.type == 216)
						{
							if (this.localAI[2] >= 20f)
							{
								flag9 = true;
							}
							if (flag9)
							{
								num67 = 60;
							}
							else
							{
								num67 = 8;
							}
						}
						if (this.ai[2] > 0f)
						{
							this.TargetClosest(true);
							if (this.ai[1] == (float)(num67 / 2))
							{
								if (this.type == 216)
								{
									this.localAI[2] += 1f;
								}
								float num68 = 11f;
								if (this.type == 111)
								{
									num68 = 9f;
								}
								if (this.type == 206)
								{
									num68 = 7f;
								}
								if (this.type == 290)
								{
									num68 = 9f;
								}
								if (this.type == 293)
								{
									num68 = 4f;
								}
								if (this.type == 214)
								{
									num68 = 14f;
								}
								if (this.type == 215)
								{
									num68 = 16f;
								}
								Vector2 vector7 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								if (this.type == 206)
								{
									vector7.Y -= 10f;
								}
								if (this.type == 290)
								{
									vector7.Y -= 10f;
								}
								float num69 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector7.X;
								float num70 = Math.Abs(num69) * 0.1f;
								if (this.type == 291 || this.type == 292)
								{
									num70 = 0f;
								}
								if (this.type == 215)
								{
									num70 = Math.Abs(num69) * 0.08f;
								}
								if (this.type == 214 || (this.type == 216 && !flag9))
								{
									num70 = 0f;
								}
								float num71 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector7.Y - num70;
								if (this.type == 291)
								{
									num69 += (float)Main.rand.Next(-40, 41) * 0.2f;
									num71 += (float)Main.rand.Next(-40, 41) * 0.2f;
								}
								else if (this.type != 292)
								{
									num69 += (float)Main.rand.Next(-40, 41);
									num71 += (float)Main.rand.Next(-40, 41);
								}
								float num72 = (float)Math.Sqrt((double)(num69 * num69 + num71 * num71));
								this.netUpdate = true;
								num72 = num68 / num72;
								num69 *= num72;
								num71 *= num72;
								int num73 = 35;
								if (this.type == 111)
								{
									num73 = 11;
								}
								if (this.type == 206)
								{
									num73 = 37;
								}
								int num74 = 82;
								if (this.type == 111)
								{
									num74 = 81;
								}
								if (this.type == 206)
								{
									num74 = 177;
								}
								if (this.type == 291)
								{
									num74 = 302;
									num73 = 100;
								}
								if (this.type == 290)
								{
									num74 = 300;
									num73 = 60;
								}
								if (this.type == 293)
								{
									num74 = 303;
									num73 = 60;
								}
								if (this.type == 214)
								{
									num74 = 180;
									num73 = 25;
								}
								if (this.type == 215)
								{
									num74 = 82;
									num73 = 40;
								}
								if (this.type == 292)
								{
									num73 = 50;
									num74 = 180;
								}
								if (this.type == 216)
								{
									num74 = 180;
									num73 = 30;
									if (flag9)
									{
										num73 = 100;
										num74 = 240;
										this.localAI[2] = 0f;
									}
								}
								vector7.X += num69;
								vector7.Y += num71;
								if (Main.netMode != 1)
								{
									if (this.type == 292)
									{
										for (int num75 = 0; num75 < 4; num75++)
										{
											num69 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector7.X;
											num71 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector7.Y;
											num72 = (float)Math.Sqrt((double)(num69 * num69 + num71 * num71));
											num72 = 12f / num72;
											num69 += (float)Main.rand.Next(-40, 41);
											num71 += (float)Main.rand.Next(-40, 41);
											num69 *= num72;
											num71 *= num72;
											Projectile.NewProjectile(vector7.X, vector7.Y, num69, num71, num74, num73, 0f, Main.myPlayer, 0f, 0f);
										}
									}
									else
									{
										Projectile.NewProjectile(vector7.X, vector7.Y, num69, num71, num74, num73, 0f, Main.myPlayer, 0f, 0f);
									}
								}
								if (Math.Abs(num71) > Math.Abs(num69) * 2f)
								{
									if (num71 > 0f)
									{
										this.ai[2] = 1f;
									}
									else
									{
										this.ai[2] = 5f;
									}
								}
								else if (Math.Abs(num69) > Math.Abs(num71) * 2f)
								{
									this.ai[2] = 3f;
								}
								else if (num71 > 0f)
								{
									this.ai[2] = 2f;
								}
								else
								{
									this.ai[2] = 4f;
								}
							}
							if (this.velocity.Y != 0f || this.ai[1] <= 0f)
							{
								this.ai[2] = 0f;
								this.ai[1] = 0f;
							}
							else
							{
								this.velocity.X = this.velocity.X * 0.9f;
								this.spriteDirection = this.direction;
							}
						}
						if (this.ai[2] <= 0f && this.velocity.Y == 0f && this.ai[1] <= 0f && !Main.player[this.target].dead && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							float num76 = 10f;
							Vector2 vector8 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num77 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector8.X;
							float num78 = Math.Abs(num77) * 0.1f;
							float num79 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector8.Y - num78;
							num77 += (float)Main.rand.Next(-40, 41);
							num79 += (float)Main.rand.Next(-40, 41);
							float num80 = (float)Math.Sqrt((double)(num77 * num77 + num79 * num79));
							float num81 = 700f;
							if (this.type == 214)
							{
								num81 = 550f;
							}
							if (this.type == 215)
							{
								num81 = 800f;
							}
							if (num80 < num81)
							{
								this.netUpdate = true;
								this.velocity.X = this.velocity.X * 0.5f;
								num80 = num76 / num80;
								num77 *= num80;
								num79 *= num80;
								this.ai[2] = 3f;
								this.ai[1] = (float)num67;
								if (Math.Abs(num79) > Math.Abs(num77) * 2f)
								{
									if (num79 > 0f)
									{
										this.ai[2] = 1f;
									}
									else
									{
										this.ai[2] = 5f;
									}
								}
								else if (Math.Abs(num77) > Math.Abs(num79) * 2f)
								{
									this.ai[2] = 3f;
								}
								else if (num79 > 0f)
								{
									this.ai[2] = 2f;
								}
								else
								{
									this.ai[2] = 4f;
								}
							}
						}
						if (this.ai[2] <= 0f)
						{
							float num82 = 1f;
							float num83 = 0.07f;
							if (this.type == 214)
							{
								num82 = 2f;
								num83 = 0.09f;
							}
							else if (this.type == 215)
							{
								num82 = 1.5f;
								num83 = 0.08f;
							}
							if (this.velocity.X < -num82 || this.velocity.X > num82)
							{
								if (this.velocity.Y == 0f)
								{
									this.velocity *= 0.8f;
								}
							}
							else if (this.velocity.X < num82 && this.direction == 1)
							{
								this.velocity.X = this.velocity.X + num83;
								if (this.velocity.X > num82)
								{
									this.velocity.X = num82;
								}
							}
							else if (this.velocity.X > -1f && this.direction == -1)
							{
								this.velocity.X = this.velocity.X - num83;
								if (this.velocity.X < -num82)
								{
									this.velocity.X = -num82;
								}
							}
						}
					}
				}
				if (this.type == 109 && Main.netMode != 1 && !Main.player[this.target].dead)
				{
					if (this.justHit)
					{
						this.ai[2] = 0f;
					}
					this.ai[2] += 1f;
					if (this.ai[2] > 450f)
					{
						Vector2 vector9 = new Vector2(this.position.X + (float)this.width * 0.5f - (float)(this.direction * 24), this.position.Y + 4f);
						int num84 = 3 * this.direction;
						int num85 = -5;
						int num86 = Projectile.NewProjectile(vector9.X, vector9.Y, (float)num84, (float)num85, 75, 0, 0f, Main.myPlayer, 0f, 0f);
						Main.projectile[num86].timeLeft = 300;
						this.ai[2] = 0f;
					}
				}
				bool flag10 = false;
				if (this.velocity.Y == 0f)
				{
					int num87 = (int)(this.position.Y + (float)this.height + 7f) / 16;
					int num88 = (int)this.position.X / 16;
					int num89 = (int)(this.position.X + (float)this.width) / 16;
					for (int num90 = num88; num90 <= num89; num90++)
					{
						if (false)
						{
							return;
						}
						if (Main.tile[num90, num87].nactive() && Main.tileSolid[(int)Main.tile[num90, num87].type])
						{
							flag10 = true;
							break;
						}
					}
				}
				if (this.velocity.Y >= 0f)
				{
					int num91 = 0;
					if (this.velocity.X < 0f)
					{
						num91 = -1;
					}
					if (this.velocity.X > 0f)
					{
						num91 = 1;
					}
					Vector2 vector10 = this.position;
					vector10.X += this.velocity.X;
					int num92 = (int)((vector10.X + (float)(this.width / 2) + (float)((this.width / 2 + 1) * num91)) / 16f);
					int num93 = (int)((vector10.Y + (float)this.height - 1f) / 16f);
					if (false)
					{
						Main.tile[num92, num93] = new Tile();
					}
					if (false)
					{
						Main.tile[num92, num93 - 1] = new Tile();
					}
					if (false)
					{
						Main.tile[num92, num93 - 2] = new Tile();
					}
					if (false)
					{
						Main.tile[num92, num93 - 3] = new Tile();
					}
					if (false)
					{
						Main.tile[num92, num93 + 1] = new Tile();
					}
					if (false)
					{
						Main.tile[num92 - num91, num93 - 3] = new Tile();
					}
					if ((float)(num92 * 16) < vector10.X + (float)this.width && (float)(num92 * 16 + 16) > vector10.X && ((Main.tile[num92, num93].nactive() && Main.tile[num92, num93].slope() == 0 && Main.tile[num92, num93 - 1].slope() == 0 && Main.tileSolid[(int)Main.tile[num92, num93].type] && !Main.tileSolidTop[(int)Main.tile[num92, num93].type]) || (Main.tile[num92, num93 - 1].halfBrick() && Main.tile[num92, num93 - 1].nactive())) && (!Main.tile[num92, num93 - 1].nactive() || !Main.tileSolid[(int)Main.tile[num92, num93 - 1].type] || Main.tileSolidTop[(int)Main.tile[num92, num93 - 1].type] || (Main.tile[num92, num93 - 1].halfBrick() && (!Main.tile[num92, num93 - 4].nactive() || !Main.tileSolid[(int)Main.tile[num92, num93 - 4].type] || Main.tileSolidTop[(int)Main.tile[num92, num93 - 4].type]))) && (!Main.tile[num92, num93 - 2].nactive() || !Main.tileSolid[(int)Main.tile[num92, num93 - 2].type] || Main.tileSolidTop[(int)Main.tile[num92, num93 - 2].type]) && (!Main.tile[num92, num93 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num92, num93 - 3].type] || Main.tileSolidTop[(int)Main.tile[num92, num93 - 3].type]) && (!Main.tile[num92 - num91, num93 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num92 - num91, num93 - 3].type]))
					{
						float num94 = (float)(num93 * 16);
						if (Main.tile[num92, num93].halfBrick())
						{
							num94 += 8f;
						}
						if (Main.tile[num92, num93 - 1].halfBrick())
						{
							num94 -= 8f;
						}
						if (num94 < vector10.Y + (float)this.height)
						{
							float num95 = vector10.Y + (float)this.height - num94;
							float num96 = 16.1f;
							if (this.type == 163 || this.type == 164 || this.type == 236 || this.type == 239)
							{
								num96 += 8f;
							}
							if (num95 <= num96)
							{
								this.gfxOffY += this.position.Y + (float)this.height - num94;
								this.position.Y = num94 - (float)this.height;
								if (num95 < 9f)
								{
									this.stepSpeed = 1f;
								}
								else
								{
									this.stepSpeed = 2f;
								}
							}
						}
					}
				}
				if (flag10)
				{
					int num97 = (int)((this.position.X + (float)(this.width / 2) + (float)(15 * this.direction)) / 16f);
					int num98 = (int)((this.position.Y + (float)this.height - 15f) / 16f);
					if (this.type == 109 || this.type == 163 || this.type == 164 || this.type == 199 || this.type == 236 || this.type == 239 || this.type == 257 || this.type == 258 || this.type == 290)
					{
						num97 = (int)((this.position.X + (float)(this.width / 2) + (float)((this.width / 2 + 16) * this.direction)) / 16f);
					}
					if (false)
					{
						Main.tile[num97, num98] = new Tile();
					}
					if (false)
					{
						Main.tile[num97, num98 - 1] = new Tile();
					}
					if (false)
					{
						Main.tile[num97, num98 - 2] = new Tile();
					}
					if (false)
					{
						Main.tile[num97, num98 - 3] = new Tile();
					}
					if (false)
					{
						Main.tile[num97, num98 + 1] = new Tile();
					}
					if (false)
					{
						Main.tile[num97 + this.direction, num98 - 1] = new Tile();
					}
					if (false)
					{
						Main.tile[num97 + this.direction, num98 + 1] = new Tile();
					}
					if (false)
					{
						Main.tile[num97 - this.direction, num98 + 1] = new Tile();
					}
					Main.tile[num97, num98 + 1].halfBrick();
					if (Main.tile[num97, num98 - 1].nactive() && Main.tile[num97, num98 - 1].type == 10 && flag4)
					{
						this.ai[2] += 1f;
						this.ai[3] = 0f;
						if (this.ai[2] >= 60f)
						{
							if (!Main.bloodMoon && (this.type == 3 || this.type == 132 || this.type == 161 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 320 || this.type == 321 || this.type == 319))
							{
								this.ai[1] = 0f;
							}
							this.velocity.X = 0.5f * (float)(-(float)this.direction);
							this.ai[1] += 5f;
							if (this.type == 27)
							{
								this.ai[1] += 1f;
							}
							if (this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296)
							{
								this.ai[1] += 6f;
							}
							this.ai[2] = 0f;
							bool flag11 = false;
							if (this.ai[1] >= 10f)
							{
								flag11 = true;
								this.ai[1] = 10f;
							}
							WorldGen.KillTile(num97, num98 - 1, true, false, false);
							if ((Main.netMode != 1 || !flag11) && flag11 && Main.netMode != 1)
							{
								if (this.type == 26)
								{
									WorldGen.KillTile(num97, num98 - 1, false, false, false);
									if (Main.netMode == 2)
									{
										NetMessage.SendData(17, -1, -1, "", 0, (float)num97, (float)(num98 - 1), 0f, 0);
									}
								}
								else
								{
									bool flag12 = WorldGen.OpenDoor(num97, num98 - 1, this.direction);
									if (!flag12)
									{
										this.ai[3] = (float)num19;
										this.netUpdate = true;
									}
									if (Main.netMode == 2 && flag12)
									{
										NetMessage.SendData(19, -1, -1, "", 0, (float)num97, (float)(num98 - 1), (float)this.direction, 0);
									}
								}
							}
						}
					}
					else
					{
						if ((this.velocity.X < 0f && this.spriteDirection == -1) || (this.velocity.X > 0f && this.spriteDirection == 1))
						{
							if (Main.tile[num97, num98 - 2].nactive() && Main.tileSolid[(int)Main.tile[num97, num98 - 2].type])
							{
								if (Main.tile[num97, num98 - 3].nactive() && Main.tileSolid[(int)Main.tile[num97, num98 - 3].type])
								{
									this.velocity.Y = -8f;
									this.netUpdate = true;
								}
								else
								{
									this.velocity.Y = -7f;
									this.netUpdate = true;
								}
							}
							else if (Main.tile[num97, num98 - 1].nactive() && Main.tileSolid[(int)Main.tile[num97, num98 - 1].type])
							{
								this.velocity.Y = -6f;
								this.netUpdate = true;
							}
							else if (this.position.Y + (float)this.height - (float)(num98 * 16) > 20f && Main.tile[num97, num98].nactive() && Main.tile[num97, num98].slope() == 0 && Main.tileSolid[(int)Main.tile[num97, num98].type])
							{
								this.velocity.Y = -5f;
								this.netUpdate = true;
							}
							else if (this.directionY < 0 && this.type != 67 && (!Main.tile[num97, num98 + 1].nactive() || !Main.tileSolid[(int)Main.tile[num97, num98 + 1].type]) && (!Main.tile[num97 + this.direction, num98 + 1].nactive() || !Main.tileSolid[(int)Main.tile[num97 + this.direction, num98 + 1].type]))
							{
								this.velocity.Y = -8f;
								this.velocity.X = this.velocity.X * 1.5f;
								this.netUpdate = true;
							}
							else if (flag4)
							{
								this.ai[1] = 0f;
								this.ai[2] = 0f;
							}
							if (this.velocity.Y == 0f && flag2 && this.ai[3] == 1f)
							{
								this.velocity.Y = -5f;
							}
						}
						if ((this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 47 || this.type == 77 || this.type == 104 || this.type == 168 || this.type == 196) && this.velocity.Y == 0f && Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) < 100f && Math.Abs(this.position.Y + (float)(this.height / 2) - (Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2))) < 50f && ((this.direction > 0 && this.velocity.X >= 1f) || (this.direction < 0 && this.velocity.X <= -1f)))
						{
							this.velocity.X = this.velocity.X * 2f;
							if (this.velocity.X > 3f)
							{
								this.velocity.X = 3f;
							}
							if (this.velocity.X < -3f)
							{
								this.velocity.X = -3f;
							}
							this.velocity.Y = -4f;
							this.netUpdate = true;
						}
						if (this.type == 120 && this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y * 1.1f;
						}
						if (this.type == 287 && this.velocity.Y == 0f && Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) < 150f && Math.Abs(this.position.Y + (float)(this.height / 2) - (Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2))) < 50f && ((this.direction > 0 && this.velocity.X >= 1f) || (this.direction < 0 && this.velocity.X <= -1f)))
						{
							this.velocity.X = (float)(8 * this.direction);
							this.velocity.Y = -4f;
							this.netUpdate = true;
						}
						if (this.type == 287 && this.velocity.Y < 0f)
						{
							this.velocity.X = this.velocity.X * 1.2f;
							this.velocity.Y = this.velocity.Y * 1.1f;
						}
					}
				}
				else if (flag4)
				{
					this.ai[1] = 0f;
					this.ai[2] = 0f;
				}
				if (Main.netMode != 1 && this.type == 120 && this.ai[3] >= (float)num19)
				{
					int num99 = (int)Main.player[this.target].position.X / 16;
					int num100 = (int)Main.player[this.target].position.Y / 16;
					int num101 = (int)this.position.X / 16;
					int num102 = (int)this.position.Y / 16;
					int num103 = 20;
					int num104 = 0;
					bool flag13 = false;
					if (Math.Abs(this.position.X - Main.player[this.target].position.X) + Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
					{
						num104 = 100;
						flag13 = true;
					}
					while (!flag13)
					{
						if (num104 >= 100)
						{
							return;
						}
						num104++;
						int num105 = Main.rand.Next(num99 - num103, num99 + num103);
						int num106 = Main.rand.Next(num100 - num103, num100 + num103);
						for (int num107 = num106; num107 < num100 + num103; num107++)
						{
							if ((num107 < num100 - 4 || num107 > num100 + 4 || num105 < num99 - 4 || num105 > num99 + 4) && (num107 < num102 - 1 || num107 > num102 + 1 || num105 < num101 - 1 || num105 > num101 + 1) && Main.tile[num105, num107].nactive())
							{
								bool flag14 = true;
								if (this.type == 32 && Main.tile[num105, num107 - 1].wall == 0)
								{
									flag14 = false;
								}
								else if (Main.tile[num105, num107 - 1].lava())
								{
									flag14 = false;
								}
								if (flag14 && Main.tileSolid[(int)Main.tile[num105, num107].type] && !Collision.SolidTiles(num105 - 1, num105 + 1, num107 - 4, num107 - 1))
								{
									this.position.X = (float)(num105 * 16 - this.width / 2);
									this.position.Y = (float)(num107 * 16 - this.height);
									this.netUpdate = true;
									this.ai[3] = -120f;
								}
							}
						}
					}
				}
			}
			else if (this.aiStyle == 4)
			{
				if (this.target < 0 || this.target == 255 || Main.player[this.target].dead || !Main.player[this.target].active)
				{
					this.TargetClosest(true);
				}
				bool dead = Main.player[this.target].dead;
				float num108 = this.position.X + (float)(this.width / 2) - Main.player[this.target].position.X - (float)(Main.player[this.target].width / 2);
				float num109 = this.position.Y + (float)this.height - 59f - Main.player[this.target].position.Y - (float)(Main.player[this.target].height / 2);
				float num110 = (float)Math.Atan2((double)num109, (double)num108) + 1.57f;
				if (num110 < 0f)
				{
					num110 += 6.283f;
				}
				else if ((double)num110 > 6.283)
				{
					num110 -= 6.283f;
				}
				float num111 = 0f;
				if (this.ai[0] == 0f && this.ai[1] == 0f)
				{
					num111 = 0.02f;
				}
				if (this.ai[0] == 0f && this.ai[1] == 2f && this.ai[2] > 40f)
				{
					num111 = 0.05f;
				}
				if (this.ai[0] == 3f && this.ai[1] == 0f)
				{
					num111 = 0.05f;
				}
				if (this.ai[0] == 3f && this.ai[1] == 2f && this.ai[2] > 40f)
				{
					num111 = 0.08f;
				}
				if (this.rotation < num110)
				{
					if ((double)(num110 - this.rotation) > 3.1415)
					{
						this.rotation -= num111;
					}
					else
					{
						this.rotation += num111;
					}
				}
				else if (this.rotation > num110)
				{
					if ((double)(this.rotation - num110) > 3.1415)
					{
						this.rotation += num111;
					}
					else
					{
						this.rotation -= num111;
					}
				}
				if (this.rotation > num110 - num111 && this.rotation < num110 + num111)
				{
					this.rotation = num110;
				}
				if (this.rotation < 0f)
				{
					this.rotation += 6.283f;
				}
				else if ((double)this.rotation > 6.283)
				{
					this.rotation -= 6.283f;
				}
				if (this.rotation > num110 - num111 && this.rotation < num110 + num111)
				{
					this.rotation = num110;
				}
				if (Main.rand.Next(5) == 0)
				{
					int num112 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((float)this.height * 0.5f), 5, this.velocity.X, 2f, 0, default(Color), 1f);
					Dust expr_7D3A_cp_0 = Main.dust[num112];
					expr_7D3A_cp_0.velocity.X = expr_7D3A_cp_0.velocity.X * 0.5f;
					Dust expr_7D58_cp_0 = Main.dust[num112];
					expr_7D58_cp_0.velocity.Y = expr_7D58_cp_0.velocity.Y * 0.1f;
				}
				if (Main.dayTime || dead)
				{
					this.velocity.Y = this.velocity.Y - 0.04f;
					if (this.timeLeft > 10)
					{
						this.timeLeft = 10;
						return;
					}
				}
				else if (this.ai[0] == 0f)
				{
					if (this.ai[1] == 0f)
					{
						float num113 = 5f;
						float num114 = 0.04f;
						Vector2 vector11 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num115 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector11.X;
						float num116 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 200f - vector11.Y;
						float num117 = (float)Math.Sqrt((double)(num115 * num115 + num116 * num116));
						float num118 = num117;
						num117 = num113 / num117;
						num115 *= num117;
						num116 *= num117;
						if (this.velocity.X < num115)
						{
							this.velocity.X = this.velocity.X + num114;
							if (this.velocity.X < 0f && num115 > 0f)
							{
								this.velocity.X = this.velocity.X + num114;
							}
						}
						else if (this.velocity.X > num115)
						{
							this.velocity.X = this.velocity.X - num114;
							if (this.velocity.X > 0f && num115 < 0f)
							{
								this.velocity.X = this.velocity.X - num114;
							}
						}
						if (this.velocity.Y < num116)
						{
							this.velocity.Y = this.velocity.Y + num114;
							if (this.velocity.Y < 0f && num116 > 0f)
							{
								this.velocity.Y = this.velocity.Y + num114;
							}
						}
						else if (this.velocity.Y > num116)
						{
							this.velocity.Y = this.velocity.Y - num114;
							if (this.velocity.Y > 0f && num116 < 0f)
							{
								this.velocity.Y = this.velocity.Y - num114;
							}
						}
						this.ai[2] += 1f;
						if (this.ai[2] >= 600f)
						{
							this.ai[1] = 1f;
							this.ai[2] = 0f;
							this.ai[3] = 0f;
							this.target = 255;
							this.netUpdate = true;
						}
						else if (this.position.Y + (float)this.height < Main.player[this.target].position.Y && num118 < 500f)
						{
							if (!Main.player[this.target].dead)
							{
								this.ai[3] += 1f;
							}
							if (this.ai[3] >= 110f)
							{
								this.ai[3] = 0f;
								this.rotation = num110;
								float num119 = 5f;
								float num120 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector11.X;
								float num121 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector11.Y;
								float num122 = (float)Math.Sqrt((double)(num120 * num120 + num121 * num121));
								num122 = num119 / num122;
								Vector2 vector12 = vector11;
								Vector2 vector13;
								vector13.X = num120 * num122;
								vector13.Y = num121 * num122;
								vector12.X += vector13.X * 10f;
								vector12.Y += vector13.Y * 10f;
								if (Main.netMode != 1)
								{
									int num123 = NPC.NewNPC((int)vector12.X, (int)vector12.Y, 5, 0);
									Main.npc[num123].velocity.X = vector13.X;
									Main.npc[num123].velocity.Y = vector13.Y;
									if (Main.netMode == 2 && num123 < 200)
									{
										NetMessage.SendData(23, -1, -1, "", num123, 0f, 0f, 0f, 0);
									}
								}
								Main.PlaySound(3, (int)vector12.X, (int)vector12.Y, 1);
								for (int num124 = 0; num124 < 10; num124++)
								{
									Dust.NewDust(vector12, 20, 20, 5, vector13.X * 0.4f, vector13.Y * 0.4f, 0, default(Color), 1f);
								}
							}
						}
					}
					else if (this.ai[1] == 1f)
					{
						this.rotation = num110;
						float num125 = 6f;
						Vector2 vector14 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num126 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector14.X;
						float num127 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector14.Y;
						float num128 = (float)Math.Sqrt((double)(num126 * num126 + num127 * num127));
						num128 = num125 / num128;
						this.velocity.X = num126 * num128;
						this.velocity.Y = num127 * num128;
						this.ai[1] = 2f;
					}
					else if (this.ai[1] == 2f)
					{
						this.ai[2] += 1f;
						if (this.ai[2] >= 40f)
						{
							this.velocity.X = this.velocity.X * 0.98f;
							this.velocity.Y = this.velocity.Y * 0.98f;
							if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
							{
								this.velocity.X = 0f;
							}
							if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
							{
								this.velocity.Y = 0f;
							}
						}
						else
						{
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
						}
						if (this.ai[2] >= 150f)
						{
							this.ai[3] += 1f;
							this.ai[2] = 0f;
							this.target = 255;
							this.rotation = num110;
							if (this.ai[3] >= 3f)
							{
								this.ai[1] = 0f;
								this.ai[3] = 0f;
							}
							else
							{
								this.ai[1] = 1f;
							}
						}
					}
					if ((double)this.life < (double)this.lifeMax * 0.5)
					{
						this.ai[0] = 1f;
						this.ai[1] = 0f;
						this.ai[2] = 0f;
						this.ai[3] = 0f;
						this.netUpdate = true;
						return;
					}
				}
				else if (this.ai[0] == 1f || this.ai[0] == 2f)
				{
					if (this.ai[0] == 1f)
					{
						this.ai[2] += 0.005f;
						if ((double)this.ai[2] > 0.5)
						{
							this.ai[2] = 0.5f;
						}
					}
					else
					{
						this.ai[2] -= 0.005f;
						if (this.ai[2] < 0f)
						{
							this.ai[2] = 0f;
						}
					}
					this.rotation += this.ai[2];
					this.ai[1] += 1f;
					if (this.ai[1] == 100f)
					{
						this.ai[0] += 1f;
						this.ai[1] = 0f;
						if (this.ai[0] == 3f)
						{
							this.ai[2] = 0f;
						}
						else
						{
							Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
							for (int num129 = 0; num129 < 2; num129++)
							{
								Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 8, 1f);
								Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 7, 1f);
								Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 6, 1f);
							}
							for (int num130 = 0; num130 < 20; num130++)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, default(Color), 1f);
							}
							Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
						}
					}
					Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, default(Color), 1f);
					this.velocity.X = this.velocity.X * 0.98f;
					this.velocity.Y = this.velocity.Y * 0.98f;
					if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
					{
						this.velocity.X = 0f;
					}
					if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
					{
						this.velocity.Y = 0f;
						return;
					}
				}
				else
				{
					this.damage = 23;
					this.defense = 0;
					if (this.ai[1] == 0f)
					{
						float num131 = 6f;
						float num132 = 0.07f;
						Vector2 vector15 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num133 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector15.X;
						float num134 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 120f - vector15.Y;
						float num135 = (float)Math.Sqrt((double)(num133 * num133 + num134 * num134));
						num135 = num131 / num135;
						num133 *= num135;
						num134 *= num135;
						if (this.velocity.X < num133)
						{
							this.velocity.X = this.velocity.X + num132;
							if (this.velocity.X < 0f && num133 > 0f)
							{
								this.velocity.X = this.velocity.X + num132;
							}
						}
						else if (this.velocity.X > num133)
						{
							this.velocity.X = this.velocity.X - num132;
							if (this.velocity.X > 0f && num133 < 0f)
							{
								this.velocity.X = this.velocity.X - num132;
							}
						}
						if (this.velocity.Y < num134)
						{
							this.velocity.Y = this.velocity.Y + num132;
							if (this.velocity.Y < 0f && num134 > 0f)
							{
								this.velocity.Y = this.velocity.Y + num132;
							}
						}
						else if (this.velocity.Y > num134)
						{
							this.velocity.Y = this.velocity.Y - num132;
							if (this.velocity.Y > 0f && num134 < 0f)
							{
								this.velocity.Y = this.velocity.Y - num132;
							}
						}
						this.ai[2] += 1f;
						if (this.ai[2] >= 200f)
						{
							this.ai[1] = 1f;
							this.ai[2] = 0f;
							this.ai[3] = 0f;
							this.target = 255;
							this.netUpdate = true;
							return;
						}
					}
					else
					{
						if (this.ai[1] == 1f)
						{
							Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
							this.rotation = num110;
							float num136 = 6.8f;
							Vector2 vector16 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num137 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector16.X;
							float num138 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector16.Y;
							float num139 = (float)Math.Sqrt((double)(num137 * num137 + num138 * num138));
							num139 = num136 / num139;
							this.velocity.X = num137 * num139;
							this.velocity.Y = num138 * num139;
							this.ai[1] = 2f;
							return;
						}
						if (this.ai[1] == 2f)
						{
							this.ai[2] += 1f;
							if (this.ai[2] >= 40f)
							{
								this.velocity.X = this.velocity.X * 0.97f;
								this.velocity.Y = this.velocity.Y * 0.97f;
								if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
								{
									this.velocity.X = 0f;
								}
								if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
								{
									this.velocity.Y = 0f;
								}
							}
							else
							{
								this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
							}
							if (this.ai[2] >= 130f)
							{
								this.ai[3] += 1f;
								this.ai[2] = 0f;
								this.target = 255;
								this.rotation = num110;
								if (this.ai[3] >= 3f)
								{
									this.ai[1] = 0f;
									this.ai[3] = 0f;
									return;
								}
								this.ai[1] = 1f;
								return;
							}
						}
					}
				}
			}
			else if (this.aiStyle == 5)
			{
				if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
				{
					this.TargetClosest(true);
				}
				float num140 = 6f;
				float num141 = 0.05f;
				if (this.type == 6 || this.type == 173)
				{
					num140 = 4f;
					num141 = 0.02f;
				}
				else if (this.type == 94)
				{
					num140 = 4.2f;
					num141 = 0.022f;
				}
				else if (this.type == 252)
				{
					if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						num140 = 6f;
						num141 = 0.1f;
					}
					else
					{
						num141 = 0.01f;
						num140 = 2f;
					}
				}
				else if (this.type == 42 || (this.type >= 231 && this.type <= 235))
				{
					num140 = 3.5f;
					num141 = 0.021f;
					if (this.type == 231)
					{
						num140 = 3f;
						num141 = 0.017f;
					}
					num140 *= 1f - this.scale;
					num141 *= 1f - this.scale;
				}
				else if (this.type == 205)
				{
					num140 = 3.25f;
					num141 = 0.018f;
				}
				else if (this.type == 176)
				{
					num140 = 4f;
					num141 = 0.017f;
				}
				else if (this.type == 23)
				{
					num140 = 1f;
					num141 = 0.03f;
				}
				else if (this.type == 5)
				{
					num140 = 5f;
					num141 = 0.03f;
				}
				else if (this.type == 210 || this.type == 211)
				{
					this.localAI[0] += 1f;
					float num142 = (this.localAI[0] - 60f) / 60f;
					if (num142 > 1f)
					{
						num142 = 1f;
					}
					else
					{
						if (this.velocity.X > 6f)
						{
							this.velocity.X = 6f;
						}
						if (this.velocity.X < -6f)
						{
							this.velocity.X = -6f;
						}
						if (this.velocity.Y > 6f)
						{
							this.velocity.Y = 6f;
						}
						if (this.velocity.Y < -6f)
						{
							this.velocity.Y = -6f;
						}
					}
					num140 = 5f;
					num141 = 0.1f;
					num141 *= num142;
				}
				Vector2 vector17 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num143 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2);
				float num144 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2);
				num143 = (float)((int)(num143 / 8f) * 8);
				num144 = (float)((int)(num144 / 8f) * 8);
				vector17.X = (float)((int)(vector17.X / 8f) * 8);
				vector17.Y = (float)((int)(vector17.Y / 8f) * 8);
				num143 -= vector17.X;
				num144 -= vector17.Y;
				float num145 = (float)Math.Sqrt((double)(num143 * num143 + num144 * num144));
				float num146 = num145;
				bool flag15 = false;
				if (num145 > 600f)
				{
					flag15 = true;
				}
				if (num145 == 0f)
				{
					num143 = this.velocity.X;
					num144 = this.velocity.Y;
				}
				else
				{
					num145 = num140 / num145;
					num143 *= num145;
					num144 *= num145;
				}
				if (this.type == 6 || this.type == 42 || this.type == 94 || this.type == 139 || this.type == 173 || this.type == 176 || this.type == 205 || this.type == 210 || this.type == 211 || (this.type >= 231 && this.type <= 235))
				{
					if (num146 > 100f || this.type == 42 || this.type == 94 || this.type == 176 || this.type == 210 || this.type == 211 || (this.type >= 231 && this.type <= 235))
					{
						this.ai[0] += 1f;
						if (this.ai[0] > 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.023f;
						}
						else
						{
							this.velocity.Y = this.velocity.Y - 0.023f;
						}
						if (this.ai[0] < -100f || this.ai[0] > 100f)
						{
							this.velocity.X = this.velocity.X + 0.023f;
						}
						else
						{
							this.velocity.X = this.velocity.X - 0.023f;
						}
						if (this.ai[0] > 200f)
						{
							this.ai[0] = -200f;
						}
					}
					if (num146 < 150f && (this.type == 6 || this.type == 94 || this.type == 173))
					{
						this.velocity.X = this.velocity.X + num143 * 0.007f;
						this.velocity.Y = this.velocity.Y + num144 * 0.007f;
					}
				}
				if (Main.player[this.target].dead)
				{
					num143 = (float)this.direction * num140 / 2f;
					num144 = -num140 / 2f;
				}
				if (this.velocity.X < num143)
				{
					this.velocity.X = this.velocity.X + num141;
					if (this.type != 173 && this.type != 6 && this.type != 42 && (this.type < 231 || this.type > 235) && this.type != 94 && this.type != 139 && this.velocity.X < 0f && num143 > 0f)
					{
						this.velocity.X = this.velocity.X + num141;
					}
				}
				else if (this.velocity.X > num143)
				{
					this.velocity.X = this.velocity.X - num141;
					if (this.type != 173 && this.type != 6 && this.type != 42 && (this.type < 231 || this.type > 235) && this.type != 94 && this.type != 139 && this.velocity.X > 0f && num143 < 0f)
					{
						this.velocity.X = this.velocity.X - num141;
					}
				}
				if (this.velocity.Y < num144)
				{
					this.velocity.Y = this.velocity.Y + num141;
					if (this.type != 173 && this.type != 6 && this.type != 42 && (this.type < 231 || this.type > 235) && this.type != 94 && this.type != 139 && this.velocity.Y < 0f && num144 > 0f)
					{
						this.velocity.Y = this.velocity.Y + num141;
					}
				}
				else if (this.velocity.Y > num144)
				{
					this.velocity.Y = this.velocity.Y - num141;
					if (this.type != 173 && this.type != 6 && this.type != 42 && (this.type < 231 || this.type > 235) && this.type != 94 && this.type != 139 && this.velocity.Y > 0f && num144 < 0f)
					{
						this.velocity.Y = this.velocity.Y - num141;
					}
				}
				if (this.type == 23)
				{
					if (num143 > 0f)
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)num144, (double)num143);
					}
					else if (num143 < 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)num144, (double)num143) + 3.14f;
					}
				}
				else if (this.type == 139)
				{
					this.localAI[0] += 1f;
					if (this.justHit)
					{
						this.localAI[0] = 0f;
					}
					if (Main.netMode != 1 && this.localAI[0] >= 120f)
					{
						this.localAI[0] = 0f;
						if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							int num147 = 25;
							int num148 = 84;
							Projectile.NewProjectile(vector17.X, vector17.Y, num143, num144, num148, num147, 0f, Main.myPlayer, 0f, 0f);
						}
					}
					int num149 = (int)this.position.X + this.width / 2;
					int num150 = (int)this.position.Y + this.height / 2;
					num149 /= 16;
					num150 /= 16;
					if (num143 > 0f)
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)num144, (double)num143);
					}
					if (num143 < 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)num144, (double)num143) + 3.14f;
					}
				}
				else if (this.type == 6 || this.type == 94 || this.type == 173)
				{
					this.rotation = (float)Math.Atan2((double)num144, (double)num143) - 1.57f;
				}
				else if (this.type == 42 || this.type == 176 || this.type == 205 || (this.type >= 231 && this.type <= 235))
				{
					if (this.velocity.X > 0f)
					{
						this.spriteDirection = 1;
					}
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
					}
					this.rotation = this.velocity.X * 0.1f;
				}
				else
				{
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
				}
				if (this.type == 6 || this.type == 23 || this.type == 42 || this.type == 94 || this.type == 139 || this.type == 173 || this.type == 176 || this.type == 205 || this.type == 210 || this.type == 211 || (this.type >= 231 && this.type <= 235))
				{
					float num151 = 0.7f;
					if (this.type == 6 || this.type == 173)
					{
						num151 = 0.4f;
					}
					if (this.collideX)
					{
						this.netUpdate = true;
						this.velocity.X = this.oldVelocity.X * -num151;
						if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
						{
							this.velocity.X = 2f;
						}
						if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
						{
							this.velocity.X = -2f;
						}
					}
					if (this.collideY)
					{
						this.netUpdate = true;
						this.velocity.Y = this.oldVelocity.Y * -num151;
						if (this.velocity.Y > 0f && (double)this.velocity.Y < 1.5)
						{
							this.velocity.Y = 2f;
						}
						if (this.velocity.Y < 0f && (double)this.velocity.Y > -1.5)
						{
							this.velocity.Y = -2f;
						}
					}
					if (this.type == 23)
					{
						int num152 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X, this.position.Y - this.velocity.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
						Main.dust[num152].noGravity = true;
						Dust expr_9E3C_cp_0 = Main.dust[num152];
						expr_9E3C_cp_0.velocity.X = expr_9E3C_cp_0.velocity.X * 0.3f;
						Dust expr_9E5A_cp_0 = Main.dust[num152];
						expr_9E5A_cp_0.velocity.Y = expr_9E5A_cp_0.velocity.Y * 0.3f;
					}
					else if (this.type != 42 && this.type != 139 && this.type != 176 && this.type != 205 && this.type != 210 && this.type != 211 && this.type != 252 && (this.type < 231 || this.type > 235) && Main.rand.Next(20) == 0)
					{
						int num153 = 18;
						if (this.type == 173)
						{
							num153 = 5;
						}
						int num154 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((float)this.height * 0.5f), num153, this.velocity.X, 2f, 75, this.color, this.scale);
						Dust expr_9F90_cp_0 = Main.dust[num154];
						expr_9F90_cp_0.velocity.X = expr_9F90_cp_0.velocity.X * 0.5f;
						Dust expr_9FAE_cp_0 = Main.dust[num154];
						expr_9FAE_cp_0.velocity.Y = expr_9FAE_cp_0.velocity.Y * 0.1f;
					}
				}
				else if (this.type != 252 && Main.rand.Next(40) == 0)
				{
					int num155 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((float)this.height * 0.5f), 5, this.velocity.X, 2f, 0, default(Color), 1f);
					Dust expr_A05B_cp_0 = Main.dust[num155];
					expr_A05B_cp_0.velocity.X = expr_A05B_cp_0.velocity.X * 0.5f;
					Dust expr_A079_cp_0 = Main.dust[num155];
					expr_A079_cp_0.velocity.Y = expr_A079_cp_0.velocity.Y * 0.1f;
				}
				if ((this.type == 6 || this.type == 94 || this.type == 173) && this.wet)
				{
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.95f;
					}
					this.velocity.Y = this.velocity.Y - 0.3f;
					if (this.velocity.Y < -2f)
					{
						this.velocity.Y = -2f;
					}
				}
				if (this.type == 205 && this.wet)
				{
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.95f;
					}
					this.velocity.Y = this.velocity.Y - 0.5f;
					if (this.velocity.Y < -4f)
					{
						this.velocity.Y = -4f;
					}
					this.TargetClosest(true);
				}
				if (this.type == 42 || this.type == 176 || (this.type >= 231 && this.type <= 235))
				{
					if (this.wet)
					{
						if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.95f;
						}
						this.velocity.Y = this.velocity.Y - 0.5f;
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = -4f;
						}
						this.TargetClosest(true);
					}
					if (this.ai[1] == 101f)
					{
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
						this.ai[1] = 0f;
					}
					if (Main.netMode != 1)
					{
						this.ai[1] += (float)Main.rand.Next(5, 20) * 0.1f * this.scale;
						if (this.type == 176)
						{
							this.ai[1] += (float)Main.rand.Next(5, 20) * 0.1f * this.scale;
						}
						if (this.ai[1] >= 130f)
						{
							if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								float num156 = 8f;
								Vector2 vector18 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)(this.height / 2));
								float num157 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector18.X + (float)Main.rand.Next(-20, 21);
								float num158 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector18.Y + (float)Main.rand.Next(-20, 21);
								if ((num157 < 0f && this.velocity.X < 0f) || (num157 > 0f && this.velocity.X > 0f))
								{
									float num159 = (float)Math.Sqrt((double)(num157 * num157 + num158 * num158));
									num159 = num156 / num159;
									num157 *= num159;
									num158 *= num159;
									int num160 = (int)(10f * this.scale);
									if (this.type == 176)
									{
										num160 = (int)(30f * this.scale);
									}
									int num161 = 55;
									int num162 = Projectile.NewProjectile(vector18.X, vector18.Y, num157, num158, num161, num160, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num162].timeLeft = 300;
									this.ai[1] = 101f;
									this.netUpdate = true;
								}
								else
								{
									this.ai[1] = 0f;
								}
							}
							else
							{
								this.ai[1] = 0f;
							}
						}
					}
				}
				if (this.type == 139 && flag15)
				{
					if ((this.velocity.X > 0f && num143 > 0f) || (this.velocity.X < 0f && num143 < 0f))
					{
						if (Math.Abs(this.velocity.X) < 12f)
						{
							this.velocity.X = this.velocity.X * 1.05f;
						}
					}
					else
					{
						this.velocity.X = this.velocity.X * 0.9f;
					}
				}
				if (Main.netMode != 1 && this.type == 94 && !Main.player[this.target].dead)
				{
					if (this.justHit)
					{
						this.localAI[0] = 0f;
					}
					this.localAI[0] += 1f;
					if (this.localAI[0] == 180f)
					{
						if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							NPC.NewNPC((int)(this.position.X + (float)(this.width / 2) + this.velocity.X), (int)(this.position.Y + (float)(this.height / 2) + this.velocity.Y), 112, 0);
						}
						this.localAI[0] = 0f;
					}
				}
				if ((Main.dayTime && this.type != 173 && this.type != 6 && this.type != 23 && this.type != 42 && this.type != 94 && this.type != 176 && this.type != 205 && this.type != 210 && this.type != 211 && this.type != 252 && (this.type < 231 || this.type > 235)) || Main.player[this.target].dead)
				{
					this.velocity.Y = this.velocity.Y - num141 * 2f;
					if (this.timeLeft > 10)
					{
						this.timeLeft = 10;
					}
				}
				if (((this.velocity.X > 0f && this.oldVelocity.X < 0f) || (this.velocity.X < 0f && this.oldVelocity.X > 0f) || (this.velocity.Y > 0f && this.oldVelocity.Y < 0f) || (this.velocity.Y < 0f && this.oldVelocity.Y > 0f)) && !this.justHit)
				{
					this.netUpdate = true;
					return;
				}
			}
			else if (this.aiStyle == 6)
			{
				if (this.type == 117 && this.localAI[1] == 0f)
				{
					this.localAI[1] = 1f;
					Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 13);
					int num163 = 1;
					if (this.velocity.X < 0f)
					{
						num163 = -1;
					}
					for (int num164 = 0; num164 < 20; num164++)
					{
						Dust.NewDust(new Vector2(this.position.X - 20f, this.position.Y - 20f), this.width + 40, this.height + 40, 5, (float)(num163 * 8), -1f, 0, default(Color), 1f);
					}
				}
				if (this.type >= 13 && this.type <= 15)
				{
					this.realLife = -1;
				}
				else if (this.ai[3] > 0f)
				{
					this.realLife = (int)this.ai[3];
				}
				if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
				{
					this.TargetClosest(true);
				}
				if (Main.player[this.target].dead && this.timeLeft > 300)
				{
					this.timeLeft = 300;
				}
				if (Main.netMode != 1)
				{
					if (this.type == 87 && this.ai[0] == 0f)
					{
						this.ai[3] = (float)this.whoAmI;
						this.realLife = this.whoAmI;
						int num165 = this.whoAmI;
						for (int num166 = 0; num166 < 14; num166++)
						{
							int num167 = 89;
							if (num166 == 1 || num166 == 8)
							{
								num167 = 88;
							}
							else if (num166 == 11)
							{
								num167 = 90;
							}
							else if (num166 == 12)
							{
								num167 = 91;
							}
							else if (num166 == 13)
							{
								num167 = 92;
							}
							int num168 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), num167, this.whoAmI);
							Main.npc[num168].ai[3] = (float)this.whoAmI;
							Main.npc[num168].realLife = this.whoAmI;
							Main.npc[num168].ai[1] = (float)num165;
							Main.npc[num165].ai[0] = (float)num168;
							NetMessage.SendData(23, -1, -1, "", num168, 0f, 0f, 0f, 0);
							num165 = num168;
						}
					}
					if ((this.type == 7 || this.type == 8 || this.type == 10 || this.type == 11 || this.type == 13 || this.type == 14 || this.type == 39 || this.type == 40 || this.type == 95 || this.type == 96 || this.type == 98 || this.type == 99 || this.type == 117 || this.type == 118) && this.ai[0] == 0f)
					{
						if (this.type == 7 || this.type == 10 || this.type == 13 || this.type == 39 || this.type == 95 || this.type == 98 || this.type == 117)
						{
							if (this.type < 13 || this.type > 15)
							{
								this.ai[3] = (float)this.whoAmI;
								this.realLife = this.whoAmI;
							}
							this.ai[2] = (float)Main.rand.Next(8, 13);
							if (this.type == 10)
							{
								this.ai[2] = (float)Main.rand.Next(4, 7);
							}
							if (this.type == 13)
							{
								this.ai[2] = (float)Main.rand.Next(45, 56);
							}
							if (this.type == 39)
							{
								this.ai[2] = (float)Main.rand.Next(12, 19);
							}
							if (this.type == 95)
							{
								this.ai[2] = (float)Main.rand.Next(6, 12);
							}
							if (this.type == 98)
							{
								this.ai[2] = (float)Main.rand.Next(20, 26);
							}
							if (this.type == 117)
							{
								this.ai[2] = (float)Main.rand.Next(3, 6);
							}
							this.ai[0] = (float)NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), this.type + 1, this.whoAmI);
						}
						else if ((this.type == 8 || this.type == 11 || this.type == 14 || this.type == 40 || this.type == 96 || this.type == 99 || this.type == 118) && this.ai[2] > 0f)
						{
							this.ai[0] = (float)NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), this.type, this.whoAmI);
						}
						else
						{
							this.ai[0] = (float)NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), this.type + 1, this.whoAmI);
						}
						if (this.type < 13 || this.type > 15)
						{
							Main.npc[(int)this.ai[0]].ai[3] = this.ai[3];
							Main.npc[(int)this.ai[0]].realLife = this.realLife;
						}
						Main.npc[(int)this.ai[0]].ai[1] = (float)this.whoAmI;
						Main.npc[(int)this.ai[0]].ai[2] = this.ai[2] - 1f;
						this.netUpdate = true;
					}
					if ((this.type == 8 || this.type == 9 || this.type == 11 || this.type == 12 || this.type == 40 || this.type == 41 || this.type == 96 || this.type == 97 || this.type == 99 || this.type == 100 || (this.type > 87 && this.type <= 92) || this.type == 118 || this.type == 119) && (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != this.aiStyle))
					{
						this.life = 0;
						this.HitEffect(0, 10.0);
						this.active = false;
					}
					if ((this.type == 7 || this.type == 8 || this.type == 10 || this.type == 11 || this.type == 39 || this.type == 40 || this.type == 95 || this.type == 96 || this.type == 98 || this.type == 99 || (this.type >= 87 && this.type < 92) || this.type == 117 || this.type == 118) && (!Main.npc[(int)this.ai[0]].active || Main.npc[(int)this.ai[0]].aiStyle != this.aiStyle))
					{
						this.life = 0;
						this.HitEffect(0, 10.0);
						this.active = false;
					}
					if (this.type == 13 || this.type == 14 || this.type == 15)
					{
						if (!Main.npc[(int)this.ai[1]].active && !Main.npc[(int)this.ai[0]].active)
						{
							this.life = 0;
							this.HitEffect(0, 10.0);
							this.active = false;
						}
						if (this.type == 13 && !Main.npc[(int)this.ai[0]].active)
						{
							this.life = 0;
							this.HitEffect(0, 10.0);
							this.active = false;
						}
						if (this.type == 15 && !Main.npc[(int)this.ai[1]].active)
						{
							this.life = 0;
							this.HitEffect(0, 10.0);
							this.active = false;
						}
						if (this.type == 14 && (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != this.aiStyle))
						{
							this.type = 13;
							int num169 = this.whoAmI;
							float num170 = (float)this.life / (float)this.lifeMax;
							float num171 = this.ai[0];
							this.SetDefaults(this.type, -1f);
							this.life = (int)((float)this.lifeMax * num170);
							this.ai[0] = num171;
							this.TargetClosest(true);
							this.netUpdate = true;
							this.whoAmI = num169;
						}
						if (this.type == 14 && (!Main.npc[(int)this.ai[0]].active || Main.npc[(int)this.ai[0]].aiStyle != this.aiStyle))
						{
							int num172 = this.whoAmI;
							float num173 = (float)this.life / (float)this.lifeMax;
							float num174 = this.ai[1];
							this.SetDefaults(this.type, -1f);
							this.life = (int)((float)this.lifeMax * num173);
							this.ai[1] = num174;
							this.TargetClosest(true);
							this.netUpdate = true;
							this.whoAmI = num172;
						}
						if (this.life == 0)
						{
							bool flag16 = true;
							for (int num175 = 0; num175 < 200; num175++)
							{
								if (Main.npc[num175].active && (Main.npc[num175].type == 13 || Main.npc[num175].type == 14 || Main.npc[num175].type == 15))
								{
									flag16 = false;
									break;
								}
							}
							if (flag16)
							{
								this.boss = true;
								this.NPCLoot();
							}
						}
					}
					if (!this.active && Main.netMode == 2)
					{
						NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0);
					}
				}
				int num176 = (int)(this.position.X / 16f) - 1;
				int num177 = (int)((this.position.X + (float)this.width) / 16f) + 2;
				int num178 = (int)(this.position.Y / 16f) - 1;
				int num179 = (int)((this.position.Y + (float)this.height) / 16f) + 2;
				if (num176 < 0)
				{
					num176 = 0;
				}
				if (num177 > Main.maxTilesX)
				{
					num177 = Main.maxTilesX;
				}
				if (num178 < 0)
				{
					num178 = 0;
				}
				if (num179 > Main.maxTilesY)
				{
					num179 = Main.maxTilesY;
				}
				bool flag17 = false;
				if (this.type >= 87 && this.type <= 92)
				{
					flag17 = true;
				}
				if (!flag17)
				{
					for (int num180 = num176; num180 < num177; num180++)
					{
						for (int num181 = num178; num181 < num179; num181++)
						{
							if (true && ((Main.tile[num180, num181].nactive() && (Main.tileSolid[(int)Main.tile[num180, num181].type] || (Main.tileSolidTop[(int)Main.tile[num180, num181].type] && Main.tile[num180, num181].frameY == 0))) || Main.tile[num180, num181].liquid > 64))
							{
								Vector2 vector19;
								vector19.X = (float)(num180 * 16);
								vector19.Y = (float)(num181 * 16);
								if (this.position.X + (float)this.width > vector19.X && this.position.X < vector19.X + 16f && this.position.Y + (float)this.height > vector19.Y && this.position.Y < vector19.Y + 16f)
								{
									flag17 = true;
									if (Main.rand.Next(100) == 0 && this.type != 117 && Main.tile[num180, num181].nactive())
									{
										WorldGen.KillTile(num180, num181, true, true, false);
									}
									if (Main.netMode != 1 && Main.tile[num180, num181].type == 2)
									{
										byte arg_B5BA_0 = Main.tile[num180, num181 - 1].type;
									}
								}
							}
						}
					}
				}
				if (!flag17 && (this.type == 7 || this.type == 10 || this.type == 13 || this.type == 39 || this.type == 95 || this.type == 98 || this.type == 117))
				{
					Rectangle rectangle = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
					int num182 = 1000;
					bool flag18 = true;
					for (int num183 = 0; num183 < 255; num183++)
					{
						if (Main.player[num183].active)
						{
							Rectangle rectangle2 = new Rectangle((int)Main.player[num183].position.X - num182, (int)Main.player[num183].position.Y - num182, num182 * 2, num182 * 2);
							if (rectangle.Intersects(rectangle2))
							{
								flag18 = false;
								break;
							}
						}
					}
					if (flag18)
					{
						flag17 = true;
					}
				}
				if (this.type >= 87 && this.type <= 92)
				{
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = 1;
					}
					else if (this.velocity.X > 0f)
					{
						this.spriteDirection = -1;
					}
				}
				float num184 = 8f;
				float num185 = 0.07f;
				if (this.type == 95)
				{
					num184 = 5.5f;
					num185 = 0.045f;
				}
				if (this.type == 10)
				{
					num184 = 6f;
					num185 = 0.05f;
				}
				if (this.type == 13)
				{
					num184 = 10f;
					num185 = 0.07f;
				}
				if (this.type == 87)
				{
					num184 = 11f;
					num185 = 0.25f;
				}
				if (this.type == 117 && Main.wof >= 0)
				{
					float num186 = (float)Main.npc[Main.wof].life / (float)Main.npc[Main.wof].lifeMax;
					if ((double)num186 < 0.5)
					{
						num184 += 1f;
						num185 += 0.1f;
					}
					if ((double)num186 < 0.25)
					{
						num184 += 1f;
						num185 += 0.1f;
					}
					if ((double)num186 < 0.1)
					{
						num184 += 2f;
						num185 += 0.1f;
					}
				}
				Vector2 vector20 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num187 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2);
				float num188 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2);
				num187 = (float)((int)(num187 / 16f) * 16);
				num188 = (float)((int)(num188 / 16f) * 16);
				vector20.X = (float)((int)(vector20.X / 16f) * 16);
				vector20.Y = (float)((int)(vector20.Y / 16f) * 16);
				num187 -= vector20.X;
				num188 -= vector20.Y;
				float num189 = (float)Math.Sqrt((double)(num187 * num187 + num188 * num188));
				if (this.ai[1] > 0f && this.ai[1] < (float)Main.npc.Length)
				{
					try
					{
						vector20 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						num187 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - vector20.X;
						num188 = Main.npc[(int)this.ai[1]].position.Y + (float)(Main.npc[(int)this.ai[1]].height / 2) - vector20.Y;
					}
					catch
					{
					}
					this.rotation = (float)Math.Atan2((double)num188, (double)num187) + 1.57f;
					num189 = (float)Math.Sqrt((double)(num187 * num187 + num188 * num188));
					int num190 = this.width;
					if (this.type >= 87 && this.type <= 92)
					{
						num190 = 42;
					}
					num189 = (num189 - (float)num190) / num189;
					num187 *= num189;
					num188 *= num189;
					this.velocity = default(Vector2);
					this.position.X = this.position.X + num187;
					this.position.Y = this.position.Y + num188;
					if (this.type >= 87 && this.type <= 92)
					{
						if (num187 < 0f)
						{
							this.spriteDirection = 1;
							return;
						}
						if (num187 > 0f)
						{
							this.spriteDirection = -1;
							return;
						}
					}
				}
				else
				{
					if (!flag17)
					{
						this.TargetClosest(true);
						this.velocity.Y = this.velocity.Y + 0.11f;
						if (this.velocity.Y > num184)
						{
							this.velocity.Y = num184;
						}
						if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num184 * 0.4)
						{
							if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - num185 * 1.1f;
							}
							else
							{
								this.velocity.X = this.velocity.X + num185 * 1.1f;
							}
						}
						else if (this.velocity.Y == num184)
						{
							if (this.velocity.X < num187)
							{
								this.velocity.X = this.velocity.X + num185;
							}
							else if (this.velocity.X > num187)
							{
								this.velocity.X = this.velocity.X - num185;
							}
						}
						else if (this.velocity.Y > 4f)
						{
							if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X + num185 * 0.9f;
							}
							else
							{
								this.velocity.X = this.velocity.X - num185 * 0.9f;
							}
						}
					}
					else
					{
						if (this.type != 87 && this.type != 117 && this.soundDelay == 0)
						{
							float num191 = num189 / 40f;
							if (num191 < 10f)
							{
								num191 = 10f;
							}
							if (num191 > 20f)
							{
								num191 = 20f;
							}
							this.soundDelay = (int)num191;
							Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 1);
						}
						num189 = (float)Math.Sqrt((double)(num187 * num187 + num188 * num188));
						float num192 = Math.Abs(num187);
						float num193 = Math.Abs(num188);
						float num194 = num184 / num189;
						num187 *= num194;
						num188 *= num194;
						if ((this.type == 13 || this.type == 7) && !Main.player[this.target].zoneEvil && !Main.player[this.target].zoneBlood)
						{
							bool flag19 = true;
							for (int num195 = 0; num195 < 255; num195++)
							{
								if (Main.player[num195].active && !Main.player[num195].dead && Main.player[num195].zoneEvil)
								{
									flag19 = false;
								}
							}
							if (flag19)
							{
								if (Main.netMode != 1 && (double)(this.position.Y / 16f) > (Main.rockLayer + (double)Main.maxTilesY) / 2.0)
								{
									this.active = false;
									int num196 = (int)this.ai[0];
									while (num196 > 0 && num196 < 200 && Main.npc[num196].active && Main.npc[num196].aiStyle == this.aiStyle)
									{
										int num197 = (int)Main.npc[num196].ai[0];
										Main.npc[num196].active = false;
										this.life = 0;
										if (Main.netMode == 2)
										{
											NetMessage.SendData(23, -1, -1, "", num196, 0f, 0f, 0f, 0);
										}
										num196 = num197;
									}
									if (Main.netMode == 2)
									{
										NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0);
									}
								}
								num187 = 0f;
								num188 = num184;
							}
						}
						bool flag20 = false;
						if (this.type == 87)
						{
							if (((this.velocity.X > 0f && num187 < 0f) || (this.velocity.X < 0f && num187 > 0f) || (this.velocity.Y > 0f && num188 < 0f) || (this.velocity.Y < 0f && num188 > 0f)) && Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) > num185 / 2f && num189 < 300f)
							{
								flag20 = true;
								if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < num184)
								{
									this.velocity *= 1.1f;
								}
							}
							if (this.position.Y > Main.player[this.target].position.Y || (double)(Main.player[this.target].position.Y / 16f) > Main.worldSurface || Main.player[this.target].dead)
							{
								flag20 = true;
								if (Math.Abs(this.velocity.X) < num184 / 2f)
								{
									if (this.velocity.X == 0f)
									{
										this.velocity.X = this.velocity.X - (float)this.direction;
									}
									this.velocity.X = this.velocity.X * 1.1f;
								}
								else if (this.velocity.Y > -num184)
								{
									this.velocity.Y = this.velocity.Y - num185;
								}
							}
						}
						if (!flag20)
						{
							if ((this.velocity.X > 0f && num187 > 0f) || (this.velocity.X < 0f && num187 < 0f) || (this.velocity.Y > 0f && num188 > 0f) || (this.velocity.Y < 0f && num188 < 0f))
							{
								if (this.velocity.X < num187)
								{
									this.velocity.X = this.velocity.X + num185;
								}
								else if (this.velocity.X > num187)
								{
									this.velocity.X = this.velocity.X - num185;
								}
								if (this.velocity.Y < num188)
								{
									this.velocity.Y = this.velocity.Y + num185;
								}
								else if (this.velocity.Y > num188)
								{
									this.velocity.Y = this.velocity.Y - num185;
								}
								if ((double)Math.Abs(num188) < (double)num184 * 0.2 && ((this.velocity.X > 0f && num187 < 0f) || (this.velocity.X < 0f && num187 > 0f)))
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y + num185 * 2f;
									}
									else
									{
										this.velocity.Y = this.velocity.Y - num185 * 2f;
									}
								}
								if ((double)Math.Abs(num187) < (double)num184 * 0.2 && ((this.velocity.Y > 0f && num188 < 0f) || (this.velocity.Y < 0f && num188 > 0f)))
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X + num185 * 2f;
									}
									else
									{
										this.velocity.X = this.velocity.X - num185 * 2f;
									}
								}
							}
							else if (num192 > num193)
							{
								if (this.velocity.X < num187)
								{
									this.velocity.X = this.velocity.X + num185 * 1.1f;
								}
								else if (this.velocity.X > num187)
								{
									this.velocity.X = this.velocity.X - num185 * 1.1f;
								}
								if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num184 * 0.5)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y + num185;
									}
									else
									{
										this.velocity.Y = this.velocity.Y - num185;
									}
								}
							}
							else
							{
								if (this.velocity.Y < num188)
								{
									this.velocity.Y = this.velocity.Y + num185 * 1.1f;
								}
								else if (this.velocity.Y > num188)
								{
									this.velocity.Y = this.velocity.Y - num185 * 1.1f;
								}
								if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num184 * 0.5)
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X + num185;
									}
									else
									{
										this.velocity.X = this.velocity.X - num185;
									}
								}
							}
						}
					}
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					if (this.type == 7 || this.type == 10 || this.type == 13 || this.type == 39 || this.type == 95 || this.type == 98 || this.type == 117)
					{
						if (flag17)
						{
							if (this.localAI[0] != 1f)
							{
								this.netUpdate = true;
							}
							this.localAI[0] = 1f;
						}
						else
						{
							if (this.localAI[0] != 0f)
							{
								this.netUpdate = true;
							}
							this.localAI[0] = 0f;
						}
						if (((this.velocity.X > 0f && this.oldVelocity.X < 0f) || (this.velocity.X < 0f && this.oldVelocity.X > 0f) || (this.velocity.Y > 0f && this.oldVelocity.Y < 0f) || (this.velocity.Y < 0f && this.oldVelocity.Y > 0f)) && !this.justHit)
						{
							this.netUpdate = true;
							return;
						}
					}
				}
			}
			else if (this.aiStyle == 7)
			{
				bool flag21 = Main.raining;
				if (!Main.dayTime)
				{
					flag21 = true;
				}
				if (this.type == 142 && Main.netMode != 1 && !Main.xMas)
				{
					this.StrikeNPC(9999, 0f, 0, false, false);
					if (Main.netMode == 2)
					{
						NetMessage.SendData(28, -1, -1, "", this.whoAmI, 9999f, 0f, 0f, 0);
					}
				}
				if ((this.type == 148 || this.type == 149) && this.localAI[0] == 0f)
				{
					this.localAI[0] = (float)Main.rand.Next(1, 5);
				}
				int num198 = (int)(this.position.X + (float)(this.width / 2)) / 16;
				int num199 = (int)(this.position.Y + (float)this.height + 1f) / 16;
				if (this.type == 107)
				{
					NPC.savedGoblin = true;
				}
				if (this.type == 108)
				{
					NPC.savedWizard = true;
				}
				if (this.type == 124)
				{
					NPC.savedMech = true;
				}
				if ((this.type == 46 || this.type == 148 || this.type == 149 || this.type == 230 || this.type == 299 || this.type == 300 || this.type == 303) && this.target == 255)
				{
					this.TargetClosest(true);
					if (this.position.X < Main.player[this.target].position.X)
					{
						this.direction = 1;
						this.spriteDirection = this.direction;
					}
					if (this.position.X > Main.player[this.target].position.X)
					{
						this.direction = -1;
						this.spriteDirection = this.direction;
					}
					if (this.homeTileX == -1)
					{
						this.homeTileX = (int)((this.position.X + (float)(this.width / 2)) / 16f);
					}
				}
				bool flag22 = false;
				this.directionY = -1;
				if (this.direction == 0)
				{
					this.direction = 1;
				}
				for (int num200 = 0; num200 < 255; num200++)
				{
					if (Main.player[num200].active && Main.player[num200].talkNPC == this.whoAmI)
					{
						flag22 = true;
						if (this.ai[0] != 0f)
						{
							this.netUpdate = true;
						}
						this.ai[0] = 0f;
						this.ai[1] = 300f;
						this.ai[2] = 100f;
						if (Main.player[num200].position.X + (float)(Main.player[num200].width / 2) < this.position.X + (float)(this.width / 2))
						{
							this.direction = -1;
						}
						else
						{
							this.direction = 1;
						}
					}
				}
				if (this.ai[3] > 0f)
				{
					this.life = -1;
					this.HitEffect(0, 10.0);
					this.active = false;
					if (this.type == 37)
					{
						Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
					}
				}
				if (this.type == 37 && Main.netMode != 1)
				{
					this.homeless = false;
					this.homeTileX = Main.dungeonX;
					this.homeTileY = Main.dungeonY;
					if (NPC.downedBoss3)
					{
						this.ai[3] = 1f;
						this.netUpdate = true;
					}
				}
				int num201 = this.homeTileY;
				if (Main.netMode != 1 && this.homeTileY > 0)
				{
					while (!WorldGen.SolidTile(this.homeTileX, num201) && num201 < Main.maxTilesY - 20)
					{
						num201++;
					}
				}
				if (Main.netMode != 1 && this.townNPC && (flag21 || Main.tileDungeon[(int)Main.tile[num198, num199].type]) && (num198 != this.homeTileX || num199 != num201) && !this.homeless)
				{
					bool flag23 = true;
					for (int num202 = 0; num202 < 2; num202++)
					{
						Rectangle rectangle3 = new Rectangle((int)(this.position.X + (float)(this.width / 2) - (float)(NPC.sWidth / 2) - (float)NPC.safeRangeX), (int)(this.position.Y + (float)(this.height / 2) - (float)(NPC.sHeight / 2) - (float)NPC.safeRangeY), NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
						if (num202 == 1)
						{
							rectangle3 = new Rectangle(this.homeTileX * 16 + 8 - NPC.sWidth / 2 - NPC.safeRangeX, num201 * 16 + 8 - NPC.sHeight / 2 - NPC.safeRangeY, NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
						}
						for (int num203 = 0; num203 < 255; num203++)
						{
							if (Main.player[num203].active)
							{
								Rectangle rectangle4 = new Rectangle((int)Main.player[num203].position.X, (int)Main.player[num203].position.Y, Main.player[num203].width, Main.player[num203].height);
								if (rectangle4.Intersects(rectangle3))
								{
									flag23 = false;
									break;
								}
							}
							if (!flag23)
							{
								break;
							}
						}
					}
					if (flag23)
					{
						if (this.type == 37 || !Collision.SolidTiles(this.homeTileX - 1, this.homeTileX + 1, num201 - 3, num201 - 1))
						{
							this.velocity.X = 0f;
							this.velocity.Y = 0f;
							this.position.X = (float)(this.homeTileX * 16 + 8 - this.width / 2);
							this.position.Y = (float)(num201 * 16 - this.height) - 0.1f;
							this.netUpdate = true;
						}
						else
						{
							this.homeless = true;
							WorldGen.QuickFindHome(this.whoAmI);
						}
					}
				}
				if (this.ai[0] == 0f)
				{
					if (this.ai[2] > 0f)
					{
						this.ai[2] -= 1f;
					}
					if (flag21 && !flag22 && this.type != 46 && this.type != 148 && this.type != 149 && this.type != 230 && this.type != 299 && this.type != 300 && this.type != 303)
					{
						if (Main.netMode != 1)
						{
							if (num198 == this.homeTileX && num199 == num201)
							{
								if (this.velocity.X != 0f)
								{
									this.netUpdate = true;
								}
								if ((double)this.velocity.X > 0.1)
								{
									this.velocity.X = this.velocity.X - 0.1f;
								}
								else if ((double)this.velocity.X < -0.1)
								{
									this.velocity.X = this.velocity.X + 0.1f;
								}
								else
								{
									this.velocity.X = 0f;
								}
							}
							else if (!flag22)
							{
								if (num198 > this.homeTileX)
								{
									this.direction = -1;
								}
								else
								{
									this.direction = 1;
								}
								this.ai[0] = 1f;
								this.ai[1] = (float)(200 + Main.rand.Next(200));
								this.ai[2] = 0f;
								this.netUpdate = true;
							}
						}
					}
					else
					{
						if (this.type == 300)
						{
							this.velocity.X = this.velocity.X * 0.5f;
						}
						if ((double)this.velocity.X > 0.1)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if ((double)this.velocity.X < -0.1)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else
						{
							this.velocity.X = 0f;
						}
						if (Main.netMode != 1)
						{
							if (this.ai[1] > 0f)
							{
								this.ai[1] -= 1f;
							}
							if (this.ai[1] <= 0f)
							{
								this.ai[0] = 1f;
								this.ai[1] = (float)(200 + Main.rand.Next(200));
								if (this.type == 46 || this.type == 148 || this.type == 149 || this.type == 230 || this.type == 299 || this.type == 300 || this.type == 303)
								{
									this.ai[1] += (float)Main.rand.Next(200, 400);
								}
								this.ai[2] = 0f;
								this.netUpdate = true;
							}
						}
					}
					if (Main.netMode != 1 && (!flag21 || (num198 == this.homeTileX && num199 == num201)))
					{
						if (num198 < this.homeTileX - 25 || num198 > this.homeTileX + 25)
						{
							if (this.ai[2] == 0f)
							{
								if (num198 < this.homeTileX - 50 && this.direction == -1)
								{
									this.direction = 1;
									this.netUpdate = true;
									return;
								}
								if (num198 > this.homeTileX + 50 && this.direction == 1)
								{
									this.direction = -1;
									this.netUpdate = true;
									return;
								}
							}
						}
						else if (Main.rand.Next(80) == 0 && this.ai[2] == 0f)
						{
							this.ai[2] = 200f;
							this.direction *= -1;
							this.netUpdate = true;
							return;
						}
					}
				}
				else if (this.ai[0] == 1f)
				{
					if (Main.netMode != 1 && flag21 && num198 == this.homeTileX && num199 == this.homeTileY && this.type != 46 && this.type != 148 && this.type != 149 && this.type != 230 && this.type != 299 && this.type != 300 && this.type != 303)
					{
						this.ai[0] = 0f;
						this.ai[1] = (float)(200 + Main.rand.Next(200));
						this.ai[2] = 60f;
						this.netUpdate = true;
						return;
					}
					if (Main.netMode != 1 && !this.homeless && !Main.tileDungeon[(int)Main.tile[num198, num199].type] && (num198 < this.homeTileX - 35 || num198 > this.homeTileX + 35))
					{
						if (this.position.X < (float)(this.homeTileX * 16) && this.direction == -1)
						{
							this.ai[1] -= 5f;
						}
						else if (this.position.X > (float)(this.homeTileX * 16) && this.direction == 1)
						{
							this.ai[1] -= 5f;
						}
					}
					this.ai[1] -= 1f;
					if (this.ai[1] <= 0f)
					{
						this.ai[0] = 0f;
						this.ai[1] = (float)(300 + Main.rand.Next(300));
						if (this.type == 46 || this.type == 148 || this.type == 149 || this.type == 230 || this.type == 299 || this.type == 300 || this.type == 303)
						{
							this.ai[1] -= (float)Main.rand.Next(100);
						}
						this.ai[2] = 60f;
						this.netUpdate = true;
					}
					if (this.closeDoor && ((this.position.X + (float)(this.width / 2)) / 16f > (float)(this.doorX + 2) || (this.position.X + (float)(this.width / 2)) / 16f < (float)(this.doorX - 2)))
					{
						bool flag24 = WorldGen.CloseDoor(this.doorX, this.doorY, false);
						if (flag24)
						{
							this.closeDoor = false;
							NetMessage.SendData(19, -1, -1, "", 1, (float)this.doorX, (float)this.doorY, (float)this.direction, 0);
						}
						if ((this.position.X + (float)(this.width / 2)) / 16f > (float)(this.doorX + 4) || (this.position.X + (float)(this.width / 2)) / 16f < (float)(this.doorX - 4) || (this.position.Y + (float)(this.height / 2)) / 16f > (float)(this.doorY + 4) || (this.position.Y + (float)(this.height / 2)) / 16f < (float)(this.doorY - 4))
						{
							this.closeDoor = false;
						}
					}
					float num204 = 1f;
					float num205 = 0.07f;
					if (this.type == 299)
					{
						num204 = 1.5f;
					}
					if (this.type == 300)
					{
						num204 = 2f;
						num205 = 1f;
					}
					if (this.velocity.X < -num204 || this.velocity.X > num204)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < num204 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + num205;
						if (this.velocity.X > num204)
						{
							this.velocity.X = num204;
						}
					}
					else if (this.velocity.X > -num204 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - num205;
						if (this.velocity.X > num204)
						{
							this.velocity.X = num204;
						}
					}
					bool flag25 = (float)((this.homeTileY - 2) * 16) <= this.position.Y;
					if ((this.direction == 1 && this.position.Y + (float)(this.width / 2) > (float)(this.homeTileX * 16)) || (this.direction == -1 && this.position.Y + (float)(this.width / 2) < (float)(this.homeTileX * 16)))
					{
						flag25 = true;
					}
					if (this.velocity.Y >= 0f)
					{
						int num206 = 0;
						if (this.velocity.X < 0f)
						{
							num206 = -1;
						}
						if (this.velocity.X > 0f)
						{
							num206 = 1;
						}
						Vector2 vector21 = this.position;
						vector21.X += this.velocity.X;
						int num207 = (int)((vector21.X + (float)(this.width / 2) + (float)((this.width / 2 + 1) * num206)) / 16f);
						int num208 = (int)((vector21.Y + (float)this.height - 1f) / 16f);
						if ((float)(num207 * 16) < vector21.X + (float)this.width && (float)(num207 * 16 + 16) > vector21.X)
						{
							if (false)
							{
								Main.tile[num207, num208] = new Tile();
							}
							if (false)
							{
								Main.tile[num207, num208 - 1] = new Tile();
							}
							if (false)
							{
								Main.tile[num207, num208 - 2] = new Tile();
							}
							if (false)
							{
								Main.tile[num207, num208 - 3] = new Tile();
							}
							if (false)
							{
								Main.tile[num207, num208 + 1] = new Tile();
							}
							if (((Main.tile[num207, num208].nactive() && Main.tile[num207, num208].slope() == 0 && Main.tile[num207, num208 - 1].slope() == 0 && ((Main.tileSolid[(int)Main.tile[num207, num208].type] && !Main.tileSolidTop[(int)Main.tile[num207, num208].type]) || (flag25 && Main.tileSolidTop[(int)Main.tile[num207, num208].type] && Main.tile[num207, num208].frameY == 0 && (!Main.tileSolid[(int)Main.tile[num207, num208 - 1].type] || !Main.tile[num207, num208 - 1].nactive()) && Main.tile[num207, num208].type != 16 && Main.tile[num207, num208].type != 18 && Main.tile[num207, num208].type != 134))) || (Main.tile[num207, num208 - 1].halfBrick() && Main.tile[num207, num208 - 1].nactive())) && (!Main.tile[num207, num208 - 1].nactive() || !Main.tileSolid[(int)Main.tile[num207, num208 - 1].type] || Main.tileSolidTop[(int)Main.tile[num207, num208 - 1].type] || (Main.tile[num207, num208 - 1].halfBrick() && (!Main.tile[num207, num208 - 4].nactive() || !Main.tileSolid[(int)Main.tile[num207, num208 - 4].type] || Main.tileSolidTop[(int)Main.tile[num207, num208 - 4].type]))) && (!Main.tile[num207, num208 - 2].nactive() || !Main.tileSolid[(int)Main.tile[num207, num208 - 2].type] || Main.tileSolidTop[(int)Main.tile[num207, num208 - 2].type]) && (!Main.tile[num207, num208 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num207, num208 - 3].type] || Main.tileSolidTop[(int)Main.tile[num207, num208 - 3].type]) && (!Main.tile[num207 - num206, num208 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num207 - num206, num208 - 3].type] || Main.tileSolidTop[(int)Main.tile[num207 - num206, num208 - 3].type]))
							{
								float num209 = (float)(num208 * 16);
								if (Main.tile[num207, num208].halfBrick())
								{
									num209 += 8f;
								}
								if (Main.tile[num207, num208 - 1].halfBrick())
								{
									num209 -= 8f;
								}
								if (num209 < vector21.Y + (float)this.height)
								{
									float num210 = vector21.Y + (float)this.height - num209;
									if ((double)num210 <= 16.1)
									{
										this.gfxOffY += this.position.Y + (float)this.height - num209;
										this.position.Y = num209 - (float)this.height;
										if (num210 < 9f)
										{
											this.stepSpeed = 1f;
										}
										else
										{
											this.stepSpeed = 2f;
										}
									}
								}
							}
						}
					}
					if (this.velocity.Y == 0f)
					{
						if (this.position.X == this.ai[2])
						{
							this.direction *= -1;
						}
						this.ai[2] = -1f;
						int num211 = (int)((this.position.X + (float)(this.width / 2) + (float)(15 * this.direction)) / 16f);
						int num212 = (int)((this.position.Y + (float)this.height - 16f) / 16f);
						if (false)
						{
							Main.tile[num211, num212] = new Tile();
						}
						if (false)
						{
							Main.tile[num211, num212 - 1] = new Tile();
						}
						if (false)
						{
							Main.tile[num211, num212 - 2] = new Tile();
						}
						if (false)
						{
							Main.tile[num211, num212 - 3] = new Tile();
						}
						if (false)
						{
							Main.tile[num211, num212 + 1] = new Tile();
						}
						if (false)
						{
							Main.tile[num211 - this.direction, num212 + 1] = new Tile();
						}
						if (false)
						{
							Main.tile[num211 + this.direction, num212 - 1] = new Tile();
						}
						if (false)
						{
							Main.tile[num211 + this.direction, num212 + 1] = new Tile();
						}
						Main.tile[num211 - this.direction, num212 + 1].halfBrick();
						if (this.townNPC && Main.tile[num211, num212 - 2].nactive() && Main.tile[num211, num212 - 2].type == 10 && (Main.rand.Next(10) == 0 || flag21))
						{
							if (Main.netMode != 1)
							{
								bool flag26 = WorldGen.OpenDoor(num211, num212 - 2, this.direction);
								if (flag26)
								{
									this.closeDoor = true;
									this.doorX = num211;
									this.doorY = num212 - 2;
									NetMessage.SendData(19, -1, -1, "", 0, (float)num211, (float)(num212 - 2), (float)this.direction, 0);
									this.netUpdate = true;
									this.ai[1] += 80f;
									return;
								}
								if (WorldGen.OpenDoor(num211, num212 - 2, -this.direction))
								{
									this.closeDoor = true;
									this.doorX = num211;
									this.doorY = num212 - 2;
									NetMessage.SendData(19, -1, -1, "", 0, (float)num211, (float)(num212 - 2), (float)(-(float)this.direction), 0);
									this.netUpdate = true;
									this.ai[1] += 80f;
									return;
								}
								this.direction *= -1;
								this.netUpdate = true;
								return;
							}
						}
						else
						{
							if ((this.velocity.X < 0f && this.spriteDirection == -1) || (this.velocity.X > 0f && this.spriteDirection == 1))
							{
								if (Main.tile[num211, num212 - 2].nactive() && Main.tileSolid[(int)Main.tile[num211, num212 - 2].type] && !Main.tileSolidTop[(int)Main.tile[num211, num212 - 2].type])
								{
									if ((this.direction == 1 && !Collision.SolidTiles(num211 - 2, num211 - 1, num212 - 5, num212 - 1)) || (this.direction == -1 && !Collision.SolidTiles(num211 + 1, num211 + 2, num212 - 5, num212 - 1)))
									{
										if (!Collision.SolidTiles(num211, num211, num212 - 5, num212 - 3))
										{
											this.velocity.Y = -6f;
											this.netUpdate = true;
										}
										else if (this.type == 300)
										{
											if (WorldGen.SolidTile((int)(this.center().X / 16f) + this.direction, (int)(this.center().Y / 16f)))
											{
												this.direction *= -1;
												this.velocity.X = this.velocity.X * 0f;
												this.netUpdate = true;
											}
										}
										else
										{
											this.direction *= -1;
											this.netUpdate = true;
										}
									}
									else if (this.type == 300)
									{
										if (WorldGen.SolidTile((int)(this.center().X / 16f) + this.direction, (int)(this.center().Y / 16f)))
										{
											this.direction *= -1;
											this.velocity.X = this.velocity.X * 0f;
											this.netUpdate = true;
										}
									}
									else
									{
										this.direction *= -1;
										this.netUpdate = true;
									}
								}
								else if (Main.tile[num211, num212 - 1].nactive() && Main.tileSolid[(int)Main.tile[num211, num212 - 1].type] && !Main.tileSolidTop[(int)Main.tile[num211, num212 - 1].type])
								{
									if ((this.direction == 1 && !Collision.SolidTiles(num211 - 2, num211 - 1, num212 - 4, num212 - 1)) || (this.direction == -1 && !Collision.SolidTiles(num211 + 1, num211 + 2, num212 - 4, num212 - 1)))
									{
										if (!Collision.SolidTiles(num211, num211, num212 - 4, num212 - 2))
										{
											this.velocity.Y = -5f;
											this.netUpdate = true;
										}
										else
										{
											this.direction *= -1;
											this.netUpdate = true;
										}
									}
									else
									{
										this.direction *= -1;
										this.netUpdate = true;
									}
								}
								else if (this.position.Y + (float)this.height - (float)(num212 * 16) > 20f && Main.tile[num211, num212].nactive() && Main.tileSolid[(int)Main.tile[num211, num212].type] && Main.tile[num211, num212].slope() == 0)
								{
									if ((this.direction == 1 && !Collision.SolidTiles(num211 - 2, num211, num212 - 3, num212 - 1)) || (this.direction == -1 && !Collision.SolidTiles(num211, num211 + 2, num212 - 3, num212 - 1)))
									{
										this.velocity.Y = -4.4f;
										this.netUpdate = true;
									}
									else
									{
										this.direction *= -1;
										this.netUpdate = true;
									}
								}
								try
								{
									if (false)
									{
										Main.tile[num211, num212 + 1] = new Tile();
									}
									if (false)
									{
										Main.tile[num211 - this.direction, num212 + 1] = new Tile();
									}
									if (false)
									{
										Main.tile[num211, num212 + 2] = new Tile();
									}
									if (false)
									{
										Main.tile[num211 - this.direction, num212 + 2] = new Tile();
									}
									if (false)
									{
										Main.tile[num211, num212 + 3] = new Tile();
									}
									if (false)
									{
										Main.tile[num211 - this.direction, num212 + 3] = new Tile();
									}
									if (false)
									{
										Main.tile[num211, num212 + 4] = new Tile();
									}
									if (false)
									{
										Main.tile[num211 - this.direction, num212 + 4] = new Tile();
									}
									else if (num198 >= this.homeTileX - 35 && num198 <= this.homeTileX + 35 && (!Main.tile[num211, num212 + 1].nactive() || !Main.tileSolid[(int)Main.tile[num211, num212 + 1].type]) && (!Main.tile[num211 - this.direction, num212 + 1].active() || !Main.tileSolid[(int)Main.tile[num211 - this.direction, num212 + 1].type]) && (!Main.tile[num211, num212 + 2].nactive() || !Main.tileSolid[(int)Main.tile[num211, num212 + 2].type]) && (!Main.tile[num211 - this.direction, num212 + 2].active() || !Main.tileSolid[(int)Main.tile[num211 - this.direction, num212 + 2].type]) && (!Main.tile[num211, num212 + 3].nactive() || !Main.tileSolid[(int)Main.tile[num211, num212 + 3].type]) && (!Main.tile[num211 - this.direction, num212 + 3].active() || !Main.tileSolid[(int)Main.tile[num211 - this.direction, num212 + 3].type]) && (!Main.tile[num211, num212 + 4].nactive() || !Main.tileSolid[(int)Main.tile[num211, num212 + 4].type]) && (!Main.tile[num211 - this.direction, num212 + 4].nactive() || !Main.tileSolid[(int)Main.tile[num211 - this.direction, num212 + 4].type]) && this.type != 46 && this.type != 148 && this.type != 149 && this.type != 230 && this.type != 299 && this.type != 300 && this.type != 303)
									{
										this.direction *= -1;
										this.velocity.X = this.velocity.X * -1f;
										this.netUpdate = true;
									}
								}
								catch
								{
								}
								if (this.velocity.Y < 0f)
								{
									this.ai[2] = this.position.X;
								}
							}
							if (this.velocity.Y < 0f && this.wet)
							{
								this.velocity.Y = this.velocity.Y * 1.2f;
							}
							if (this.velocity.Y < 0f && (this.type == 46 || this.type == 299 || this.type == 303))
							{
								this.velocity.Y = this.velocity.Y * 1.2f;
								return;
							}
						}
					}
				}
			}
			else if (this.aiStyle == 8)
			{
				this.TargetClosest(true);
				this.velocity.X = this.velocity.X * 0.93f;
				if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
				{
					this.velocity.X = 0f;
				}
				if (this.ai[0] == 0f)
				{
					this.ai[0] = 500f;
				}
				if (this.type == 172)
				{
					if (this.alpha < 255)
					{
						this.alpha++;
					}
					if (this.justHit)
					{
						this.alpha = 0;
					}
				}
				if (this.ai[2] != 0f && this.ai[3] != 0f)
				{
					if (this.type == 172)
					{
						this.alpha = 255;
					}
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
					for (int num213 = 0; num213 < 50; num213++)
					{
						if (this.type == 29 || this.type == 45)
						{
							int num214 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, 0f, 0f, 100, default(Color), (float)Main.rand.Next(1, 3));
							Main.dust[num214].velocity *= 3f;
							if (Main.dust[num214].scale > 1f)
							{
								Main.dust[num214].noGravity = true;
							}
						}
						else if (this.type == 32)
						{
							int num215 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 172, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num215].velocity *= 3f;
							Main.dust[num215].noGravity = true;
						}
						else if (this.type == 283 || this.type == 284)
						{
							int num216 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 173, 0f, 0f, 0, default(Color), 1f);
							Main.dust[num216].velocity *= 2f;
							Main.dust[num216].scale = 1.4f;
						}
						else if (this.type == 285 || this.type == 286)
						{
							int num217 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 174, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num217].velocity *= 3f;
							Main.dust[num217].noGravity = true;
						}
						else if (this.type == 281 || this.type == 282)
						{
							int num218 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 175, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num218].velocity *= 3f;
							Main.dust[num218].noGravity = true;
						}
						else if (this.type == 172)
						{
							int num219 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 106, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num219].velocity *= 3f;
							Main.dust[num219].noGravity = true;
						}
						else
						{
							int num220 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num220].velocity *= 3f;
							Main.dust[num220].noGravity = true;
						}
					}
					this.position.X = this.ai[2] * 16f - (float)(this.width / 2) + 8f;
					this.position.Y = this.ai[3] * 16f - (float)this.height;
					this.velocity.X = 0f;
					this.velocity.Y = 0f;
					this.ai[2] = 0f;
					this.ai[3] = 0f;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
					for (int num221 = 0; num221 < 50; num221++)
					{
						if (this.type == 29 || this.type == 45)
						{
							int num222 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, 0f, 0f, 100, default(Color), (float)Main.rand.Next(1, 3));
							Main.dust[num222].velocity *= 3f;
							if (Main.dust[num222].scale > 1f)
							{
								Main.dust[num222].noGravity = true;
							}
						}
						else if (this.type == 32)
						{
							int num223 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 172, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num223].velocity *= 3f;
							Main.dust[num223].noGravity = true;
						}
						else if (this.type == 172)
						{
							int num224 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 106, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num224].velocity *= 3f;
							Main.dust[num224].noGravity = true;
						}
						else if (this.type == 283 || this.type == 284)
						{
							int num225 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 173, 0f, 0f, 0, default(Color), 1f);
							Main.dust[num225].velocity *= 2f;
							Main.dust[num225].scale = 1.4f;
						}
						else if (this.type == 285 || this.type == 286)
						{
							int num226 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 174, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num226].velocity *= 3f;
							Main.dust[num226].noGravity = true;
						}
						else if (this.type == 281 || this.type == 282)
						{
							int num227 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 175, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num227].velocity *= 3f;
							Main.dust[num227].noGravity = true;
						}
						else
						{
							int num228 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num228].velocity *= 3f;
							Main.dust[num228].noGravity = true;
						}
					}
				}
				this.ai[0] += 1f;
				if (this.type == 283 || this.type == 284)
				{
					if (this.ai[0] == 50f || this.ai[0] == 100f || this.ai[0] == 150f || this.ai[0] == 200f || this.ai[0] == 250f)
					{
						this.ai[1] = 30f;
						this.netUpdate = true;
					}
					if (this.ai[0] >= 400f)
					{
						this.ai[0] = 700f;
					}
				}
				else if (this.type == 172 && (this.ai[0] == 75f || this.ai[0] == 150f || this.ai[0] == 225f || this.ai[0] == 300f || this.ai[0] == 375f || this.ai[0] == 450f))
				{
					this.ai[1] = 30f;
					this.netUpdate = true;
				}
				if (this.type == 281 || this.type == 282)
				{
					if (this.ai[0] == 20f || this.ai[0] == 40f || this.ai[0] == 60f || this.ai[0] == 120f || this.ai[0] == 140f || this.ai[0] == 160f || this.ai[0] == 220f || this.ai[0] == 240f || this.ai[0] == 260f)
					{
						this.ai[1] = 30f;
						this.netUpdate = true;
					}
					if (this.ai[0] >= 460f)
					{
						this.ai[0] = 700f;
					}
				}
				else if (this.ai[0] == 100f || this.ai[0] == 200f || this.ai[0] == 300f)
				{
					this.ai[1] = 30f;
					this.netUpdate = true;
				}
				if ((this.type == 285 || this.type == 286) && this.ai[0] > 400f)
				{
					this.ai[0] = 650f;
				}
				if (this.ai[0] >= 650f && Main.netMode != 1)
				{
					this.ai[0] = 1f;
					int num229 = (int)Main.player[this.target].position.X / 16;
					int num230 = (int)Main.player[this.target].position.Y / 16;
					int num231 = (int)this.position.X / 16;
					int num232 = (int)this.position.Y / 16;
					int num233 = 20;
					int num234 = 0;
					bool flag27 = false;
					if (Math.Abs(this.position.X - Main.player[this.target].position.X) + Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
					{
						num234 = 100;
						flag27 = true;
					}
					while (!flag27 && num234 < 100)
					{
						num234++;
						int num235 = Main.rand.Next(num229 - num233, num229 + num233);
						int num236 = Main.rand.Next(num230 - num233, num230 + num233);
						for (int num237 = num236; num237 < num230 + num233; num237++)
						{
							if ((num237 < num230 - 4 || num237 > num230 + 4 || num235 < num229 - 4 || num235 > num229 + 4) && (num237 < num232 - 1 || num237 > num232 + 1 || num235 < num231 - 1 || num235 > num231 + 1) && Main.tile[num235, num237].nactive())
							{
								bool flag28 = true;
								if ((this.type == 32 || (this.type >= 281 && this.type <= 286)) && !Main.wallDungeon[(int)Main.tile[num235, num237 - 1].wall])
								{
									flag28 = false;
								}
								else if (Main.tile[num235, num237 - 1].lava())
								{
									flag28 = false;
								}
								if (flag28 && Main.tileSolid[(int)Main.tile[num235, num237].type] && !Collision.SolidTiles(num235 - 1, num235 + 1, num237 - 4, num237 - 1))
								{
									this.ai[1] = 20f;
									this.ai[2] = (float)num235;
									this.ai[3] = (float)num237;
									flag27 = true;
									break;
								}
							}
						}
					}
					this.netUpdate = true;
				}
				if (this.ai[1] > 0f)
				{
					this.ai[1] -= 1f;
					if (this.ai[1] == 25f)
					{
						if (this.type >= 281 && this.type <= 286)
						{
							float num238 = 6f;
							if (this.type == 285 || this.type == 286)
							{
								num238 = 8f;
							}
							if (this.type == 281 || this.type == 282)
							{
								num238 = 4f;
							}
							Vector2 vector22 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y);
							float num239 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector22.X;
							float num240 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector22.Y;
							if (this.type == 283 || this.type == 284)
							{
								num239 += (float)Main.rand.Next(-30, 31);
								num240 += (float)Main.rand.Next(-30, 31);
								num239 -= Main.player[this.target].velocity.X * 10f;
								num240 -= Main.player[this.target].velocity.Y * 10f;
							}
							float num241 = (float)Math.Sqrt((double)(num239 * num239 + num240 * num240));
							num241 = num238 / num241;
							num239 *= num241;
							num240 *= num241;
							int num242 = 30;
							int num243 = 290;
							if (this.type == 285 || this.type == 286)
							{
								num243 = 291;
								num242 = 40;
							}
							if (this.type == 281 || this.type == 282)
							{
								num243 = 293;
								num242 = 40;
							}
							int num244 = Projectile.NewProjectile(vector22.X, vector22.Y, num239, num240, num243, num242, 0f, Main.myPlayer, 0f, 0f);
							Main.projectile[num244].timeLeft = 300;
							if (num243 == 291)
							{
								Main.projectile[num244].ai[0] = Main.player[this.target].center().X;
								Main.projectile[num244].ai[1] = Main.player[this.target].center().Y;
								Main.projectile[num244].netUpdate = true;
							}
							this.localAI[0] = 0f;
						}
						else
						{
							if (this.type != 172)
							{
								Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
							}
							if (Main.netMode != 1)
							{
								if (this.type == 29 || this.type == 45)
								{
									NPC.NewNPC((int)this.position.X + this.width / 2, (int)this.position.Y - 8, 30, 0);
								}
								else if (this.type == 32)
								{
									NPC.NewNPC((int)this.position.X + this.width / 2, (int)this.position.Y - 8, 33, 0);
								}
								else if (this.type == 172)
								{
									float num245 = 10f;
									Vector2 vector23 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num246 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector23.X + (float)Main.rand.Next(-10, 11);
									float num247 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector23.Y + (float)Main.rand.Next(-10, 11);
									float num248 = (float)Math.Sqrt((double)(num246 * num246 + num247 * num247));
									num248 = num245 / num248;
									num246 *= num248;
									num247 *= num248;
									int num249 = 40;
									int num250 = 129;
									int num251 = Projectile.NewProjectile(vector23.X, vector23.Y, num246, num247, num250, num249, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num251].timeLeft = 300;
									this.localAI[0] = 0f;
								}
								else
								{
									NPC.NewNPC((int)this.position.X + this.width / 2 + this.direction * 8, (int)this.position.Y + 20, 25, 0);
								}
							}
						}
					}
				}
				if (this.type == 29 || this.type == 45)
				{
					if (Main.rand.Next(5) == 0)
					{
						int num252 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 27, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 1.5f);
						Main.dust[num252].noGravity = true;
						Dust expr_100C2_cp_0 = Main.dust[num252];
						expr_100C2_cp_0.velocity.X = expr_100C2_cp_0.velocity.X * 0.5f;
						Main.dust[num252].velocity.Y = -2f;
						return;
					}
				}
				else if (this.type == 32)
				{
					if (Main.rand.Next(3) != 0)
					{
						int num253 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 172, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 0.9f);
						Main.dust[num253].noGravity = true;
						Dust expr_1019B_cp_0 = Main.dust[num253];
						expr_1019B_cp_0.velocity.X = expr_1019B_cp_0.velocity.X * 0.3f;
						Dust expr_101BB_cp_0 = Main.dust[num253];
						expr_101BB_cp_0.velocity.Y = expr_101BB_cp_0.velocity.Y * 0.2f;
						Dust expr_101DB_cp_0 = Main.dust[num253];
						expr_101DB_cp_0.velocity.Y = expr_101DB_cp_0.velocity.Y - 1f;
						return;
					}
				}
				else
				{
					if (this.type == 172)
					{
						int num254 = 1;
						if (this.alpha == 255)
						{
							num254 = 2;
						}
						for (int num255 = 0; num255 < num254; num255++)
						{
							if (Main.rand.Next(255) > 255 - this.alpha)
							{
								int num256 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 106, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 1.2f);
								Main.dust[num256].noGravity = true;
								Dust expr_102CC_cp_0 = Main.dust[num256];
								expr_102CC_cp_0.velocity.X = expr_102CC_cp_0.velocity.X * (0.1f + (float)Main.rand.Next(30) * 0.01f);
								Dust expr_10300_cp_0 = Main.dust[num256];
								expr_10300_cp_0.velocity.Y = expr_10300_cp_0.velocity.Y * (0.1f + (float)Main.rand.Next(30) * 0.01f);
								Main.dust[num256].scale *= 1f + (float)Main.rand.Next(6) * 0.1f;
							}
						}
						return;
					}
					if (this.type == 283 || this.type == 284)
					{
						if (Main.rand.Next(2) == 0)
						{
							int num257 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 173, 0f, 0f, 0, default(Color), 1f);
							Dust expr_10400_cp_0 = Main.dust[num257];
							expr_10400_cp_0.velocity.X = expr_10400_cp_0.velocity.X * 0.5f;
							Dust expr_10420_cp_0 = Main.dust[num257];
							expr_10420_cp_0.velocity.Y = expr_10420_cp_0.velocity.Y * 0.5f;
							return;
						}
					}
					else if (this.type == 285 || this.type == 286)
					{
						if (Main.rand.Next(2) == 0)
						{
							int num258 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 174, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 1f);
							Main.dust[num258].noGravity = true;
							Main.dust[num258].velocity *= 0.4f;
							Dust expr_1050F_cp_0 = Main.dust[num258];
							expr_1050F_cp_0.velocity.Y = expr_1050F_cp_0.velocity.Y - 0.7f;
							return;
						}
					}
					else if (this.type == 281 || this.type == 282)
					{
						if (Main.rand.Next(2) == 0)
						{
							int num259 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 175, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 0.1f);
							Main.dust[num259].noGravity = true;
							Main.dust[num259].velocity *= 0.5f;
							Main.dust[num259].fadeIn = 1.2f;
							return;
						}
					}
					else if (Main.rand.Next(2) == 0)
					{
						int num260 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
						Main.dust[num260].noGravity = true;
						Dust expr_106A1_cp_0 = Main.dust[num260];
						expr_106A1_cp_0.velocity.X = expr_106A1_cp_0.velocity.X * 1f;
						Dust expr_106C1_cp_0 = Main.dust[num260];
						expr_106C1_cp_0.velocity.Y = expr_106C1_cp_0.velocity.Y * 1f;
						return;
					}
				}
			}
			else
			{
				if (this.aiStyle == 9)
				{
					if (this.target == 255)
					{
						this.TargetClosest(true);
						float num261 = 6f;
						if (this.type == 25)
						{
							num261 = 5f;
						}
						if (this.type == 112)
						{
							num261 = 7f;
						}
						Vector2 vector24 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num262 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector24.X;
						float num263 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector24.Y;
						float num264 = (float)Math.Sqrt((double)(num262 * num262 + num263 * num263));
						num264 = num261 / num264;
						this.velocity.X = num262 * num264;
						this.velocity.Y = num263 * num264;
					}
					if (this.type == 112)
					{
						this.ai[0] += 1f;
						if (this.ai[0] > 3f)
						{
							this.ai[0] = 3f;
						}
						if (this.ai[0] == 2f)
						{
							this.position += this.velocity;
							Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 9);
							for (int num265 = 0; num265 < 20; num265++)
							{
								int num266 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 18, 0f, 0f, 100, default(Color), 1.8f);
								Main.dust[num266].velocity *= 1.3f;
								Main.dust[num266].velocity += this.velocity;
								Main.dust[num266].noGravity = true;
							}
						}
					}
					if (this.type == 112 && Collision.SolidCollision(this.position, this.width, this.height))
					{
						int arg_109A2_0 = Main.netMode;
						this.StrikeNPC(999, 0f, 0, false, false);
					}
					if (this.timeLeft > 100)
					{
						this.timeLeft = 100;
					}
					this.rotation += 0.4f * (float)this.direction;
					return;
				}
				if (this.aiStyle == 10)
				{
					float num278 = 1f;
					float num279 = 0.011f;
					this.TargetClosest(true);
					Vector2 vector25 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num280 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector25.X;
					float num281 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector25.Y;
					float num282 = (float)Math.Sqrt((double)(num280 * num280 + num281 * num281));
					float num283 = num282;
					this.ai[1] += 1f;
					if (this.ai[1] > 600f)
					{
						num279 *= 8f;
						num278 = 4f;
						if (this.ai[1] > 650f)
						{
							this.ai[1] = 0f;
						}
					}
					else if (num283 < 250f)
					{
						this.ai[0] += 0.9f;
						if (this.ai[0] > 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.019f;
						}
						else
						{
							this.velocity.Y = this.velocity.Y - 0.019f;
						}
						if (this.ai[0] < -100f || this.ai[0] > 100f)
						{
							this.velocity.X = this.velocity.X + 0.019f;
						}
						else
						{
							this.velocity.X = this.velocity.X - 0.019f;
						}
						if (this.ai[0] > 200f)
						{
							this.ai[0] = -200f;
						}
					}
					if (num283 > 350f)
					{
						num278 = 5f;
						num279 = 0.3f;
					}
					else if (num283 > 300f)
					{
						num278 = 3f;
						num279 = 0.2f;
					}
					else if (num283 > 250f)
					{
						num278 = 1.5f;
						num279 = 0.1f;
					}
					num282 = num278 / num282;
					num280 *= num282;
					num281 *= num282;
					if (Main.player[this.target].dead)
					{
						num280 = (float)this.direction * num278 / 2f;
						num281 = -num278 / 2f;
					}
					if (this.velocity.X < num280)
					{
						this.velocity.X = this.velocity.X + num279;
					}
					else if (this.velocity.X > num280)
					{
						this.velocity.X = this.velocity.X - num279;
					}
					if (this.velocity.Y < num281)
					{
						this.velocity.Y = this.velocity.Y + num279;
					}
					else if (this.velocity.Y > num281)
					{
						this.velocity.Y = this.velocity.Y - num279;
					}
					if (num280 > 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)num281, (double)num280);
					}
					if (num280 < 0f)
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)num281, (double)num280) + 3.14f;
					}
					if (this.type == 289)
					{
						if (this.justHit)
						{
							this.ai[2] = 0f;
							this.ai[3] = 0f;
						}
						vector25 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						num280 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector25.X;
						num281 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector25.Y;
						num282 = (float)Math.Sqrt((double)(num280 * num280 + num281 * num281));
						if (num282 > 500f)
						{
							this.ai[2] = 0f;
							this.ai[3] = 0f;
							return;
						}
						this.ai[2] += 1f;
						if (this.ai[3] == 0f)
						{
							if (this.ai[2] > 120f)
							{
								this.ai[2] = 0f;
								this.ai[3] = 1f;
								this.netUpdate = true;
								return;
							}
						}
						else
						{
							if (this.ai[2] > 40f)
							{
								this.ai[3] = 0f;
							}
							if (Main.netMode != 1 && this.ai[2] == 20f)
							{
								float num284 = 6f;
								int num285 = 25;
								int num286 = 299;
								num282 = num284 / num282;
								num280 *= num282;
								num281 *= num282;
								Projectile.NewProjectile(vector25.X, vector25.Y, num280, num281, num286, num285, 0f, Main.myPlayer, 0f, 0f);
								return;
							}
						}
					}
				}
				else if (this.aiStyle == 11)
				{
					if (this.ai[0] == 0f && Main.netMode != 1)
					{
						this.TargetClosest(true);
						this.ai[0] = 1f;
						if (this.type != 68)
						{
							int num287 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 36, this.whoAmI);
							Main.npc[num287].ai[0] = -1f;
							Main.npc[num287].ai[1] = (float)this.whoAmI;
							Main.npc[num287].target = this.target;
							Main.npc[num287].netUpdate = true;
							num287 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 36, this.whoAmI);
							Main.npc[num287].ai[0] = 1f;
							Main.npc[num287].ai[1] = (float)this.whoAmI;
							Main.npc[num287].ai[3] = 150f;
							Main.npc[num287].target = this.target;
							Main.npc[num287].netUpdate = true;
						}
					}
					if (this.type == 68 && this.ai[1] != 3f && this.ai[1] != 2f)
					{
						Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
						this.ai[1] = 2f;
					}
					if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 2000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
					{
						this.TargetClosest(true);
						if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 2000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
						{
							this.ai[1] = 3f;
						}
					}
					if (Main.dayTime && this.ai[1] != 3f && this.ai[1] != 2f)
					{
						this.ai[1] = 2f;
						Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
					}
					if (this.ai[1] == 0f)
					{
						this.defense = 10;
						this.ai[2] += 1f;
						if (this.ai[2] >= 800f)
						{
							this.ai[2] = 0f;
							this.ai[1] = 1f;
							this.TargetClosest(true);
							this.netUpdate = true;
						}
						this.rotation = this.velocity.X / 15f;
						if (this.position.Y > Main.player[this.target].position.Y - 250f)
						{
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.98f;
							}
							this.velocity.Y = this.velocity.Y - 0.02f;
							if (this.velocity.Y > 2f)
							{
								this.velocity.Y = 2f;
							}
						}
						else if (this.position.Y < Main.player[this.target].position.Y - 250f)
						{
							if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.98f;
							}
							this.velocity.Y = this.velocity.Y + 0.02f;
							if (this.velocity.Y < -2f)
							{
								this.velocity.Y = -2f;
							}
						}
						if (this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))
						{
							if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X * 0.98f;
							}
							this.velocity.X = this.velocity.X - 0.05f;
							if (this.velocity.X > 8f)
							{
								this.velocity.X = 8f;
							}
						}
						if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))
						{
							if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X * 0.98f;
							}
							this.velocity.X = this.velocity.X + 0.05f;
							if (this.velocity.X < -8f)
							{
								this.velocity.X = -8f;
							}
						}
					}
					else if (this.ai[1] == 1f)
					{
						this.defense = 0;
						this.ai[2] += 1f;
						if (this.ai[2] == 2f)
						{
							Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
						}
						if (this.ai[2] >= 400f)
						{
							this.ai[2] = 0f;
							this.ai[1] = 0f;
						}
						this.rotation += (float)this.direction * 0.3f;
						Vector2 vector26 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num288 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector26.X;
						float num289 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector26.Y;
						float num290 = (float)Math.Sqrt((double)(num288 * num288 + num289 * num289));
						num290 = 1.5f / num290;
						this.velocity.X = num288 * num290;
						this.velocity.Y = num289 * num290;
					}
					else if (this.ai[1] == 2f)
					{
						this.damage = 9999;
						this.defense = 9999;
						this.rotation += (float)this.direction * 0.3f;
						Vector2 vector27 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num291 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector27.X;
						float num292 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector27.Y;
						float num293 = (float)Math.Sqrt((double)(num291 * num291 + num292 * num292));
						num293 = 8f / num293;
						this.velocity.X = num291 * num293;
						this.velocity.Y = num292 * num293;
					}
					else if (this.ai[1] == 3f)
					{
						this.velocity.Y = this.velocity.Y + 0.1f;
						if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.95f;
						}
						this.velocity.X = this.velocity.X * 0.95f;
						if (this.timeLeft > 500)
						{
							this.timeLeft = 500;
						}
					}
					if (this.ai[1] != 2f && this.ai[1] != 3f && this.type != 68)
					{
						int num294 = Dust.NewDust(new Vector2(this.position.X + (float)(this.width / 2) - 15f - this.velocity.X * 5f, this.position.Y + (float)this.height - 2f), 30, 10, 5, -this.velocity.X * 0.2f, 3f, 0, default(Color), 2f);
						Main.dust[num294].noGravity = true;
						Dust expr_11F75_cp_0 = Main.dust[num294];
						expr_11F75_cp_0.velocity.X = expr_11F75_cp_0.velocity.X * 1.3f;
						Dust expr_11F95_cp_0 = Main.dust[num294];
						expr_11F95_cp_0.velocity.X = expr_11F95_cp_0.velocity.X + this.velocity.X * 0.4f;
						Dust expr_11FC1_cp_0 = Main.dust[num294];
						expr_11FC1_cp_0.velocity.Y = expr_11FC1_cp_0.velocity.Y + (2f + this.velocity.Y);
						for (int num295 = 0; num295 < 2; num295++)
						{
							num294 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 120f), this.width, 60, 5, this.velocity.X, this.velocity.Y, 0, default(Color), 2f);
							Main.dust[num294].noGravity = true;
							Main.dust[num294].velocity -= this.velocity;
							Dust expr_12084_cp_0 = Main.dust[num294];
							expr_12084_cp_0.velocity.Y = expr_12084_cp_0.velocity.Y + 5f;
						}
						return;
					}
				}
				else if (this.aiStyle == 12)
				{
					this.spriteDirection = -(int)this.ai[0];
					if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 11)
					{
						this.ai[2] += 10f;
						if (this.ai[2] > 50f || Main.netMode != 2)
						{
							this.life = -1;
							this.HitEffect(0, 10.0);
							this.active = false;
						}
					}
					if (this.ai[2] == 0f || this.ai[2] == 3f)
					{
						if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
						{
							this.timeLeft = 10;
						}
						if (Main.npc[(int)this.ai[1]].ai[1] != 0f)
						{
							if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 100f)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y - 0.07f;
								if (this.velocity.Y > 6f)
								{
									this.velocity.Y = 6f;
								}
							}
							else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 100f)
							{
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y + 0.07f;
								if (this.velocity.Y < -6f)
								{
									this.velocity.Y = -6f;
								}
							}
							if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
							{
								if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X - 0.1f;
								if (this.velocity.X > 8f)
								{
									this.velocity.X = 8f;
								}
							}
							if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X + 0.1f;
								if (this.velocity.X < -8f)
								{
									this.velocity.X = -8f;
								}
							}
						}
						else
						{
							this.ai[3] += 1f;
							if (this.ai[3] >= 300f)
							{
								this.ai[2] += 1f;
								this.ai[3] = 0f;
								this.netUpdate = true;
							}
							if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y + 230f)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y - 0.04f;
								if (this.velocity.Y > 3f)
								{
									this.velocity.Y = 3f;
								}
							}
							else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y + 230f)
							{
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y + 0.04f;
								if (this.velocity.Y < -3f)
								{
									this.velocity.Y = -3f;
								}
							}
							if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0])
							{
								if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X - 0.07f;
								if (this.velocity.X > 8f)
								{
									this.velocity.X = 8f;
								}
							}
							if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0])
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X + 0.07f;
								if (this.velocity.X < -8f)
								{
									this.velocity.X = -8f;
								}
							}
						}
						Vector2 vector28 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num296 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector28.X;
						float num297 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector28.Y;
						Math.Sqrt((double)(num296 * num296 + num297 * num297));
						this.rotation = (float)Math.Atan2((double)num297, (double)num296) + 1.57f;
						return;
					}
					if (this.ai[2] == 1f)
					{
						Vector2 vector29 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num298 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector29.X;
						float num299 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector29.Y;
						float num300 = (float)Math.Sqrt((double)(num298 * num298 + num299 * num299));
						this.rotation = (float)Math.Atan2((double)num299, (double)num298) + 1.57f;
						this.velocity.X = this.velocity.X * 0.95f;
						this.velocity.Y = this.velocity.Y - 0.1f;
						if (this.velocity.Y < -8f)
						{
							this.velocity.Y = -8f;
						}
						if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 200f)
						{
							this.TargetClosest(true);
							this.ai[2] = 2f;
							vector29 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							num298 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector29.X;
							num299 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector29.Y;
							num300 = (float)Math.Sqrt((double)(num298 * num298 + num299 * num299));
							num300 = 18f / num300;
							this.velocity.X = num298 * num300;
							this.velocity.Y = num299 * num300;
							this.netUpdate = true;
							return;
						}
					}
					else if (this.ai[2] == 2f)
					{
						if (this.position.Y > Main.player[this.target].position.Y || this.velocity.Y < 0f)
						{
							this.ai[2] = 3f;
							return;
						}
					}
					else if (this.ai[2] == 4f)
					{
						Vector2 vector30 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num301 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector30.X;
						float num302 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector30.Y;
						float num303 = (float)Math.Sqrt((double)(num301 * num301 + num302 * num302));
						this.rotation = (float)Math.Atan2((double)num302, (double)num301) + 1.57f;
						this.velocity.Y = this.velocity.Y * 0.95f;
						this.velocity.X = this.velocity.X + 0.1f * -this.ai[0];
						if (this.velocity.X < -8f)
						{
							this.velocity.X = -8f;
						}
						if (this.velocity.X > 8f)
						{
							this.velocity.X = 8f;
						}
						if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 500f || this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 500f)
						{
							this.TargetClosest(true);
							this.ai[2] = 5f;
							vector30 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							num301 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector30.X;
							num302 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector30.Y;
							num303 = (float)Math.Sqrt((double)(num301 * num301 + num302 * num302));
							num303 = 17f / num303;
							this.velocity.X = num301 * num303;
							this.velocity.Y = num302 * num303;
							this.netUpdate = true;
							return;
						}
					}
					else if (this.ai[2] == 5f && ((this.velocity.X > 0f && this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)) || (this.velocity.X < 0f && this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))))
					{
						this.ai[2] = 0f;
						return;
					}
				}
				else if (this.aiStyle == 13)
				{
					if (this.ai[0] < 0f || this.ai[0] >= (float)Main.maxTilesX || this.ai[1] < 0f || this.ai[1] >= (float)Main.maxTilesX)
					{
						return;
					}
					if (false)
					{
						Main.tile[(int)this.ai[0], (int)this.ai[1]] = new Tile();
					}
					if (!Main.tile[(int)this.ai[0], (int)this.ai[1]].active())
					{
						this.life = -1;
						this.HitEffect(0, 10.0);
						this.active = false;
						return;
					}
					this.TargetClosest(true);
					float num304 = 0.035f;
					float num305 = 150f;
					if (this.type == 43)
					{
						num305 = 250f;
					}
					if (this.type == 101)
					{
						num305 = 175f;
					}
					if (this.type == 259)
					{
						num305 = 100f;
					}
					if (this.type == 175)
					{
						num305 = 500f;
						num304 = 0.05f;
					}
					if (this.type == 260)
					{
						num305 = 350f;
						num304 = 0.15f;
					}
					this.ai[2] += 1f;
					if (this.ai[2] > 300f)
					{
						num305 = (float)((int)((double)num305 * 1.3));
						if (this.ai[2] > 450f)
						{
							this.ai[2] = 0f;
						}
					}
					Vector2 vector31 = new Vector2(this.ai[0] * 16f + 8f, this.ai[1] * 16f + 8f);
					float num306 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - (float)(this.width / 2) - vector31.X;
					float num307 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - (float)(this.height / 2) - vector31.Y;
					float num308 = (float)Math.Sqrt((double)(num306 * num306 + num307 * num307));
					if (num308 > num305)
					{
						num308 = num305 / num308;
						num306 *= num308;
						num307 *= num308;
					}
					if (this.position.X < this.ai[0] * 16f + 8f + num306)
					{
						this.velocity.X = this.velocity.X + num304;
						if (this.velocity.X < 0f && num306 > 0f)
						{
							this.velocity.X = this.velocity.X + num304 * 1.5f;
						}
					}
					else if (this.position.X > this.ai[0] * 16f + 8f + num306)
					{
						this.velocity.X = this.velocity.X - num304;
						if (this.velocity.X > 0f && num306 < 0f)
						{
							this.velocity.X = this.velocity.X - num304 * 1.5f;
						}
					}
					if (this.position.Y < this.ai[1] * 16f + 8f + num307)
					{
						this.velocity.Y = this.velocity.Y + num304;
						if (this.velocity.Y < 0f && num307 > 0f)
						{
							this.velocity.Y = this.velocity.Y + num304 * 1.5f;
						}
					}
					else if (this.position.Y > this.ai[1] * 16f + 8f + num307)
					{
						this.velocity.Y = this.velocity.Y - num304;
						if (this.velocity.Y > 0f && num307 < 0f)
						{
							this.velocity.Y = this.velocity.Y - num304 * 1.5f;
						}
					}
					if (this.type == 43)
					{
						if (this.velocity.X > 3f)
						{
							this.velocity.X = 3f;
						}
						if (this.velocity.X < -3f)
						{
							this.velocity.X = -3f;
						}
						if (this.velocity.Y > 3f)
						{
							this.velocity.Y = 3f;
						}
						if (this.velocity.Y < -3f)
						{
							this.velocity.Y = -3f;
						}
					}
					else if (this.type == 175)
					{
						if (this.velocity.X > 4f)
						{
							this.velocity.X = 4f;
						}
						if (this.velocity.X < -4f)
						{
							this.velocity.X = -4f;
						}
						if (this.velocity.Y > 4f)
						{
							this.velocity.Y = 4f;
						}
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = -4f;
						}
					}
					else
					{
						if (this.velocity.X > 2f)
						{
							this.velocity.X = 2f;
						}
						if (this.velocity.X < -2f)
						{
							this.velocity.X = -2f;
						}
						if (this.velocity.Y > 2f)
						{
							this.velocity.Y = 2f;
						}
						if (this.velocity.Y < -2f)
						{
							this.velocity.Y = -2f;
						}
					}
					if (this.type == 259 || this.type == 260)
					{
						this.rotation = (float)Math.Atan2((double)num307, (double)num306) + 1.57f;
					}
					else
					{
						if (num306 > 0f)
						{
							this.spriteDirection = 1;
							this.rotation = (float)Math.Atan2((double)num307, (double)num306);
						}
						if (num306 < 0f)
						{
							this.spriteDirection = -1;
							this.rotation = (float)Math.Atan2((double)num307, (double)num306) + 3.14f;
						}
					}
					if (this.collideX)
					{
						this.netUpdate = true;
						this.velocity.X = this.oldVelocity.X * -0.7f;
						if (this.velocity.X > 0f && this.velocity.X < 2f)
						{
							this.velocity.X = 2f;
						}
						if (this.velocity.X < 0f && this.velocity.X > -2f)
						{
							this.velocity.X = -2f;
						}
					}
					if (this.collideY)
					{
						this.netUpdate = true;
						this.velocity.Y = this.oldVelocity.Y * -0.7f;
						if (this.velocity.Y > 0f && this.velocity.Y < 2f)
						{
							this.velocity.Y = 2f;
						}
						if (this.velocity.Y < 0f && this.velocity.Y > -2f)
						{
							this.velocity.Y = -2f;
						}
					}
					if (Main.netMode != 1)
					{
						if (this.type == 101 && !Main.player[this.target].dead)
						{
							if (this.justHit)
							{
								this.localAI[0] = 0f;
							}
							this.localAI[0] += 1f;
							if (this.localAI[0] >= 120f)
							{
								if (!Collision.SolidCollision(this.position, this.width, this.height) && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									float num309 = 10f;
									vector31 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									num306 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector31.X + (float)Main.rand.Next(-10, 11);
									num307 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector31.Y + (float)Main.rand.Next(-10, 11);
									num308 = (float)Math.Sqrt((double)(num306 * num306 + num307 * num307));
									num308 = num309 / num308;
									num306 *= num308;
									num307 *= num308;
									int num310 = 22;
									int num311 = 96;
									int num312 = Projectile.NewProjectile(vector31.X, vector31.Y, num306, num307, num311, num310, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num312].timeLeft = 300;
									this.localAI[0] = 0f;
								}
								else
								{
									this.localAI[0] = 100f;
								}
							}
						}
						if (this.type == 260 && !Main.player[this.target].dead)
						{
							if (this.justHit)
							{
								this.localAI[0] = 0f;
							}
							this.localAI[0] += 1f;
							if (this.localAI[0] >= 150f)
							{
								if (!Collision.SolidCollision(this.position, this.width, this.height))
								{
									float num313 = 14f;
									vector31 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									num306 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector31.X + (float)Main.rand.Next(-10, 11);
									float num314 = Math.Abs(num306 * 0.1f);
									if (num307 > 0f)
									{
										num314 = 0f;
									}
									num307 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector31.Y + (float)Main.rand.Next(-10, 11) - num314;
									num308 = (float)Math.Sqrt((double)(num306 * num306 + num307 * num307));
									num308 = num313 / num308;
									num306 *= num308;
									num307 *= num308;
									int num315 = NPC.NewNPC((int)this.center().X, (int)this.center().Y, 261, 0);
									Main.npc[num315].velocity.X = num306;
									Main.npc[num315].velocity.Y = num307;
									Main.npc[num315].netUpdate = true;
									this.localAI[0] = 0f;
									return;
								}
								this.localAI[0] = 250f;
								return;
							}
						}
					}
				}
				else if (this.aiStyle == 14)
				{
					if (this.type == 60 || this.type == 151)
					{
						int num316 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
						Main.dust[num316].noGravity = true;
					}
					if (this.type == 150 && Main.rand.Next(10) == 0)
					{
						int num317 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, default(Color), 1.5f);
						Main.dust[num317].noGravity = true;
						Main.dust[num317].velocity *= 0.2f;
						Main.dust[num317].noLight = true;
					}
					this.noGravity = true;
					if (this.collideX)
					{
						this.velocity.X = this.oldVelocity.X * -0.5f;
						if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
						{
							this.velocity.X = 2f;
						}
						if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
						{
							this.velocity.X = -2f;
						}
					}
					if (this.collideY)
					{
						this.velocity.Y = this.oldVelocity.Y * -0.5f;
						if (this.velocity.Y > 0f && this.velocity.Y < 1f)
						{
							this.velocity.Y = 1f;
						}
						if (this.velocity.Y < 0f && this.velocity.Y > -1f)
						{
							this.velocity.Y = -1f;
						}
					}
					if (this.type == 226)
					{
						int num318 = 1;
						int num319 = 1;
						if (this.velocity.X < 0f)
						{
							num318 = -1;
						}
						if (this.velocity.Y < 0f)
						{
							num319 = -1;
						}
						this.TargetClosest(true);
						if (!Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							this.direction = num318;
							this.directionY = num319;
						}
					}
					else
					{
						this.TargetClosest(true);
					}
					if (this.type == 158)
					{
						if ((double)this.position.Y < Main.worldSurface * 16.0 && Main.dayTime && !Main.eclipse)
						{
							this.directionY = -1;
							this.direction *= -1;
						}
						if (this.direction == -1 && this.velocity.X > -7f)
						{
							this.velocity.X = this.velocity.X - 0.2f;
							if (this.velocity.X > 4f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X + 0.05f;
							}
							if (this.velocity.X < -7f)
							{
								this.velocity.X = -7f;
							}
						}
						else if (this.direction == 1 && this.velocity.X < 7f)
						{
							this.velocity.X = this.velocity.X + 0.2f;
							if (this.velocity.X < -4f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - 0.05f;
							}
							if (this.velocity.X > 7f)
							{
								this.velocity.X = 7f;
							}
						}
						if (this.directionY == -1 && this.velocity.Y > -7f)
						{
							this.velocity.Y = this.velocity.Y - 0.2f;
							if (this.velocity.Y > 4f)
							{
								this.velocity.Y = this.velocity.Y - 0.1f;
							}
							else if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.05f;
							}
							if (this.velocity.Y < -7f)
							{
								this.velocity.Y = -7f;
							}
						}
						else if (this.directionY == 1 && this.velocity.Y < 7f)
						{
							this.velocity.Y = this.velocity.Y + 0.2f;
							if (this.velocity.Y < -4f)
							{
								this.velocity.Y = this.velocity.Y + 0.1f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.05f;
							}
							if (this.velocity.Y > 7f)
							{
								this.velocity.Y = 7f;
							}
						}
					}
					else if (this.type == 226)
					{
						if (this.direction == -1 && this.velocity.X > -4f)
						{
							this.velocity.X = this.velocity.X - 0.2f;
							if (this.velocity.X > 4f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X + 0.05f;
							}
							if (this.velocity.X < -4f)
							{
								this.velocity.X = -4f;
							}
						}
						else if (this.direction == 1 && this.velocity.X < 4f)
						{
							this.velocity.X = this.velocity.X + 0.2f;
							if (this.velocity.X < -4f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - 0.05f;
							}
							if (this.velocity.X > 4f)
							{
								this.velocity.X = 4f;
							}
						}
						if (this.directionY == -1 && (double)this.velocity.Y > -2.5)
						{
							this.velocity.Y = this.velocity.Y - 0.1f;
							if ((double)this.velocity.Y > 2.5)
							{
								this.velocity.Y = this.velocity.Y - 0.05f;
							}
							else if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.03f;
							}
							if ((double)this.velocity.Y < -2.5)
							{
								this.velocity.Y = -2.5f;
							}
						}
						else if (this.directionY == 1 && (double)this.velocity.Y < 2.5)
						{
							this.velocity.Y = this.velocity.Y + 0.1f;
							if ((double)this.velocity.Y < -2.5)
							{
								this.velocity.Y = this.velocity.Y + 0.05f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.03f;
							}
							if ((double)this.velocity.Y > 2.5)
							{
								this.velocity.Y = 2.5f;
							}
						}
					}
					else
					{
						if (this.direction == -1 && this.velocity.X > -4f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
							if (this.velocity.X > 4f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X + 0.05f;
							}
							if (this.velocity.X < -4f)
							{
								this.velocity.X = -4f;
							}
						}
						else if (this.direction == 1 && this.velocity.X < 4f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
							if (this.velocity.X < -4f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - 0.05f;
							}
							if (this.velocity.X > 4f)
							{
								this.velocity.X = 4f;
							}
						}
						if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
						{
							this.velocity.Y = this.velocity.Y - 0.04f;
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = this.velocity.Y - 0.05f;
							}
							else if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.03f;
							}
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = -1.5f;
							}
						}
						else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
						{
							this.velocity.Y = this.velocity.Y + 0.04f;
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = this.velocity.Y + 0.05f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.03f;
							}
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = 1.5f;
							}
						}
					}
					if (this.type == 49 || this.type == 51 || this.type == 60 || this.type == 62 || this.type == 66 || this.type == 93 || this.type == 137 || this.type == 150 || this.type == 151 || this.type == 152)
					{
						if (this.wet)
						{
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.95f;
							}
							this.velocity.Y = this.velocity.Y - 0.5f;
							if (this.velocity.Y < -4f)
							{
								this.velocity.Y = -4f;
							}
							this.TargetClosest(true);
						}
						if (this.type == 60)
						{
							if (this.direction == -1 && this.velocity.X > -4f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
								if (this.velocity.X > 4f)
								{
									this.velocity.X = this.velocity.X - 0.07f;
								}
								else if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X + 0.03f;
								}
								if (this.velocity.X < -4f)
								{
									this.velocity.X = -4f;
								}
							}
							else if (this.direction == 1 && this.velocity.X < 4f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
								if (this.velocity.X < -4f)
								{
									this.velocity.X = this.velocity.X + 0.07f;
								}
								else if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X - 0.03f;
								}
								if (this.velocity.X > 4f)
								{
									this.velocity.X = 4f;
								}
							}
							if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
							{
								this.velocity.Y = this.velocity.Y - 0.04f;
								if ((double)this.velocity.Y > 1.5)
								{
									this.velocity.Y = this.velocity.Y - 0.03f;
								}
								else if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y + 0.02f;
								}
								if ((double)this.velocity.Y < -1.5)
								{
									this.velocity.Y = -1.5f;
								}
							}
							else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
							{
								this.velocity.Y = this.velocity.Y + 0.04f;
								if ((double)this.velocity.Y < -1.5)
								{
									this.velocity.Y = this.velocity.Y + 0.03f;
								}
								else if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y - 0.02f;
								}
								if ((double)this.velocity.Y > 1.5)
								{
									this.velocity.Y = 1.5f;
								}
							}
						}
						else
						{
							if (this.direction == -1 && this.velocity.X > -4f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
								if (this.velocity.X > 4f)
								{
									this.velocity.X = this.velocity.X - 0.1f;
								}
								else if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X + 0.05f;
								}
								if (this.velocity.X < -4f)
								{
									this.velocity.X = -4f;
								}
							}
							else if (this.direction == 1 && this.velocity.X < 4f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
								if (this.velocity.X < -4f)
								{
									this.velocity.X = this.velocity.X + 0.1f;
								}
								else if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X - 0.05f;
								}
								if (this.velocity.X > 4f)
								{
									this.velocity.X = 4f;
								}
							}
							if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
							{
								this.velocity.Y = this.velocity.Y - 0.04f;
								if ((double)this.velocity.Y > 1.5)
								{
									this.velocity.Y = this.velocity.Y - 0.05f;
								}
								else if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y + 0.03f;
								}
								if ((double)this.velocity.Y < -1.5)
								{
									this.velocity.Y = -1.5f;
								}
							}
							else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
							{
								this.velocity.Y = this.velocity.Y + 0.04f;
								if ((double)this.velocity.Y < -1.5)
								{
									this.velocity.Y = this.velocity.Y + 0.05f;
								}
								else if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y - 0.03f;
								}
								if ((double)this.velocity.Y > 1.5)
								{
									this.velocity.Y = 1.5f;
								}
							}
						}
					}
					if (this.type == 158 && Main.netMode != 1)
					{
						Vector2 vector32 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num320 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector32.X;
						float num321 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector32.Y;
						float num322 = (float)Math.Sqrt((double)(num320 * num320 + num321 * num321));
						if (num322 < 200f && this.position.Y + (float)this.height < Main.player[this.target].position.Y + (float)Main.player[this.target].height && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							this.Transform(159);
						}
					}
					this.ai[1] += 1f;
					if (this.type == 158)
					{
						this.ai[1] += 1f;
					}
					if (this.ai[1] > 200f)
					{
						if (!Main.player[this.target].wet && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							this.ai[1] = 0f;
						}
						float num323 = 0.2f;
						float num324 = 0.1f;
						float num325 = 4f;
						float num326 = 1.5f;
						if (this.type == 48 || this.type == 62 || this.type == 66)
						{
							num323 = 0.12f;
							num324 = 0.07f;
							num325 = 3f;
							num326 = 1.25f;
						}
						if (this.ai[1] > 1000f)
						{
							this.ai[1] = 0f;
						}
						this.ai[2] += 1f;
						if (this.ai[2] > 0f)
						{
							if (this.velocity.Y < num326)
							{
								this.velocity.Y = this.velocity.Y + num324;
							}
						}
						else if (this.velocity.Y > -num326)
						{
							this.velocity.Y = this.velocity.Y - num324;
						}
						if (this.ai[2] < -150f || this.ai[2] > 150f)
						{
							if (this.velocity.X < num325)
							{
								this.velocity.X = this.velocity.X + num323;
							}
						}
						else if (this.velocity.X > -num325)
						{
							this.velocity.X = this.velocity.X - num323;
						}
						if (this.ai[2] > 300f)
						{
							this.ai[2] = -300f;
						}
					}
					if (Main.netMode != 1)
					{
						if (this.type == 48)
						{
							this.ai[0] += 1f;
							if (this.ai[0] == 30f || this.ai[0] == 60f || this.ai[0] == 90f)
							{
								if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									float num327 = 6f;
									Vector2 vector33 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num328 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector33.X + (float)Main.rand.Next(-100, 101);
									float num329 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector33.Y + (float)Main.rand.Next(-100, 101);
									float num330 = (float)Math.Sqrt((double)(num328 * num328 + num329 * num329));
									num330 = num327 / num330;
									num328 *= num330;
									num329 *= num330;
									int num331 = 15;
									int num332 = 38;
									int num333 = Projectile.NewProjectile(vector33.X, vector33.Y, num328, num329, num332, num331, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num333].timeLeft = 300;
								}
							}
							else if (this.ai[0] >= (float)(400 + Main.rand.Next(400)))
							{
								this.ai[0] = 0f;
							}
						}
						if (this.type == 62 || this.type == 66)
						{
							this.ai[0] += 1f;
							if (this.ai[0] == 20f || this.ai[0] == 40f || this.ai[0] == 60f || this.ai[0] == 80f)
							{
								if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									float num334 = 0.2f;
									Vector2 vector34 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num335 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector34.X + (float)Main.rand.Next(-100, 101);
									float num336 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector34.Y + (float)Main.rand.Next(-100, 101);
									float num337 = (float)Math.Sqrt((double)(num335 * num335 + num336 * num336));
									num337 = num334 / num337;
									num335 *= num337;
									num336 *= num337;
									int num338 = 21;
									int num339 = 44;
									int num340 = Projectile.NewProjectile(vector34.X, vector34.Y, num335, num336, num339, num338, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num340].timeLeft = 300;
								}
							}
							else if (this.ai[0] >= (float)(300 + Main.rand.Next(300)))
							{
								this.ai[0] = 0f;
							}
						}
						if (this.type == 156)
						{
							this.ai[0] += 1f;
							if (this.ai[0] == 20f || this.ai[0] == 40f || this.ai[0] == 60f || this.ai[0] == 80f || this.ai[0] == 100f)
							{
								if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									float num341 = 0.2f;
									Vector2 value = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num342 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - value.X + (float)Main.rand.Next(-50, 51);
									float num343 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - value.Y + (float)Main.rand.Next(-50, 51);
									float num344 = (float)Math.Sqrt((double)(num342 * num342 + num343 * num343));
									num344 = num341 / num344;
									num342 *= num344;
									num343 *= num344;
									int num345 = 80;
									int num346 = 115;
									value += this.velocity * 5f;
									int num347 = Projectile.NewProjectile(value.X + num342 * 100f, value.Y + num343 * 100f, num342, num343, num346, num345, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num347].timeLeft = 300;
									return;
								}
							}
							else if (this.ai[0] >= (float)(250 + Main.rand.Next(250)))
							{
								this.ai[0] = 0f;
								return;
							}
						}
					}
				}
				else if (this.aiStyle == 15)
				{
					this.aiAction = 0;
					if (this.ai[3] == 0f && this.life > 0)
					{
						this.ai[3] = (float)this.lifeMax;
					}
					if (this.ai[2] == 0f)
					{
						this.ai[0] = -100f;
						this.ai[2] = 1f;
						this.TargetClosest(true);
					}
					if (this.velocity.Y == 0f)
					{
						this.velocity.X = this.velocity.X * 0.8f;
						if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
						{
							this.velocity.X = 0f;
						}
						this.ai[0] += 2f;
						if ((double)this.life < (double)this.lifeMax * 0.8)
						{
							this.ai[0] += 1f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.6)
						{
							this.ai[0] += 1f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.4)
						{
							this.ai[0] += 2f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.2)
						{
							this.ai[0] += 3f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.1)
						{
							this.ai[0] += 4f;
						}
						if (this.ai[0] >= 0f)
						{
							this.netUpdate = true;
							this.TargetClosest(true);
							if (this.ai[1] == 3f)
							{
								this.velocity.Y = -13f;
								this.velocity.X = this.velocity.X + 3.5f * (float)this.direction;
								this.ai[0] = -200f;
								this.ai[1] = 0f;
							}
							else if (this.ai[1] == 2f)
							{
								this.velocity.Y = -6f;
								this.velocity.X = this.velocity.X + 4.5f * (float)this.direction;
								this.ai[0] = -120f;
								this.ai[1] += 1f;
							}
							else
							{
								this.velocity.Y = -8f;
								this.velocity.X = this.velocity.X + 4f * (float)this.direction;
								this.ai[0] = -120f;
								this.ai[1] += 1f;
							}
						}
						else if (this.ai[0] >= -30f)
						{
							this.aiAction = 1;
						}
					}
					else if (this.target < 255 && ((this.direction == 1 && this.velocity.X < 3f) || (this.direction == -1 && this.velocity.X > -3f)))
					{
						if ((this.direction == -1 && (double)this.velocity.X < 0.1) || (this.direction == 1 && (double)this.velocity.X > -0.1))
						{
							this.velocity.X = this.velocity.X + 0.2f * (float)this.direction;
						}
						else
						{
							this.velocity.X = this.velocity.X * 0.93f;
						}
					}
					int num348 = Dust.NewDust(this.position, this.width, this.height, 4, this.velocity.X, this.velocity.Y, 255, new Color(0, 80, 255, 80), this.scale * 1.2f);
					Main.dust[num348].noGravity = true;
					Main.dust[num348].velocity *= 0.5f;
					if (this.life > 0)
					{
						float num349 = (float)this.life / (float)this.lifeMax;
						num349 = num349 * 0.5f + 0.75f;
						if (num349 != this.scale)
						{
							this.position.X = this.position.X + (float)(this.width / 2);
							this.position.Y = this.position.Y + (float)this.height;
							this.scale = num349;
							this.width = (int)(98f * this.scale);
							this.height = (int)(92f * this.scale);
							this.position.X = this.position.X - (float)(this.width / 2);
							this.position.Y = this.position.Y - (float)this.height;
						}
						if (Main.netMode != 1)
						{
							int num350 = (int)((double)this.lifeMax * 0.05);
							if ((float)(this.life + num350) < this.ai[3])
							{
								this.ai[3] = (float)this.life;
								int num351 = Main.rand.Next(1, 4);
								for (int num352 = 0; num352 < num351; num352++)
								{
									int x = (int)(this.position.X + (float)Main.rand.Next(this.width - 32));
									int y = (int)(this.position.Y + (float)Main.rand.Next(this.height - 32));
									int num353 = NPC.NewNPC(x, y, 1, 0);
									Main.npc[num353].SetDefaults(1, -1f);
									Main.npc[num353].velocity.X = (float)Main.rand.Next(-15, 16) * 0.1f;
									Main.npc[num353].velocity.Y = (float)Main.rand.Next(-30, 1) * 0.1f;
									Main.npc[num353].ai[1] = (float)Main.rand.Next(3);
									if (Main.netMode == 2 && num353 < 200)
									{
										NetMessage.SendData(23, -1, -1, "", num353, 0f, 0f, 0f, 0);
									}
								}
								return;
							}
						}
					}
				}
				else if (this.aiStyle == 16)
				{
					if (this.direction == 0)
					{
						this.TargetClosest(true);
					}
					if (this.wet)
					{
						bool flag29 = false;
						if (this.type != 55)
						{
							this.TargetClosest(false);
							if (Main.player[this.target].wet && !Main.player[this.target].dead)
							{
								flag29 = true;
							}
						}
						if (!flag29)
						{
							if (this.collideX)
							{
								this.velocity.X = this.velocity.X * -1f;
								this.direction *= -1;
								this.netUpdate = true;
							}
							if (this.collideY)
							{
								this.netUpdate = true;
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = Math.Abs(this.velocity.Y) * -1f;
									this.directionY = -1;
									this.ai[0] = -1f;
								}
								else if (this.velocity.Y < 0f)
								{
									this.velocity.Y = Math.Abs(this.velocity.Y);
									this.directionY = 1;
									this.ai[0] = 1f;
								}
							}
						}
						if (flag29)
						{
							this.TargetClosest(true);
							if (this.type == 157)
							{
								if (this.velocity.X > 0f && this.direction < 0)
								{
									this.velocity.X = this.velocity.X * 0.95f;
								}
								if (this.velocity.X < 0f && this.direction > 0)
								{
									this.velocity.X = this.velocity.X * 0.95f;
								}
								this.velocity.X = this.velocity.X + (float)this.direction * 0.25f;
								this.velocity.Y = this.velocity.Y + (float)this.directionY * 0.2f;
								if (this.velocity.X > 8f)
								{
									this.velocity.X = 7f;
								}
								if (this.velocity.X < -8f)
								{
									this.velocity.X = -7f;
								}
								if (this.velocity.Y > 5f)
								{
									this.velocity.Y = 4f;
								}
								if (this.velocity.Y < -5f)
								{
									this.velocity.Y = -4f;
								}
							}
							else if (this.type == 65 || this.type == 102)
							{
								this.velocity.X = this.velocity.X + (float)this.direction * 0.15f;
								this.velocity.Y = this.velocity.Y + (float)this.directionY * 0.15f;
								if (this.velocity.X > 5f)
								{
									this.velocity.X = 5f;
								}
								if (this.velocity.X < -5f)
								{
									this.velocity.X = -5f;
								}
								if (this.velocity.Y > 3f)
								{
									this.velocity.Y = 3f;
								}
								if (this.velocity.Y < -3f)
								{
									this.velocity.Y = -3f;
								}
							}
							else
							{
								this.velocity.X = this.velocity.X + (float)this.direction * 0.1f;
								this.velocity.Y = this.velocity.Y + (float)this.directionY * 0.1f;
								if (this.velocity.X > 3f)
								{
									this.velocity.X = 3f;
								}
								if (this.velocity.X < -3f)
								{
									this.velocity.X = -3f;
								}
								if (this.velocity.Y > 2f)
								{
									this.velocity.Y = 2f;
								}
								if (this.velocity.Y < -2f)
								{
									this.velocity.Y = -2f;
								}
							}
						}
						else
						{
							if (this.type == 157)
							{
								if (Main.player[this.target].position.Y > this.position.Y)
								{
									this.directionY = 1;
								}
								else
								{
									this.directionY = -1;
								}
								this.velocity.X = this.velocity.X + (float)this.direction * 0.2f;
								if (this.velocity.X < -2f || this.velocity.X > 2f)
								{
									this.velocity.X = this.velocity.X * 0.95f;
								}
								if (this.ai[0] == -1f)
								{
									float num354 = -0.6f;
									if (this.directionY < 0)
									{
										num354 = -1f;
									}
									if (this.directionY > 0)
									{
										num354 = -0.2f;
									}
									this.velocity.Y = this.velocity.Y - 0.02f;
									if (this.velocity.Y < num354)
									{
										this.ai[0] = 1f;
									}
								}
								else
								{
									float num355 = 0.6f;
									if (this.directionY < 0)
									{
										num355 = 0.2f;
									}
									if (this.directionY > 0)
									{
										num355 = 1f;
									}
									this.velocity.Y = this.velocity.Y + 0.02f;
									if (this.velocity.Y > num355)
									{
										this.ai[0] = -1f;
									}
								}
							}
							else
							{
								this.velocity.X = this.velocity.X + (float)this.direction * 0.1f;
								if (this.velocity.X < -1f || this.velocity.X > 1f)
								{
									this.velocity.X = this.velocity.X * 0.95f;
								}
								if (this.ai[0] == -1f)
								{
									this.velocity.Y = this.velocity.Y - 0.01f;
									if ((double)this.velocity.Y < -0.3)
									{
										this.ai[0] = 1f;
									}
								}
								else
								{
									this.velocity.Y = this.velocity.Y + 0.01f;
									if ((double)this.velocity.Y > 0.3)
									{
										this.ai[0] = -1f;
									}
								}
							}
							int num356 = (int)(this.position.X + (float)(this.width / 2)) / 16;
							int num357 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
							if (false)
							{
								Main.tile[num356, num357 - 1] = new Tile();
							}
							if (false)
							{
								Main.tile[num356, num357 + 1] = new Tile();
							}
							if (false)
							{
								Main.tile[num356, num357 + 2] = new Tile();
							}
							if (Main.tile[num356, num357 - 1].liquid > 128)
							{
								if (Main.tile[num356, num357 + 1].active())
								{
									this.ai[0] = -1f;
								}
								else if (Main.tile[num356, num357 + 2].active())
								{
									this.ai[0] = -1f;
								}
							}
							if (this.type != 157 && ((double)this.velocity.Y > 0.4 || (double)this.velocity.Y < -0.4))
							{
								this.velocity.Y = this.velocity.Y * 0.95f;
							}
						}
					}
					else
					{
						if (this.velocity.Y == 0f)
						{
							if (this.type == 65)
							{
								this.velocity.X = this.velocity.X * 0.94f;
								if ((double)this.velocity.X > -0.2 && (double)this.velocity.X < 0.2)
								{
									this.velocity.X = 0f;
								}
							}
							else if (Main.netMode != 1)
							{
								this.velocity.Y = (float)Main.rand.Next(-50, -20) * 0.1f;
								this.velocity.X = (float)Main.rand.Next(-20, 20) * 0.1f;
								this.netUpdate = true;
							}
						}
						this.velocity.Y = this.velocity.Y + 0.3f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
						}
						this.ai[0] = 1f;
					}
					this.rotation = this.velocity.Y * (float)this.direction * 0.1f;
					if ((double)this.rotation < -0.2)
					{
						this.rotation = -0.2f;
					}
					if ((double)this.rotation > 0.2)
					{
						this.rotation = 0.2f;
						return;
					}
				}
				else if (this.aiStyle == 17)
				{
					this.noGravity = true;
					if (this.ai[0] == 0f)
					{
						this.noGravity = false;
						this.TargetClosest(true);
						if (Main.netMode != 1)
						{
							if (this.velocity.X != 0f || this.velocity.Y < 0f || (double)this.velocity.Y > 0.3)
							{
								this.ai[0] = 1f;
								this.netUpdate = true;
							}
							else
							{
								Rectangle rectangle5 = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
								Rectangle rectangle6 = new Rectangle((int)this.position.X - 100, (int)this.position.Y - 100, this.width + 200, this.height + 200);
								if (rectangle6.Intersects(rectangle5) || this.life < this.lifeMax)
								{
									this.ai[0] = 1f;
									this.velocity.Y = this.velocity.Y - 6f;
									this.netUpdate = true;
								}
							}
						}
					}
					else if (!Main.player[this.target].dead)
					{
						if (this.collideX)
						{
							this.velocity.X = this.oldVelocity.X * -0.5f;
							if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
							{
								this.velocity.X = 2f;
							}
							if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
							{
								this.velocity.X = -2f;
							}
						}
						if (this.collideY)
						{
							this.velocity.Y = this.oldVelocity.Y * -0.5f;
							if (this.velocity.Y > 0f && this.velocity.Y < 1f)
							{
								this.velocity.Y = 1f;
							}
							if (this.velocity.Y < 0f && this.velocity.Y > -1f)
							{
								this.velocity.Y = -1f;
							}
						}
						this.TargetClosest(true);
						if (this.direction == -1 && this.velocity.X > -3f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
							if (this.velocity.X > 3f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X - 0.05f;
							}
							if (this.velocity.X < -3f)
							{
								this.velocity.X = -3f;
							}
						}
						else if (this.direction == 1 && this.velocity.X < 3f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
							if (this.velocity.X < -3f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X + 0.05f;
							}
							if (this.velocity.X > 3f)
							{
								this.velocity.X = 3f;
							}
						}
						float num358 = Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)));
						float num359 = Main.player[this.target].position.Y - (float)(this.height / 2);
						if (num358 > 50f)
						{
							num359 -= 100f;
						}
						if (this.position.Y < num359)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
							if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.01f;
							}
						}
						else
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.01f;
							}
						}
						if (this.velocity.Y < -3f)
						{
							this.velocity.Y = -3f;
						}
						if (this.velocity.Y > 3f)
						{
							this.velocity.Y = 3f;
						}
					}
					if (this.wet)
					{
						if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.95f;
						}
						this.velocity.Y = this.velocity.Y - 0.5f;
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = -4f;
						}
						this.TargetClosest(true);
						return;
					}
				}
				else if (this.aiStyle == 18)
				{
					if (this.direction == 0)
					{
						this.TargetClosest(true);
					}
					if (!this.wet)
					{
						this.rotation += this.velocity.X * 0.1f;
						if (this.velocity.Y == 0f)
						{
							this.velocity.X = this.velocity.X * 0.98f;
							if ((double)this.velocity.X > -0.01 && (double)this.velocity.X < 0.01)
							{
								this.velocity.X = 0f;
							}
						}
						this.velocity.Y = this.velocity.Y + 0.2f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
						}
						this.ai[0] = 1f;
						return;
					}
					if (this.collideX)
					{
						this.velocity.X = this.velocity.X * -1f;
						this.direction *= -1;
					}
					if (this.collideY)
					{
						if (this.velocity.Y > 0f)
						{
							this.velocity.Y = Math.Abs(this.velocity.Y) * -1f;
							this.directionY = -1;
							this.ai[0] = -1f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = Math.Abs(this.velocity.Y);
							this.directionY = 1;
							this.ai[0] = 1f;
						}
					}
					bool flag30 = false;
					if (!this.friendly)
					{
						this.TargetClosest(false);
						if (Main.player[this.target].wet && !Main.player[this.target].dead)
						{
							flag30 = true;
						}
					}
					if (flag30)
					{
						this.localAI[2] = 1f;
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
						this.velocity *= 0.98f;
						float num360 = 0.2f;
						if (this.type == 103)
						{
							this.velocity *= 0.98f;
							num360 = 0.6f;
						}
						if (this.type == 221)
						{
							this.velocity *= 0.99f;
							num360 = 1f;
						}
						if (this.type == 242)
						{
							this.velocity *= 0.995f;
							num360 = 3f;
						}
						if (this.velocity.X > -num360 && this.velocity.X < num360 && this.velocity.Y > -num360 && this.velocity.Y < num360)
						{
							if (this.type == 221)
							{
								this.localAI[0] = 1f;
							}
							this.TargetClosest(true);
							float num361 = 7f;
							if (this.type == 103)
							{
								num361 = 9f;
							}
							Vector2 vector35 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num362 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector35.X;
							float num363 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector35.Y;
							float num364 = (float)Math.Sqrt((double)(num362 * num362 + num363 * num363));
							num364 = num361 / num364;
							num362 *= num364;
							num363 *= num364;
							this.velocity.X = num362;
							this.velocity.Y = num363;
							return;
						}
					}
					else
					{
						this.localAI[2] = 0f;
						this.velocity.X = this.velocity.X + (float)this.direction * 0.02f;
						this.rotation = this.velocity.X * 0.4f;
						if (this.velocity.X < -1f || this.velocity.X > 1f)
						{
							this.velocity.X = this.velocity.X * 0.95f;
						}
						if (this.ai[0] == -1f)
						{
							this.velocity.Y = this.velocity.Y - 0.01f;
							if (this.velocity.Y < -1f)
							{
								this.ai[0] = 1f;
							}
						}
						else
						{
							this.velocity.Y = this.velocity.Y + 0.01f;
							if (this.velocity.Y > 1f)
							{
								this.ai[0] = -1f;
							}
						}
						int num365 = (int)(this.position.X + (float)(this.width / 2)) / 16;
						int num366 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
						if (false)
						{
							Main.tile[num365, num366 - 1] = new Tile();
						}
						if (false)
						{
							Main.tile[num365, num366 + 1] = new Tile();
						}
						if (false)
						{
							Main.tile[num365, num366 + 2] = new Tile();
						}
						if (Main.tile[num365, num366 - 1].liquid > 128)
						{
							if (Main.tile[num365, num366 + 1].active())
							{
								this.ai[0] = -1f;
							}
							else if (Main.tile[num365, num366 + 2].active())
							{
								this.ai[0] = -1f;
							}
						}
						else
						{
							this.ai[0] = 1f;
						}
						if ((double)this.velocity.Y > 1.2 || (double)this.velocity.Y < -1.2)
						{
							this.velocity.Y = this.velocity.Y * 0.99f;
							return;
						}
					}
				}
				else
				{
					if (this.aiStyle == 19)
					{
						this.TargetClosest(true);
						float num367 = 12f;
						Vector2 vector36 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num368 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector36.X;
						float num369 = Main.player[this.target].position.Y - vector36.Y;
						float num370 = (float)Math.Sqrt((double)(num368 * num368 + num369 * num369));
						num370 = num367 / num370;
						num368 *= num370;
						num369 *= num370;
						bool flag31 = false;
						if (this.directionY < 0)
						{
							this.rotation = (float)(Math.Atan2((double)num369, (double)num368) + 1.57);
							flag31 = ((double)this.rotation >= -1.2 && (double)this.rotation <= 1.2);
							if ((double)this.rotation < -0.8)
							{
								this.rotation = -0.8f;
							}
							else if ((double)this.rotation > 0.8)
							{
								this.rotation = 0.8f;
							}
							if (this.velocity.X != 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
								if ((double)this.velocity.X > -0.1 || (double)this.velocity.X < 0.1)
								{
									this.netUpdate = true;
									this.velocity.X = 0f;
								}
							}
						}
						if (this.ai[0] > 0f)
						{
							if (this.ai[0] == 200f)
							{
								Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 5);
							}
							this.ai[0] -= 1f;
						}
						if (Main.netMode != 1 && flag31 && this.ai[0] == 0f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							this.ai[0] = 200f;
							int num371 = 10;
							int num372 = 31;
							int num373 = Projectile.NewProjectile(vector36.X, vector36.Y, num368, num369, num372, num371, 0f, Main.myPlayer, 0f, 0f);
							Main.projectile[num373].ai[0] = 2f;
							Main.projectile[num373].timeLeft = 300;
							Main.projectile[num373].friendly = false;
							NetMessage.SendData(27, -1, -1, "", num373, 0f, 0f, 0f, 0);
							this.netUpdate = true;
						}
						try
						{
							int num374 = (int)this.position.X / 16;
							int num375 = (int)(this.position.X + (float)(this.width / 2)) / 16;
							int num376 = (int)(this.position.X + (float)this.width) / 16;
							int num377 = (int)(this.position.Y + (float)this.height) / 16;
							bool flag32 = false;
							if (false)
							{
								Main.tile[num374, num377] = new Tile();
							}
							if (false)
							{
								Main.tile[num374, num377] = new Tile();
							}
							if (false)
							{
								Main.tile[num374, num377] = new Tile();
							}
							if ((Main.tile[num374, num377].nactive() && Main.tileSolid[(int)Main.tile[num374, num377].type]) || (Main.tile[num375, num377].nactive() && Main.tileSolid[(int)Main.tile[num375, num377].type]) || (Main.tile[num376, num377].nactive() && Main.tileSolid[(int)Main.tile[num376, num377].type]))
							{
								flag32 = true;
							}
							if (flag32)
							{
								this.noGravity = true;
								this.noTileCollide = true;
								this.velocity.Y = -0.2f;
							}
							else
							{
								this.noGravity = false;
								this.noTileCollide = false;
								if (Main.rand.Next(2) == 0)
								{
									int num378 = Dust.NewDust(new Vector2(this.position.X - 4f, this.position.Y + (float)this.height - 8f), this.width + 8, 24, 32, 0f, this.velocity.Y / 2f, 0, default(Color), 1f);
									Dust expr_17FBD_cp_0 = Main.dust[num378];
									expr_17FBD_cp_0.velocity.X = expr_17FBD_cp_0.velocity.X * 0.4f;
									Dust expr_17FDD_cp_0 = Main.dust[num378];
									expr_17FDD_cp_0.velocity.Y = expr_17FDD_cp_0.velocity.Y * -1f;
									if (Main.rand.Next(2) == 0)
									{
										Main.dust[num378].noGravity = true;
										Main.dust[num378].scale += 0.2f;
									}
								}
							}
							return;
						}
						catch
						{
							return;
						}
					}
					if (this.aiStyle == 20)
					{
						if (this.ai[0] == 0f)
						{
							if (Main.netMode != 1)
							{
								this.TargetClosest(true);
								this.direction *= -1;
								this.directionY *= -1;
								this.position.Y = this.position.Y + (float)(this.height / 2 + 8);
								this.ai[1] = this.position.X + (float)(this.width / 2);
								this.ai[2] = this.position.Y + (float)(this.height / 2);
								if (this.direction == 0)
								{
									this.direction = 1;
								}
								if (this.directionY == 0)
								{
									this.directionY = 1;
								}
								this.ai[3] = 1f + (float)Main.rand.Next(15) * 0.1f;
								this.velocity.Y = (float)(this.directionY * 6) * this.ai[3];
								this.ai[0] += 1f;
								this.netUpdate = true;
								return;
							}
							this.ai[1] = this.position.X + (float)(this.width / 2);
							this.ai[2] = this.position.Y + (float)(this.height / 2);
							return;
						}
						else
						{
							float num379 = 6f * this.ai[3];
							float num380 = 0.2f * this.ai[3];
							float num381 = num379 / num380 / 2f;
							if (this.ai[0] >= 1f && this.ai[0] < (float)((int)num381))
							{
								this.velocity.Y = (float)this.directionY * num379;
								this.ai[0] += 1f;
								return;
							}
							if (this.ai[0] >= (float)((int)num381))
							{
								this.velocity.Y = 0f;
								this.directionY *= -1;
								this.velocity.X = num379 * (float)this.direction;
								this.ai[0] = -1f;
								return;
							}
							if (this.directionY > 0)
							{
								if (this.velocity.Y >= num379)
								{
									this.directionY *= -1;
									this.velocity.Y = num379;
								}
							}
							else if (this.directionY < 0 && this.velocity.Y <= -num379)
							{
								this.directionY *= -1;
								this.velocity.Y = -num379;
							}
							if (this.direction > 0)
							{
								if (this.velocity.X >= num379)
								{
									this.direction *= -1;
									this.velocity.X = num379;
								}
							}
							else if (this.direction < 0 && this.velocity.X <= -num379)
							{
								this.direction *= -1;
								this.velocity.X = -num379;
							}
							this.velocity.X = this.velocity.X + num380 * (float)this.direction;
							this.velocity.Y = this.velocity.Y + num380 * (float)this.directionY;
							return;
						}
					}
					else
					{
						if (this.aiStyle == 21)
						{
							if (this.ai[0] == 0f)
							{
								this.TargetClosest(true);
								this.directionY = 1;
								this.ai[0] = 1f;
							}
							int num382 = 6;
							if (this.ai[1] == 0f)
							{
								this.rotation += (float)(this.direction * this.directionY) * 0.13f;
								if (this.collideY)
								{
									this.ai[0] = 2f;
								}
								if (!this.collideY && this.ai[0] == 2f)
								{
									this.direction = -this.direction;
									this.ai[1] = 1f;
									this.ai[0] = 1f;
								}
								if (this.collideX)
								{
									this.directionY = -this.directionY;
									this.ai[1] = 1f;
								}
							}
							else
							{
								this.rotation -= (float)(this.direction * this.directionY) * 0.13f;
								if (this.collideX)
								{
									this.ai[0] = 2f;
								}
								if (!this.collideX && this.ai[0] == 2f)
								{
									this.directionY = -this.directionY;
									this.ai[1] = 0f;
									this.ai[0] = 1f;
								}
								if (this.collideY)
								{
									this.direction = -this.direction;
									this.ai[1] = 0f;
								}
							}
							this.velocity.X = (float)(num382 * this.direction);
							this.velocity.Y = (float)(num382 * this.directionY);
							float num383 = (float)(270 - (int)Main.mouseTextColor) / 400f;
							return;
						}
						if (this.aiStyle == 22)
						{
							bool flag33 = false;
							if (this.justHit)
							{
								this.ai[2] = 0f;
							}
							if (this.ai[2] >= 0f)
							{
								int num384 = 16;
								bool flag34 = false;
								bool flag35 = false;
								if (this.position.X > this.ai[0] - (float)num384 && this.position.X < this.ai[0] + (float)num384)
								{
									flag34 = true;
								}
								else if ((this.velocity.X < 0f && this.direction > 0) || (this.velocity.X > 0f && this.direction < 0))
								{
									flag34 = true;
								}
								num384 += 24;
								if (this.position.Y > this.ai[1] - (float)num384 && this.position.Y < this.ai[1] + (float)num384)
								{
									flag35 = true;
								}
								if (flag34 && flag35)
								{
									this.ai[2] += 1f;
									if (this.ai[2] >= 30f && num384 == 16)
									{
										flag33 = true;
									}
									if (this.ai[2] >= 60f)
									{
										this.ai[2] = -200f;
										this.direction *= -1;
										this.velocity.X = this.velocity.X * -1f;
										this.collideX = false;
									}
								}
								else
								{
									this.ai[0] = this.position.X;
									this.ai[1] = this.position.Y;
									this.ai[2] = 0f;
								}
								this.TargetClosest(true);
							}
							else if (this.type == 253)
							{
								this.TargetClosest(true);
								this.ai[2] += 2f;
							}
							else
							{
								if (this.type == 330)
								{
									this.ai[2] += 0.1f;
								}
								else
								{
									this.ai[2] += 1f;
								}
								if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) > this.position.X + (float)(this.width / 2))
								{
									this.direction = -1;
								}
								else
								{
									this.direction = 1;
								}
							}
							int num385 = (int)((this.position.X + (float)(this.width / 2)) / 16f) + this.direction * 2;
							int num386 = (int)((this.position.Y + (float)this.height) / 16f);
							bool flag36 = true;
							bool flag37 = false;
							int num387 = 3;
							if (this.type == 122)
							{
								if (this.justHit)
								{
									this.ai[3] = 0f;
									this.localAI[1] = 0f;
								}
								float num388 = 7f;
								Vector2 vector37 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num389 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector37.X;
								float num390 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector37.Y;
								float num391 = (float)Math.Sqrt((double)(num389 * num389 + num390 * num390));
								num391 = num388 / num391;
								num389 *= num391;
								num390 *= num391;
								if (Main.netMode != 1 && this.ai[3] == 32f)
								{
									int num392 = 25;
									int num393 = 84;
									Projectile.NewProjectile(vector37.X, vector37.Y, num389, num390, num393, num392, 0f, Main.myPlayer, 0f, 0f);
								}
								num387 = 8;
								if (this.ai[3] > 0f)
								{
									this.ai[3] += 1f;
									if (this.ai[3] >= 64f)
									{
										this.ai[3] = 0f;
									}
								}
								if (Main.netMode != 1 && this.ai[3] == 0f)
								{
									this.localAI[1] += 1f;
									if (this.localAI[1] > 120f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
									{
										this.localAI[1] = 0f;
										this.ai[3] = 1f;
										this.netUpdate = true;
									}
								}
							}
							else if (this.type == 75)
							{
								num387 = 4;
								if (Main.rand.Next(6) == 0)
								{
									int num394 = Dust.NewDust(this.position, this.width, this.height, 55, 0f, 0f, 200, this.color, 1f);
									Main.dust[num394].velocity *= 0.3f;
								}
								if (Main.rand.Next(40) == 0)
								{
									Main.PlaySound(27, (int)this.position.X, (int)this.position.Y, 1);
								}
							}
							else if (this.type == 169)
							{
								this.alpha = 30;
								if (Main.rand.Next(3) == 0)
								{
									int num395 = Dust.NewDust(this.position, this.width, this.height, 92, 0f, 0f, 200, default(Color), 1f);
									Main.dust[num395].velocity *= 0.3f;
									Main.dust[num395].noGravity = true;
								}
								if (this.justHit)
								{
									this.ai[3] = 0f;
									this.localAI[1] = 0f;
								}
								float num396 = 5f;
								Vector2 vector38 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num397 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector38.X;
								float num398 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector38.Y;
								float num399 = (float)Math.Sqrt((double)(num397 * num397 + num398 * num398));
								num399 = num396 / num399;
								num397 *= num399;
								num398 *= num399;
								if (num397 > 0f)
								{
									this.direction = 1;
								}
								else
								{
									this.direction = -1;
								}
								this.spriteDirection = this.direction;
								if (this.direction < 0)
								{
									this.rotation = (float)Math.Atan2((double)(-(double)num398), (double)(-(double)num397));
								}
								else
								{
									this.rotation = (float)Math.Atan2((double)num398, (double)num397);
								}
								if (Main.netMode != 1 && this.ai[3] == 16f)
								{
									int num400 = 45;
									int num401 = 128;
									Projectile.NewProjectile(vector38.X, vector38.Y, num397, num398, num401, num400, 0f, Main.myPlayer, 0f, 0f);
								}
								num387 = 10;
								if (this.ai[3] > 0f)
								{
									this.ai[3] += 1f;
									if (this.ai[3] >= 64f)
									{
										this.ai[3] = 0f;
									}
								}
								if (Main.netMode != 1 && this.ai[3] == 0f)
								{
									this.localAI[1] += 1f;
									if (this.localAI[1] > 120f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
									{
										this.localAI[1] = 0f;
										this.ai[3] = 1f;
										this.netUpdate = true;
									}
								}
							}
							else if (this.type == 268)
							{
								this.rotation = this.velocity.X * 0.1f;
								if (Main.player[this.target].center().Y < this.center().Y)
								{
									num387 = 12;
								}
								else
								{
									num387 = 6;
								}
								if (Main.netMode != 1 && !this.confused)
								{
									this.ai[3] += 1f;
									if (this.justHit)
									{
										this.ai[3] = -45f;
										this.localAI[1] = 0f;
									}
									if (Main.netMode != 1 && this.ai[3] >= (float)(60 + Main.rand.Next(60)))
									{
										this.ai[3] = 0f;
										if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].head))
										{
											float num402 = 10f;
											Vector2 vector39 = new Vector2(this.position.X + (float)this.width * 0.5f - 4f, this.position.Y + (float)this.height * 0.7f);
											float num403 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector39.X;
											float num404 = Math.Abs(num403) * 0.1f;
											float num405 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector39.Y - num404;
											num403 += (float)Main.rand.Next(-10, 11);
											num405 += (float)Main.rand.Next(-30, 21);
											float num406 = (float)Math.Sqrt((double)(num403 * num403 + num405 * num405));
											num406 = num402 / num406;
											num403 *= num406;
											num405 *= num406;
											int num407 = 40;
											int num408 = 288;
											Projectile.NewProjectile(vector39.X, vector39.Y, num403, num405, num408, num407, 0f, Main.myPlayer, 0f, 0f);
										}
									}
								}
							}
							for (int num409 = num386; num409 < num386 + num387; num409++)
							{
								if (false)
								{
									Main.tile[num385, num409] = new Tile();
								}
								if ((Main.tile[num385, num409].nactive() && Main.tileSolid[(int)Main.tile[num385, num409].type]) || Main.tile[num385, num409].liquid > 0)
								{
									if (num409 <= num386 + 1)
									{
										flag37 = true;
									}
									flag36 = false;
									break;
								}
							}
							if (this.type == 169 || this.type == 268)
							{
								for (int num410 = num386 - 3; num410 < num386; num410++)
								{
									if (false)
									{
										Main.tile[num385, num410] = new Tile();
									}
									if ((Main.tile[num385, num410].nactive() && Main.tileSolid[(int)Main.tile[num385, num410].type]) || Main.tile[num385, num410].liquid > 0)
									{
										flag37 = false;
										flag33 = true;
										break;
									}
								}
							}
							if (flag33)
							{
								flag37 = false;
								flag36 = true;
								if (this.type == 268)
								{
									this.velocity.Y = this.velocity.Y + 2f;
								}
							}
							if (flag36)
							{
								if (this.type == 75 || this.type == 169)
								{
									this.velocity.Y = this.velocity.Y + 0.2f;
									if (this.velocity.Y > 2f)
									{
										this.velocity.Y = 2f;
									}
								}
								else
								{
									this.velocity.Y = this.velocity.Y + 0.1f;
									if (this.velocity.Y > 3f)
									{
										this.velocity.Y = 3f;
									}
								}
							}
							else
							{
								if (this.type == 75 || this.type == 169)
								{
									if ((this.directionY < 0 && this.velocity.Y > 0f) || flag37)
									{
										this.velocity.Y = this.velocity.Y - 0.2f;
									}
								}
								else if (this.directionY < 0 && this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y - 0.1f;
								}
								if (this.velocity.Y < -4f)
								{
									this.velocity.Y = -4f;
								}
							}
							if (this.type == 75 && this.wet)
							{
								this.velocity.Y = this.velocity.Y - 0.2f;
								if (this.velocity.Y < -2f)
								{
									this.velocity.Y = -2f;
								}
							}
							if (this.collideX)
							{
								this.velocity.X = this.oldVelocity.X * -0.4f;
								if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 1f)
								{
									this.velocity.X = 1f;
								}
								if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -1f)
								{
									this.velocity.X = -1f;
								}
							}
							if (this.collideY)
							{
								this.velocity.Y = this.oldVelocity.Y * -0.25f;
								if (this.velocity.Y > 0f && this.velocity.Y < 1f)
								{
									this.velocity.Y = 1f;
								}
								if (this.velocity.Y < 0f && this.velocity.Y > -1f)
								{
									this.velocity.Y = -1f;
								}
							}
							float num411 = 2f;
							if (this.type == 75)
							{
								num411 = 3f;
							}
							if (this.type == 253)
							{
								num411 = 4f;
							}
							if (this.type == 330)
							{
								this.alpha = 0;
								num411 = 4f;
								this.TargetClosest(true);
								if (this.direction < 0 && this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
								if (this.direction > 0 && this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
							}
							if (this.direction == -1 && this.velocity.X > -num411)
							{
								this.velocity.X = this.velocity.X - 0.1f;
								if (this.velocity.X > num411)
								{
									this.velocity.X = this.velocity.X - 0.1f;
								}
								else if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X + 0.05f;
								}
								if (this.velocity.X < -num411)
								{
									this.velocity.X = -num411;
								}
							}
							else if (this.direction == 1 && this.velocity.X < num411)
							{
								this.velocity.X = this.velocity.X + 0.1f;
								if (this.velocity.X < -num411)
								{
									this.velocity.X = this.velocity.X + 0.1f;
								}
								else if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X - 0.05f;
								}
								if (this.velocity.X > num411)
								{
									this.velocity.X = num411;
								}
							}
							if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
							{
								this.velocity.Y = this.velocity.Y - 0.04f;
								if ((double)this.velocity.Y > 1.5)
								{
									this.velocity.Y = this.velocity.Y - 0.05f;
								}
								else if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y + 0.03f;
								}
								if ((double)this.velocity.Y < -1.5)
								{
									this.velocity.Y = -1.5f;
								}
							}
							else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
							{
								this.velocity.Y = this.velocity.Y + 0.04f;
								if ((double)this.velocity.Y < -1.5)
								{
									this.velocity.Y = this.velocity.Y + 0.05f;
								}
								else if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y - 0.03f;
								}
								if ((double)this.velocity.Y > 1.5)
								{
									this.velocity.Y = 1.5f;
								}
							}
						}
						else if (this.aiStyle == 23)
						{
							this.noGravity = true;
							this.noTileCollide = true;
							if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
							{
								this.TargetClosest(true);
							}
							if (this.ai[0] == 0f)
							{
								float num412 = 9f;
								Vector2 vector40 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num413 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector40.X;
								float num414 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector40.Y;
								float num415 = (float)Math.Sqrt((double)(num413 * num413 + num414 * num414));
								num415 = num412 / num415;
								num413 *= num415;
								num414 *= num415;
								this.velocity.X = num413;
								this.velocity.Y = num414;
								this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 0.785f;
								this.ai[0] = 1f;
								this.ai[1] = 0f;
								return;
							}
							if (this.ai[0] == 1f)
							{
								if (this.justHit)
								{
									this.ai[0] = 2f;
									this.ai[1] = 0f;
								}
								this.velocity *= 0.99f;
								this.ai[1] += 1f;
								if (this.ai[1] >= 100f)
								{
									this.ai[0] = 2f;
									this.ai[1] = 0f;
									this.velocity.X = 0f;
									this.velocity.Y = 0f;
									return;
								}
							}
							else
							{
								if (this.justHit)
								{
									this.ai[0] = 2f;
									this.ai[1] = 0f;
								}
								this.velocity *= 0.96f;
								this.ai[1] += 1f;
								float num416 = this.ai[1] / 120f;
								num416 = 0.1f + num416 * 0.4f;
								this.rotation += num416 * (float)this.direction;
								if (this.ai[1] >= 120f)
								{
									this.netUpdate = true;
									this.ai[0] = 0f;
									this.ai[1] = 0f;
									return;
								}
							}
						}
						else if (this.aiStyle == 24)
						{
							this.noGravity = true;
							if (this.ai[0] == 0f)
							{
								this.noGravity = false;
								this.TargetClosest(true);
								if (Main.netMode != 1)
								{
									if (this.velocity.X != 0f || this.velocity.Y < 0f || (double)this.velocity.Y > 0.3)
									{
										this.ai[0] = 1f;
										this.netUpdate = true;
										this.direction = -this.direction;
									}
									else
									{
										Rectangle rectangle7 = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
										Rectangle rectangle8 = new Rectangle((int)this.position.X - 100, (int)this.position.Y - 100, this.width + 200, this.height + 200);
										if (rectangle8.Intersects(rectangle7) || this.life < this.lifeMax)
										{
											this.ai[0] = 1f;
											this.velocity.Y = this.velocity.Y - 6f;
											this.netUpdate = true;
											this.direction = -this.direction;
										}
									}
								}
							}
							else if (!Main.player[this.target].dead)
							{
								if (this.collideX)
								{
									this.direction *= -1;
									this.velocity.X = this.oldVelocity.X * -0.5f;
									if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
									{
										this.velocity.X = 2f;
									}
									if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
									{
										this.velocity.X = -2f;
									}
								}
								if (this.collideY)
								{
									this.velocity.Y = this.oldVelocity.Y * -0.5f;
									if (this.velocity.Y > 0f && this.velocity.Y < 1f)
									{
										this.velocity.Y = 1f;
									}
									if (this.velocity.Y < 0f && this.velocity.Y > -1f)
									{
										this.velocity.Y = -1f;
									}
								}
								if (this.direction == -1 && this.velocity.X > -3f)
								{
									this.velocity.X = this.velocity.X - 0.1f;
									if (this.velocity.X > 3f)
									{
										this.velocity.X = this.velocity.X - 0.1f;
									}
									else if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X - 0.05f;
									}
									if (this.velocity.X < -3f)
									{
										this.velocity.X = -3f;
									}
								}
								else if (this.direction == 1 && this.velocity.X < 3f)
								{
									this.velocity.X = this.velocity.X + 0.1f;
									if (this.velocity.X < -3f)
									{
										this.velocity.X = this.velocity.X + 0.1f;
									}
									else if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X + 0.05f;
									}
									if (this.velocity.X > 3f)
									{
										this.velocity.X = 3f;
									}
								}
								int num417 = (int)((this.position.X + (float)(this.width / 2)) / 16f) + this.direction;
								int num418 = (int)((this.position.Y + (float)this.height) / 16f);
								bool flag38 = true;
								int num419 = 15;
								bool flag39 = false;
								for (int num420 = num418; num420 < num418 + num419; num420++)
								{
									if (false)
									{
										Main.tile[num417, num420] = new Tile();
									}
									if ((Main.tile[num417, num420].nactive() && Main.tileSolid[(int)Main.tile[num417, num420].type]) || Main.tile[num417, num420].liquid > 0)
									{
										if (num420 < num418 + 5)
										{
											flag39 = true;
										}
										flag38 = false;
										break;
									}
								}
								if (flag38)
								{
									this.velocity.Y = this.velocity.Y + 0.1f;
								}
								else
								{
									this.velocity.Y = this.velocity.Y - 0.1f;
								}
								if (flag39)
								{
									this.velocity.Y = this.velocity.Y - 0.2f;
								}
								if (this.velocity.Y > 3f)
								{
									this.velocity.Y = 3f;
								}
								if (this.velocity.Y < -4f)
								{
									this.velocity.Y = -4f;
								}
							}
							if (this.wet)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.95f;
								}
								this.velocity.Y = this.velocity.Y - 0.5f;
								if (this.velocity.Y < -4f)
								{
									this.velocity.Y = -4f;
								}
								this.TargetClosest(true);
								return;
							}
						}
						else if (this.aiStyle == 25)
						{
							if (this.ai[3] == 0f)
							{
								this.position.X = this.position.X + 8f;
								if (this.position.Y / 16f > (float)(Main.maxTilesY - 200))
								{
									this.ai[3] = 3f;
								}
								else if ((double)(this.position.Y / 16f) > Main.worldSurface)
								{
									this.TargetClosest(true);
									if (Main.player[this.target].zoneSnow)
									{
										this.ai[3] = 4f;
									}
									else
									{
										this.ai[3] = 2f;
									}
								}
								else
								{
									this.ai[3] = 1f;
								}
							}
							if (this.ai[0] == 0f)
							{
								this.TargetClosest(true);
								if (Main.netMode != 1)
								{
									if (this.velocity.X != 0f || this.velocity.Y < 0f || (double)this.velocity.Y > 0.3)
									{
										this.ai[0] = 1f;
										this.netUpdate = true;
										return;
									}
									Rectangle rectangle9 = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
									Rectangle rectangle10 = new Rectangle((int)this.position.X - 100, (int)this.position.Y - 100, this.width + 200, this.height + 200);
									if (rectangle10.Intersects(rectangle9) || this.life < this.lifeMax)
									{
										this.ai[0] = 1f;
										this.netUpdate = true;
										return;
									}
								}
							}
							else if (this.velocity.Y == 0f)
							{
								this.ai[2] += 1f;
								int num421 = 20;
								if (this.ai[1] == 0f)
								{
									num421 = 12;
								}
								if (this.ai[2] < (float)num421)
								{
									this.velocity.X = this.velocity.X * 0.9f;
									return;
								}
								this.ai[2] = 0f;
								this.TargetClosest(true);
								this.spriteDirection = this.direction;
								this.ai[1] += 1f;
								if (this.ai[1] == 2f)
								{
									this.velocity.X = (float)this.direction * 2.5f;
									this.velocity.Y = -8f;
									this.ai[1] = 0f;
								}
								else
								{
									this.velocity.X = (float)this.direction * 3.5f;
									this.velocity.Y = -4f;
								}
								this.netUpdate = true;
								return;
							}
							else
							{
								if (this.direction == 1 && this.velocity.X < 1f)
								{
									this.velocity.X = this.velocity.X + 0.1f;
									return;
								}
								if (this.direction == -1 && this.velocity.X > -1f)
								{
									this.velocity.X = this.velocity.X - 0.1f;
									return;
								}
							}
						}
						else if (this.aiStyle == 26)
						{
							int num422 = 30;
							bool flag40 = false;
							if (this.velocity.Y == 0f && ((this.velocity.X > 0f && this.direction < 0) || (this.velocity.X < 0f && this.direction > 0)))
							{
								flag40 = true;
								this.ai[3] += 1f;
							}
							if (this.position.X == this.oldPosition.X || this.ai[3] >= (float)num422 || flag40)
							{
								this.ai[3] += 1f;
							}
							else if (this.ai[3] > 0f)
							{
								this.ai[3] -= 1f;
							}
							if (this.ai[3] > (float)(num422 * 10))
							{
								this.ai[3] = 0f;
							}
							if (this.justHit)
							{
								this.ai[3] = 0f;
							}
							if (this.ai[3] == (float)num422)
							{
								this.netUpdate = true;
							}
							Vector2 vector41 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num423 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector41.X;
							float num424 = Main.player[this.target].position.Y - vector41.Y;
							float num425 = (float)Math.Sqrt((double)(num423 * num423 + num424 * num424));
							if (num425 < 200f)
							{
								this.ai[3] = 0f;
							}
							if ((this.type == 155 || this.type == 329) && this.velocity.Y == 0f && num425 < 100f && Math.Abs(this.velocity.X) > 3f && ((this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) && this.velocity.X > 0f) || (this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) && this.velocity.X < 0f)))
							{
								this.velocity.Y = this.velocity.Y - 4f;
							}
							if (this.ai[3] < (float)num422)
							{
								this.TargetClosest(true);
							}
							else
							{
								if (this.velocity.X == 0f)
								{
									if (this.velocity.Y == 0f)
									{
										this.ai[0] += 1f;
										if (this.ai[0] >= 2f)
										{
											this.direction *= -1;
											this.spriteDirection = this.direction;
											this.ai[0] = 0f;
										}
									}
								}
								else
								{
									this.ai[0] = 0f;
								}
								this.directionY = -1;
								if (this.direction == 0)
								{
									this.direction = 1;
								}
							}
							float num426 = 6f;
							if (this.velocity.Y == 0f || this.wet || (this.velocity.X <= 0f && this.direction < 0) || (this.velocity.X >= 0f && this.direction > 0))
							{
								if (this.type == 155)
								{
									if (this.velocity.X > 0f && this.direction < 0)
									{
										this.velocity.X = this.velocity.X * 0.95f;
									}
									if (this.velocity.X < 0f && this.direction > 0)
									{
										this.velocity.X = this.velocity.X * 0.95f;
									}
								}
								if (this.type == 329)
								{
									if (this.velocity.X > 0f && this.direction < 0)
									{
										this.velocity.X = this.velocity.X * 0.9f;
									}
									if (this.velocity.X < 0f && this.direction > 0)
									{
										this.velocity.X = this.velocity.X * 0.9f;
									}
								}
								if (this.type == 315)
								{
									if (this.velocity.X > 0f && this.direction < 0)
									{
										this.velocity.X = this.velocity.X * 0.95f;
									}
									if (this.velocity.X < 0f && this.direction > 0)
									{
										this.velocity.X = this.velocity.X * 0.95f;
									}
									if (this.velocity.X < -num426 || this.velocity.X > num426)
									{
										if (this.velocity.Y == 0f)
										{
											this.velocity *= 0.8f;
										}
									}
									else if (this.velocity.X < num426 && this.direction == 1)
									{
										this.velocity.X = this.velocity.X + 0.07f;
										if (this.velocity.X > num426)
										{
											this.velocity.X = num426;
										}
									}
									else if (this.velocity.X > -num426 && this.direction == -1)
									{
										this.velocity.X = this.velocity.X - 0.07f;
										if (this.velocity.X < -num426)
										{
											this.velocity.X = -num426;
										}
									}
								}
								if (this.type == 329)
								{
									if (this.direction > 0 && this.velocity.X < 3f)
									{
										this.velocity.X = this.velocity.X + 0.1f;
									}
									if (this.direction < 0 && this.velocity.X > -3f)
									{
										this.velocity.X = this.velocity.X - 0.1f;
									}
								}
								if (this.velocity.X < -num426 || this.velocity.X > num426)
								{
									if (this.velocity.Y == 0f)
									{
										this.velocity *= 0.8f;
									}
								}
								else if (this.velocity.X < num426 && this.direction == 1)
								{
									this.velocity.X = this.velocity.X + 0.07f;
									if (this.velocity.X > num426)
									{
										this.velocity.X = num426;
									}
								}
								else if (this.velocity.X > -num426 && this.direction == -1)
								{
									this.velocity.X = this.velocity.X - 0.07f;
									if (this.velocity.X < -num426)
									{
										this.velocity.X = -num426;
									}
								}
							}
							if (this.velocity.Y >= 0f)
							{
								int num427 = 0;
								if (this.velocity.X < 0f)
								{
									num427 = -1;
								}
								if (this.velocity.X > 0f)
								{
									num427 = 1;
								}
								Vector2 vector42 = this.position;
								vector42.X += this.velocity.X;
								int num428 = (int)((vector42.X + (float)(this.width / 2) + (float)((this.width / 2 + 1) * num427)) / 16f);
								int num429 = (int)((vector42.Y + (float)this.height - 1f) / 16f);
								if (false)
								{
									Main.tile[num428, num429] = new Tile();
								}
								if (false)
								{
									Main.tile[num428, num429 - 1] = new Tile();
								}
								if (false)
								{
									Main.tile[num428, num429 - 2] = new Tile();
								}
								if (false)
								{
									Main.tile[num428, num429 - 3] = new Tile();
								}
								if (false)
								{
									Main.tile[num428, num429 + 1] = new Tile();
								}
								if ((float)(num428 * 16) < vector42.X + (float)this.width && (float)(num428 * 16 + 16) > vector42.X && ((Main.tile[num428, num429].nactive() && Main.tile[num428, num429].slope() == 0 && Main.tile[num428, num429 - 1].slope() == 0 && Main.tileSolid[(int)Main.tile[num428, num429].type] && !Main.tileSolidTop[(int)Main.tile[num428, num429].type]) || (Main.tile[num428, num429 - 1].halfBrick() && Main.tile[num428, num429 - 1].nactive())) && (!Main.tile[num428, num429 - 1].nactive() || !Main.tileSolid[(int)Main.tile[num428, num429 - 1].type] || Main.tileSolidTop[(int)Main.tile[num428, num429 - 1].type] || (Main.tile[num428, num429 - 1].halfBrick() && (!Main.tile[num428, num429 - 4].nactive() || !Main.tileSolid[(int)Main.tile[num428, num429 - 4].type] || Main.tileSolidTop[(int)Main.tile[num428, num429 - 4].type]))) && (!Main.tile[num428, num429 - 2].nactive() || !Main.tileSolid[(int)Main.tile[num428, num429 - 2].type] || Main.tileSolidTop[(int)Main.tile[num428, num429 - 2].type]) && (!Main.tile[num428, num429 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num428, num429 - 3].type] || Main.tileSolidTop[(int)Main.tile[num428, num429 - 3].type]) && (!Main.tile[num428 - num427, num429 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num428 - num427, num429 - 3].type]))
								{
									float num430 = (float)(num429 * 16);
									if (Main.tile[num428, num429].halfBrick())
									{
										num430 += 8f;
									}
									if (Main.tile[num428, num429 - 1].halfBrick())
									{
										num430 -= 8f;
									}
									if (num430 < vector42.Y + (float)this.height)
									{
										float num431 = vector42.Y + (float)this.height - num430;
										if ((double)num431 <= 16.1)
										{
											this.gfxOffY += this.position.Y + (float)this.height - num430;
											this.position.Y = num430 - (float)this.height;
											if (num431 < 9f)
											{
												this.stepSpeed = 1f;
											}
											else
											{
												this.stepSpeed = 2f;
											}
										}
									}
								}
							}
							if (this.velocity.Y == 0f)
							{
								int num432 = (int)((this.position.X + (float)(this.width / 2) + (float)((this.width / 2 + 2) * this.direction) + this.velocity.X * 5f) / 16f);
								int num433 = (int)((this.position.Y + (float)this.height - 15f) / 16f);
								if (false)
								{
									Main.tile[num432, num433] = new Tile();
								}
								if (false)
								{
									Main.tile[num432, num433 - 1] = new Tile();
								}
								if (false)
								{
									Main.tile[num432, num433 - 2] = new Tile();
								}
								if (false)
								{
									Main.tile[num432, num433 - 3] = new Tile();
								}
								if (false)
								{
									Main.tile[num432, num433 + 1] = new Tile();
								}
								if (false)
								{
									Main.tile[num432 + this.direction, num433 - 1] = new Tile();
								}
								if (false)
								{
									Main.tile[num432 + this.direction, num433 + 1] = new Tile();
								}
								if (false)
								{
									Main.tile[num432 - this.direction, num433 + 1] = new Tile();
								}
								if ((this.velocity.X < 0f && this.spriteDirection == -1) || (this.velocity.X > 0f && this.spriteDirection == 1))
								{
									if (Main.tile[num432, num433 - 2].nactive() && Main.tileSolid[(int)Main.tile[num432, num433 - 2].type])
									{
										if (Main.tile[num432, num433 - 3].nactive() && Main.tileSolid[(int)Main.tile[num432, num433 - 3].type])
										{
											this.velocity.Y = -8.5f;
											this.netUpdate = true;
											return;
										}
										this.velocity.Y = -7.5f;
										this.netUpdate = true;
										return;
									}
									else
									{
										if (Main.tile[num432, num433 - 1].nactive() && Main.tile[num432, num433 - 1].slope() == 0 && Main.tileSolid[(int)Main.tile[num432, num433 - 1].type])
										{
											this.velocity.Y = -7f;
											this.netUpdate = true;
											return;
										}
										if (this.position.Y + (float)this.height - (float)(num433 * 16) > 20f && Main.tile[num432, num433].nactive() && Main.tile[num432, num433].slope() == 0 && Main.tileSolid[(int)Main.tile[num432, num433].type])
										{
											this.velocity.Y = -6f;
											this.netUpdate = true;
											return;
										}
										if ((this.directionY < 0 || Math.Abs(this.velocity.X) > 3f) && (!Main.tile[num432, num433 + 2].nactive() || !Main.tileSolid[(int)Main.tile[num432, num433 + 2].type]) && (!Main.tile[num432 + this.direction, num433 + 3].nactive() || !Main.tileSolid[(int)Main.tile[num432 + this.direction, num433 + 3].type]))
										{
											this.velocity.Y = -8f;
											this.netUpdate = true;
											return;
										}
									}
								}
							}
						}
						else if (this.aiStyle == 27)
						{
							if (this.position.X < 160f || this.position.X > (float)((Main.maxTilesX - 10) * 16))
							{
								this.active = false;
							}
							if (this.localAI[0] == 0f)
							{
								this.localAI[0] = 1f;
								Main.wofB = -1;
								Main.wofT = -1;
							}
							this.ai[1] += 1f;
							if (this.ai[2] == 0f)
							{
								if ((double)this.life < (double)this.lifeMax * 0.5)
								{
									this.ai[1] += 1f;
								}
								if ((double)this.life < (double)this.lifeMax * 0.2)
								{
									this.ai[1] += 1f;
								}
								if (this.ai[1] > 2700f)
								{
									this.ai[2] = 1f;
								}
							}
							if (this.ai[2] > 0f && this.ai[1] > 60f)
							{
								int num434 = 3;
								if ((double)this.life < (double)this.lifeMax * 0.3)
								{
									num434++;
								}
								this.ai[2] += 1f;
								this.ai[1] = 0f;
								if (this.ai[2] > (float)num434)
								{
									this.ai[2] = 0f;
								}
								if (Main.netMode != 1)
								{
									int num435 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)(this.height / 2) + 20f), 117, 1);
									Main.npc[num435].velocity.X = (float)(this.direction * 8);
								}
							}
							this.localAI[3] += 1f;
							if (this.localAI[3] >= (float)(600 + Main.rand.Next(1000)))
							{
								this.localAI[3] = (float)(-(float)Main.rand.Next(200));
								Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 10);
							}
							Main.wof = this.whoAmI;
							int num436 = (int)(this.position.X / 16f);
							int num437 = (int)((this.position.X + (float)this.width) / 16f);
							int num438 = (int)((this.position.Y + (float)(this.height / 2)) / 16f);
							int num439 = 0;
							int num440 = num438 + 7;
							while (num439 < 15 && num440 > Main.maxTilesY - 200)
							{
								num440++;
								for (int num441 = num436; num441 <= num437; num441++)
								{
									try
									{
										if (WorldGen.SolidTile(num441, num440) || Main.tile[num441, num440].liquid > 0)
										{
											num439++;
										}
									}
									catch
									{
										num439 += 15;
									}
								}
							}
							num440 += 4;
							if (Main.wofB == -1)
							{
								Main.wofB = num440 * 16;
							}
							else if (Main.wofB > num440 * 16)
							{
								Main.wofB--;
								if (Main.wofB < num440 * 16)
								{
									Main.wofB = num440 * 16;
								}
							}
							else if (Main.wofB < num440 * 16)
							{
								Main.wofB++;
								if (Main.wofB > num440 * 16)
								{
									Main.wofB = num440 * 16;
								}
							}
							num439 = 0;
							num440 = num438 - 7;
							while (num439 < 15 && num440 < Main.maxTilesY - 10)
							{
								num440--;
								for (int num442 = num436; num442 <= num437; num442++)
								{
									try
									{
										if (WorldGen.SolidTile(num442, num440) || Main.tile[num442, num440].liquid > 0)
										{
											num439++;
										}
									}
									catch
									{
										num439 += 15;
									}
								}
							}
							num440 -= 4;
							if (Main.wofT == -1)
							{
								Main.wofT = num440 * 16;
							}
							else if (Main.wofT > num440 * 16)
							{
								Main.wofT--;
								if (Main.wofT < num440 * 16)
								{
									Main.wofT = num440 * 16;
								}
							}
							else if (Main.wofT < num440 * 16)
							{
								Main.wofT++;
								if (Main.wofT > num440 * 16)
								{
									Main.wofT = num440 * 16;
								}
							}
							float num443 = (float)((Main.wofB + Main.wofT) / 2 - this.height / 2);
							if (this.position.Y > num443 + 1f)
							{
								this.velocity.Y = -1f;
							}
							else if (this.position.Y < num443 - 1f)
							{
								this.velocity.Y = 1f;
							}
							this.velocity.Y = 0f;
							this.position.Y = num443;
							float num444 = 1.5f;
							if ((double)this.life < (double)this.lifeMax * 0.75)
							{
								num444 += 0.25f;
							}
							if ((double)this.life < (double)this.lifeMax * 0.5)
							{
								num444 += 0.4f;
							}
							if ((double)this.life < (double)this.lifeMax * 0.25)
							{
								num444 += 0.5f;
							}
							if ((double)this.life < (double)this.lifeMax * 0.1)
							{
								num444 += 0.6f;
							}
							if (this.velocity.X == 0f)
							{
								this.TargetClosest(true);
								this.velocity.X = (float)this.direction;
							}
							if (this.velocity.X < 0f)
							{
								this.velocity.X = -num444;
								this.direction = -1;
							}
							else
							{
								this.velocity.X = num444;
								this.direction = 1;
							}
							this.spriteDirection = this.direction;
							Vector2 vector43 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num445 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector43.X;
							float num446 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector43.Y;
							float num447 = (float)Math.Sqrt((double)(num445 * num445 + num446 * num446));
							num445 *= num447;
							num446 *= num447;
							if (this.direction > 0)
							{
								if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) > this.position.X + (float)(this.width / 2))
								{
									this.rotation = (float)Math.Atan2((double)(-(double)num446), (double)(-(double)num445)) + 3.14f;
								}
								else
								{
									this.rotation = 0f;
								}
							}
							else if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) < this.position.X + (float)(this.width / 2))
							{
								this.rotation = (float)Math.Atan2((double)num446, (double)num445) + 3.14f;
							}
							else
							{
								this.rotation = 0f;
							}
							if (this.localAI[0] == 1f && Main.netMode != 1)
							{
								this.localAI[0] = 2f;
								num443 = (float)((Main.wofB + Main.wofT) / 2);
								num443 = (num443 + (float)Main.wofT) / 2f;
								int num448 = NPC.NewNPC((int)this.position.X, (int)num443, 114, this.whoAmI);
								Main.npc[num448].ai[0] = 1f;
								num443 = (float)((Main.wofB + Main.wofT) / 2);
								num443 = (num443 + (float)Main.wofB) / 2f;
								num448 = NPC.NewNPC((int)this.position.X, (int)num443, 114, this.whoAmI);
								Main.npc[num448].ai[0] = -1f;
								num443 = (float)((Main.wofB + Main.wofT) / 2);
								num443 = (num443 + (float)Main.wofB) / 2f;
								for (int num449 = 0; num449 < 11; num449++)
								{
									num448 = NPC.NewNPC((int)this.position.X, (int)num443, 115, this.whoAmI);
									Main.npc[num448].ai[0] = (float)num449 * 0.1f - 0.05f;
								}
								return;
							}
						}
						else if (this.aiStyle == 28)
						{
							if (Main.wof < 0)
							{
								this.active = false;
								return;
							}
							this.realLife = Main.wof;
							if (Main.npc[Main.wof].life > 0)
							{
								this.life = Main.npc[Main.wof].life;
							}
							this.TargetClosest(true);
							this.position.X = Main.npc[Main.wof].position.X;
							this.direction = Main.npc[Main.wof].direction;
							this.spriteDirection = this.direction;
							float num450 = (float)((Main.wofB + Main.wofT) / 2);
							if (this.ai[0] > 0f)
							{
								num450 = (num450 + (float)Main.wofT) / 2f;
							}
							else
							{
								num450 = (num450 + (float)Main.wofB) / 2f;
							}
							num450 -= (float)(this.height / 2);
							if (this.position.Y > num450 + 1f)
							{
								this.velocity.Y = -1f;
							}
							else if (this.position.Y < num450 - 1f)
							{
								this.velocity.Y = 1f;
							}
							else
							{
								this.velocity.Y = 0f;
								this.position.Y = num450;
							}
							if (this.velocity.Y > 5f)
							{
								this.velocity.Y = 5f;
							}
							if (this.velocity.Y < -5f)
							{
								this.velocity.Y = -5f;
							}
							Vector2 vector44 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num451 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector44.X;
							float num452 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector44.Y;
							float num453 = (float)Math.Sqrt((double)(num451 * num451 + num452 * num452));
							num451 *= num453;
							num452 *= num453;
							bool flag41 = true;
							if (this.direction > 0)
							{
								if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) > this.position.X + (float)(this.width / 2))
								{
									this.rotation = (float)Math.Atan2((double)(-(double)num452), (double)(-(double)num451)) + 3.14f;
								}
								else
								{
									this.rotation = 0f;
									flag41 = false;
								}
							}
							else if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) < this.position.X + (float)(this.width / 2))
							{
								this.rotation = (float)Math.Atan2((double)num452, (double)num451) + 3.14f;
							}
							else
							{
								this.rotation = 0f;
								flag41 = false;
							}
							if (Main.netMode != 1)
							{
								int num454 = 4;
								this.localAI[1] += 1f;
								if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.75)
								{
									this.localAI[1] += 1f;
									num454++;
								}
								if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.5)
								{
									this.localAI[1] += 1f;
									num454++;
								}
								if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.25)
								{
									this.localAI[1] += 1f;
									num454 += 2;
								}
								if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.1)
								{
									this.localAI[1] += 2f;
									num454 += 3;
								}
								if (this.localAI[2] == 0f)
								{
									if (this.localAI[1] > 600f)
									{
										this.localAI[2] = 1f;
										this.localAI[1] = 0f;
										return;
									}
								}
								else if (this.localAI[1] > 45f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									this.localAI[1] = 0f;
									this.localAI[2] += 1f;
									if (this.localAI[2] >= (float)num454)
									{
										this.localAI[2] = 0f;
									}
									if (flag41)
									{
										float num455 = 9f;
										int num456 = 11;
										int num457 = 83;
										if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.5)
										{
											num456++;
											num455 += 1f;
										}
										if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.25)
										{
											num456++;
											num455 += 1f;
										}
										if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.1)
										{
											num456 += 2;
											num455 += 2f;
										}
										vector44 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										num451 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector44.X;
										num452 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector44.Y;
										num453 = (float)Math.Sqrt((double)(num451 * num451 + num452 * num452));
										num453 = num455 / num453;
										num451 *= num453;
										num452 *= num453;
										vector44.X += num451;
										vector44.Y += num452;
										Projectile.NewProjectile(vector44.X, vector44.Y, num451, num452, num457, num456, 0f, Main.myPlayer, 0f, 0f);
										return;
									}
								}
							}
						}
						else if (this.aiStyle == 29)
						{
							if (this.justHit)
							{
								this.ai[1] = 10f;
							}
							if (Main.wof < 0)
							{
								this.active = false;
								return;
							}
							this.TargetClosest(true);
							float num458 = 0.1f;
							float num459 = 300f;
							if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.25)
							{
								this.damage = 75;
								this.defense = 40;
								num459 = 900f;
							}
							else if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.5)
							{
								this.damage = 60;
								this.defense = 30;
								num459 = 700f;
							}
							else if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.75)
							{
								this.damage = 45;
								this.defense = 20;
								num459 = 500f;
							}
							float num460 = Main.npc[Main.wof].position.X + (float)(Main.npc[Main.wof].width / 2);
							float num461 = Main.npc[Main.wof].position.Y;
							float num462 = (float)(Main.wofB - Main.wofT);
							num461 = (float)Main.wofT + num462 * this.ai[0];
							this.ai[2] += 1f;
							if (this.ai[2] > 100f)
							{
								num459 = (float)((int)(num459 * 1.3f));
								if (this.ai[2] > 200f)
								{
									this.ai[2] = 0f;
								}
							}
							Vector2 vector45 = new Vector2(num460, num461);
							float num463 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - (float)(this.width / 2) - vector45.X;
							float num464 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - (float)(this.height / 2) - vector45.Y;
							float num465 = (float)Math.Sqrt((double)(num463 * num463 + num464 * num464));
							if (this.ai[1] == 0f)
							{
								if (num465 > num459)
								{
									num465 = num459 / num465;
									num463 *= num465;
									num464 *= num465;
								}
								if (this.position.X < num460 + num463)
								{
									this.velocity.X = this.velocity.X + num458;
									if (this.velocity.X < 0f && num463 > 0f)
									{
										this.velocity.X = this.velocity.X + num458 * 2.5f;
									}
								}
								else if (this.position.X > num460 + num463)
								{
									this.velocity.X = this.velocity.X - num458;
									if (this.velocity.X > 0f && num463 < 0f)
									{
										this.velocity.X = this.velocity.X - num458 * 2.5f;
									}
								}
								if (this.position.Y < num461 + num464)
								{
									this.velocity.Y = this.velocity.Y + num458;
									if (this.velocity.Y < 0f && num464 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num458 * 2.5f;
									}
								}
								else if (this.position.Y > num461 + num464)
								{
									this.velocity.Y = this.velocity.Y - num458;
									if (this.velocity.Y > 0f && num464 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num458 * 2.5f;
									}
								}
								if (this.velocity.X > 4f)
								{
									this.velocity.X = 4f;
								}
								if (this.velocity.X < -4f)
								{
									this.velocity.X = -4f;
								}
								if (this.velocity.Y > 4f)
								{
									this.velocity.Y = 4f;
								}
								if (this.velocity.Y < -4f)
								{
									this.velocity.Y = -4f;
								}
							}
							else if (this.ai[1] > 0f)
							{
								this.ai[1] -= 1f;
							}
							else
							{
								this.ai[1] = 0f;
							}
							if (num463 > 0f)
							{
								this.spriteDirection = 1;
								this.rotation = (float)Math.Atan2((double)num464, (double)num463);
							}
							if (num463 < 0f)
							{
								this.spriteDirection = -1;
								this.rotation = (float)Math.Atan2((double)num464, (double)num463) + 3.14f;
							}
							return;
						}
						else if (this.aiStyle == 30)
						{
							if (this.target < 0 || this.target == 255 || Main.player[this.target].dead || !Main.player[this.target].active)
							{
								this.TargetClosest(true);
							}
							bool dead2 = Main.player[this.target].dead;
							float num466 = this.position.X + (float)(this.width / 2) - Main.player[this.target].position.X - (float)(Main.player[this.target].width / 2);
							float num467 = this.position.Y + (float)this.height - 59f - Main.player[this.target].position.Y - (float)(Main.player[this.target].height / 2);
							float num468 = (float)Math.Atan2((double)num467, (double)num466) + 1.57f;
							if (num468 < 0f)
							{
								num468 += 6.283f;
							}
							else if ((double)num468 > 6.283)
							{
								num468 -= 6.283f;
							}
							float num469 = 0.1f;
							if (this.rotation < num468)
							{
								if ((double)(num468 - this.rotation) > 3.1415)
								{
									this.rotation -= num469;
								}
								else
								{
									this.rotation += num469;
								}
							}
							else if (this.rotation > num468)
							{
								if ((double)(this.rotation - num468) > 3.1415)
								{
									this.rotation += num469;
								}
								else
								{
									this.rotation -= num469;
								}
							}
							if (this.rotation > num468 - num469 && this.rotation < num468 + num469)
							{
								this.rotation = num468;
							}
							if (this.rotation < 0f)
							{
								this.rotation += 6.283f;
							}
							else if ((double)this.rotation > 6.283)
							{
								this.rotation -= 6.283f;
							}
							if (this.rotation > num468 - num469 && this.rotation < num468 + num469)
							{
								this.rotation = num468;
							}
							if (Main.rand.Next(5) == 0)
							{
								int num470 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((float)this.height * 0.5f), 5, this.velocity.X, 2f, 0, default(Color), 1f);
								Dust expr_1D697_cp_0 = Main.dust[num470];
								expr_1D697_cp_0.velocity.X = expr_1D697_cp_0.velocity.X * 0.5f;
								Dust expr_1D6B7_cp_0 = Main.dust[num470];
								expr_1D6B7_cp_0.velocity.Y = expr_1D6B7_cp_0.velocity.Y * 0.1f;
							}
							if (Main.dayTime || dead2)
							{
								this.velocity.Y = this.velocity.Y - 0.04f;
								if (this.timeLeft > 10)
								{
									this.timeLeft = 10;
									return;
								}
							}
							else if (this.ai[0] == 0f)
							{
								if (this.ai[1] == 0f)
								{
									float num471 = 7f;
									float num472 = 0.1f;
									int num473 = 1;
									if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)Main.player[this.target].width)
									{
										num473 = -1;
									}
									Vector2 vector46 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num474 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + (float)(num473 * 300) - vector46.X;
									float num475 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 300f - vector46.Y;
									float num476 = (float)Math.Sqrt((double)(num474 * num474 + num475 * num475));
									float num477 = num476;
									num476 = num471 / num476;
									num474 *= num476;
									num475 *= num476;
									if (this.velocity.X < num474)
									{
										this.velocity.X = this.velocity.X + num472;
										if (this.velocity.X < 0f && num474 > 0f)
										{
											this.velocity.X = this.velocity.X + num472;
										}
									}
									else if (this.velocity.X > num474)
									{
										this.velocity.X = this.velocity.X - num472;
										if (this.velocity.X > 0f && num474 < 0f)
										{
											this.velocity.X = this.velocity.X - num472;
										}
									}
									if (this.velocity.Y < num475)
									{
										this.velocity.Y = this.velocity.Y + num472;
										if (this.velocity.Y < 0f && num475 > 0f)
										{
											this.velocity.Y = this.velocity.Y + num472;
										}
									}
									else if (this.velocity.Y > num475)
									{
										this.velocity.Y = this.velocity.Y - num472;
										if (this.velocity.Y > 0f && num475 < 0f)
										{
											this.velocity.Y = this.velocity.Y - num472;
										}
									}
									this.ai[2] += 1f;
									if (this.ai[2] >= 600f)
									{
										this.ai[1] = 1f;
										this.ai[2] = 0f;
										this.ai[3] = 0f;
										this.target = 255;
										this.netUpdate = true;
									}
									else if (this.position.Y + (float)this.height < Main.player[this.target].position.Y && num477 < 400f)
									{
										if (!Main.player[this.target].dead)
										{
											this.ai[3] += 1f;
										}
										if (this.ai[3] >= 60f)
										{
											this.ai[3] = 0f;
											vector46 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											num474 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector46.X;
											num475 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector46.Y;
											if (Main.netMode != 1)
											{
												float num478 = 9f;
												int num479 = 20;
												int num480 = 83;
												num476 = (float)Math.Sqrt((double)(num474 * num474 + num475 * num475));
												num476 = num478 / num476;
												num474 *= num476;
												num475 *= num476;
												num474 += (float)Main.rand.Next(-40, 41) * 0.08f;
												num475 += (float)Main.rand.Next(-40, 41) * 0.08f;
												vector46.X += num474 * 15f;
												vector46.Y += num475 * 15f;
												Projectile.NewProjectile(vector46.X, vector46.Y, num474, num475, num480, num479, 0f, Main.myPlayer, 0f, 0f);
											}
										}
									}
								}
								else if (this.ai[1] == 1f)
								{
									this.rotation = num468;
									float num481 = 12f;
									Vector2 vector47 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num482 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector47.X;
									float num483 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector47.Y;
									float num484 = (float)Math.Sqrt((double)(num482 * num482 + num483 * num483));
									num484 = num481 / num484;
									this.velocity.X = num482 * num484;
									this.velocity.Y = num483 * num484;
									this.ai[1] = 2f;
								}
								else if (this.ai[1] == 2f)
								{
									this.ai[2] += 1f;
									if (this.ai[2] >= 25f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
										this.velocity.Y = this.velocity.Y * 0.96f;
										if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
										{
											this.velocity.X = 0f;
										}
										if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
										{
											this.velocity.Y = 0f;
										}
									}
									else
									{
										this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
									}
									if (this.ai[2] >= 70f)
									{
										this.ai[3] += 1f;
										this.ai[2] = 0f;
										this.target = 255;
										this.rotation = num468;
										if (this.ai[3] >= 4f)
										{
											this.ai[1] = 0f;
											this.ai[3] = 0f;
										}
										else
										{
											this.ai[1] = 1f;
										}
									}
								}
								if ((double)this.life < (double)this.lifeMax * 0.5)
								{
									this.ai[0] = 1f;
									this.ai[1] = 0f;
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									this.netUpdate = true;
									return;
								}
							}
							else if (this.ai[0] == 1f || this.ai[0] == 2f)
							{
								if (this.ai[0] == 1f)
								{
									this.ai[2] += 0.005f;
									if ((double)this.ai[2] > 0.5)
									{
										this.ai[2] = 0.5f;
									}
								}
								else
								{
									this.ai[2] -= 0.005f;
									if (this.ai[2] < 0f)
									{
										this.ai[2] = 0f;
									}
								}
								this.rotation += this.ai[2];
								this.ai[1] += 1f;
								if (this.ai[1] == 100f)
								{
									this.ai[0] += 1f;
									this.ai[1] = 0f;
									if (this.ai[0] == 3f)
									{
										this.ai[2] = 0f;
									}
									else
									{
										Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
										for (int num485 = 0; num485 < 2; num485++)
										{
											Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 143, 1f);
											Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 7, 1f);
											Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 6, 1f);
										}
										for (int num486 = 0; num486 < 20; num486++)
										{
											Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, default(Color), 1f);
										}
										Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
									}
								}
								Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, default(Color), 1f);
								this.velocity.X = this.velocity.X * 0.98f;
								this.velocity.Y = this.velocity.Y * 0.98f;
								if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
								{
									this.velocity.X = 0f;
								}
								if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
								{
									this.velocity.Y = 0f;
									return;
								}
							}
							else
							{
								this.damage = (int)((double)this.defDamage * 1.5);
								this.defense = this.defDefense + 15;
								this.soundHit = 4;
								if (this.ai[1] == 0f)
								{
									float num487 = 8f;
									float num488 = 0.15f;
									Vector2 vector48 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num489 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector48.X;
									float num490 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 300f - vector48.Y;
									float num491 = (float)Math.Sqrt((double)(num489 * num489 + num490 * num490));
									num491 = num487 / num491;
									num489 *= num491;
									num490 *= num491;
									if (this.velocity.X < num489)
									{
										this.velocity.X = this.velocity.X + num488;
										if (this.velocity.X < 0f && num489 > 0f)
										{
											this.velocity.X = this.velocity.X + num488;
										}
									}
									else if (this.velocity.X > num489)
									{
										this.velocity.X = this.velocity.X - num488;
										if (this.velocity.X > 0f && num489 < 0f)
										{
											this.velocity.X = this.velocity.X - num488;
										}
									}
									if (this.velocity.Y < num490)
									{
										this.velocity.Y = this.velocity.Y + num488;
										if (this.velocity.Y < 0f && num490 > 0f)
										{
											this.velocity.Y = this.velocity.Y + num488;
										}
									}
									else if (this.velocity.Y > num490)
									{
										this.velocity.Y = this.velocity.Y - num488;
										if (this.velocity.Y > 0f && num490 < 0f)
										{
											this.velocity.Y = this.velocity.Y - num488;
										}
									}
									this.ai[2] += 1f;
									if (this.ai[2] >= 300f)
									{
										this.ai[1] = 1f;
										this.ai[2] = 0f;
										this.ai[3] = 0f;
										this.TargetClosest(true);
										this.netUpdate = true;
									}
									vector48 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									num489 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector48.X;
									num490 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector48.Y;
									this.rotation = (float)Math.Atan2((double)num490, (double)num489) - 1.57f;
									if (Main.netMode != 1)
									{
										this.localAI[1] += 1f;
										if ((double)this.life < (double)this.lifeMax * 0.75)
										{
											this.localAI[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											this.localAI[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											this.localAI[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.1)
										{
											this.localAI[1] += 2f;
										}
										if (this.localAI[1] > 140f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
										{
											this.localAI[1] = 0f;
											float num492 = 9f;
											int num493 = 25;
											int num494 = 100;
											num491 = (float)Math.Sqrt((double)(num489 * num489 + num490 * num490));
											num491 = num492 / num491;
											num489 *= num491;
											num490 *= num491;
											vector48.X += num489 * 15f;
											vector48.Y += num490 * 15f;
											Projectile.NewProjectile(vector48.X, vector48.Y, num489, num490, num494, num493, 0f, Main.myPlayer, 0f, 0f);
											return;
										}
									}
								}
								else
								{
									int num495 = 1;
									if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)Main.player[this.target].width)
									{
										num495 = -1;
									}
									float num496 = 8f;
									float num497 = 0.2f;
									Vector2 vector49 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num498 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + (float)(num495 * 340) - vector49.X;
									float num499 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector49.Y;
									float num500 = (float)Math.Sqrt((double)(num498 * num498 + num499 * num499));
									num500 = num496 / num500;
									num498 *= num500;
									num499 *= num500;
									if (this.velocity.X < num498)
									{
										this.velocity.X = this.velocity.X + num497;
										if (this.velocity.X < 0f && num498 > 0f)
										{
											this.velocity.X = this.velocity.X + num497;
										}
									}
									else if (this.velocity.X > num498)
									{
										this.velocity.X = this.velocity.X - num497;
										if (this.velocity.X > 0f && num498 < 0f)
										{
											this.velocity.X = this.velocity.X - num497;
										}
									}
									if (this.velocity.Y < num499)
									{
										this.velocity.Y = this.velocity.Y + num497;
										if (this.velocity.Y < 0f && num499 > 0f)
										{
											this.velocity.Y = this.velocity.Y + num497;
										}
									}
									else if (this.velocity.Y > num499)
									{
										this.velocity.Y = this.velocity.Y - num497;
										if (this.velocity.Y > 0f && num499 < 0f)
										{
											this.velocity.Y = this.velocity.Y - num497;
										}
									}
									vector49 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									num498 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector49.X;
									num499 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector49.Y;
									this.rotation = (float)Math.Atan2((double)num499, (double)num498) - 1.57f;
									if (Main.netMode != 1)
									{
										this.localAI[1] += 1f;
										if ((double)this.life < (double)this.lifeMax * 0.75)
										{
											this.localAI[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											this.localAI[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											this.localAI[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.1)
										{
											this.localAI[1] += 2f;
										}
										if (this.localAI[1] > 45f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
										{
											this.localAI[1] = 0f;
											float num501 = 9f;
											int num502 = 20;
											int num503 = 100;
											num500 = (float)Math.Sqrt((double)(num498 * num498 + num499 * num499));
											num500 = num501 / num500;
											num498 *= num500;
											num499 *= num500;
											vector49.X += num498 * 15f;
											vector49.Y += num499 * 15f;
											Projectile.NewProjectile(vector49.X, vector49.Y, num498, num499, num503, num502, 0f, Main.myPlayer, 0f, 0f);
										}
									}
									this.ai[2] += 1f;
									if (this.ai[2] >= 200f)
									{
										this.ai[1] = 0f;
										this.ai[2] = 0f;
										this.ai[3] = 0f;
										this.TargetClosest(true);
										this.netUpdate = true;
										return;
									}
								}
							}
						}
						else if (this.aiStyle == 31)
						{
							if (this.target < 0 || this.target == 255 || Main.player[this.target].dead || !Main.player[this.target].active)
							{
								this.TargetClosest(true);
							}
							bool dead3 = Main.player[this.target].dead;
							float num504 = this.position.X + (float)(this.width / 2) - Main.player[this.target].position.X - (float)(Main.player[this.target].width / 2);
							float num505 = this.position.Y + (float)this.height - 59f - Main.player[this.target].position.Y - (float)(Main.player[this.target].height / 2);
							float num506 = (float)Math.Atan2((double)num505, (double)num504) + 1.57f;
							if (num506 < 0f)
							{
								num506 += 6.283f;
							}
							else if ((double)num506 > 6.283)
							{
								num506 -= 6.283f;
							}
							float num507 = 0.15f;
							if (this.rotation < num506)
							{
								if ((double)(num506 - this.rotation) > 3.1415)
								{
									this.rotation -= num507;
								}
								else
								{
									this.rotation += num507;
								}
							}
							else if (this.rotation > num506)
							{
								if ((double)(this.rotation - num506) > 3.1415)
								{
									this.rotation += num507;
								}
								else
								{
									this.rotation -= num507;
								}
							}
							if (this.rotation > num506 - num507 && this.rotation < num506 + num507)
							{
								this.rotation = num506;
							}
							if (this.rotation < 0f)
							{
								this.rotation += 6.283f;
							}
							else if ((double)this.rotation > 6.283)
							{
								this.rotation -= 6.283f;
							}
							if (this.rotation > num506 - num507 && this.rotation < num506 + num507)
							{
								this.rotation = num506;
							}
							if (Main.rand.Next(5) == 0)
							{
								int num508 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((float)this.height * 0.5f), 5, this.velocity.X, 2f, 0, default(Color), 1f);
								Dust expr_1F306_cp_0 = Main.dust[num508];
								expr_1F306_cp_0.velocity.X = expr_1F306_cp_0.velocity.X * 0.5f;
								Dust expr_1F326_cp_0 = Main.dust[num508];
								expr_1F326_cp_0.velocity.Y = expr_1F326_cp_0.velocity.Y * 0.1f;
							}
							if (Main.dayTime || dead3)
							{
								this.velocity.Y = this.velocity.Y - 0.04f;
								if (this.timeLeft > 10)
								{
									this.timeLeft = 10;
									return;
								}
							}
							else if (this.ai[0] == 0f)
							{
								if (this.ai[1] == 0f)
								{
									this.TargetClosest(true);
									float num509 = 12f;
									float num510 = 0.4f;
									int num511 = 1;
									if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)Main.player[this.target].width)
									{
										num511 = -1;
									}
									Vector2 vector50 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num512 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + (float)(num511 * 400) - vector50.X;
									float num513 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector50.Y;
									float num514 = (float)Math.Sqrt((double)(num512 * num512 + num513 * num513));
									num514 = num509 / num514;
									num512 *= num514;
									num513 *= num514;
									if (this.velocity.X < num512)
									{
										this.velocity.X = this.velocity.X + num510;
										if (this.velocity.X < 0f && num512 > 0f)
										{
											this.velocity.X = this.velocity.X + num510;
										}
									}
									else if (this.velocity.X > num512)
									{
										this.velocity.X = this.velocity.X - num510;
										if (this.velocity.X > 0f && num512 < 0f)
										{
											this.velocity.X = this.velocity.X - num510;
										}
									}
									if (this.velocity.Y < num513)
									{
										this.velocity.Y = this.velocity.Y + num510;
										if (this.velocity.Y < 0f && num513 > 0f)
										{
											this.velocity.Y = this.velocity.Y + num510;
										}
									}
									else if (this.velocity.Y > num513)
									{
										this.velocity.Y = this.velocity.Y - num510;
										if (this.velocity.Y > 0f && num513 < 0f)
										{
											this.velocity.Y = this.velocity.Y - num510;
										}
									}
									this.ai[2] += 1f;
									if (this.ai[2] >= 600f)
									{
										this.ai[1] = 1f;
										this.ai[2] = 0f;
										this.ai[3] = 0f;
										this.target = 255;
										this.netUpdate = true;
									}
									else
									{
										if (!Main.player[this.target].dead)
										{
											this.ai[3] += 1f;
										}
										if (this.ai[3] >= 60f)
										{
											this.ai[3] = 0f;
											vector50 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											num512 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector50.X;
											num513 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector50.Y;
											if (Main.netMode != 1)
											{
												float num515 = 12f;
												int num516 = 25;
												int num517 = 96;
												num514 = (float)Math.Sqrt((double)(num512 * num512 + num513 * num513));
												num514 = num515 / num514;
												num512 *= num514;
												num513 *= num514;
												num512 += (float)Main.rand.Next(-40, 41) * 0.05f;
												num513 += (float)Main.rand.Next(-40, 41) * 0.05f;
												vector50.X += num512 * 4f;
												vector50.Y += num513 * 4f;
												Projectile.NewProjectile(vector50.X, vector50.Y, num512, num513, num517, num516, 0f, Main.myPlayer, 0f, 0f);
											}
										}
									}
								}
								else if (this.ai[1] == 1f)
								{
									this.rotation = num506;
									float num518 = 13f;
									Vector2 vector51 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num519 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector51.X;
									float num520 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector51.Y;
									float num521 = (float)Math.Sqrt((double)(num519 * num519 + num520 * num520));
									num521 = num518 / num521;
									this.velocity.X = num519 * num521;
									this.velocity.Y = num520 * num521;
									this.ai[1] = 2f;
								}
								else if (this.ai[1] == 2f)
								{
									this.ai[2] += 1f;
									if (this.ai[2] >= 8f)
									{
										this.velocity.X = this.velocity.X * 0.9f;
										this.velocity.Y = this.velocity.Y * 0.9f;
										if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
										{
											this.velocity.X = 0f;
										}
										if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
										{
											this.velocity.Y = 0f;
										}
									}
									else
									{
										this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
									}
									if (this.ai[2] >= 42f)
									{
										this.ai[3] += 1f;
										this.ai[2] = 0f;
										this.target = 255;
										this.rotation = num506;
										if (this.ai[3] >= 10f)
										{
											this.ai[1] = 0f;
											this.ai[3] = 0f;
										}
										else
										{
											this.ai[1] = 1f;
										}
									}
								}
								if ((double)this.life < (double)this.lifeMax * 0.5)
								{
									this.ai[0] = 1f;
									this.ai[1] = 0f;
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									this.netUpdate = true;
									return;
								}
							}
							else if (this.ai[0] == 1f || this.ai[0] == 2f)
							{
								if (this.ai[0] == 1f)
								{
									this.ai[2] += 0.005f;
									if ((double)this.ai[2] > 0.5)
									{
										this.ai[2] = 0.5f;
									}
								}
								else
								{
									this.ai[2] -= 0.005f;
									if (this.ai[2] < 0f)
									{
										this.ai[2] = 0f;
									}
								}
								this.rotation += this.ai[2];
								this.ai[1] += 1f;
								if (this.ai[1] == 100f)
								{
									this.ai[0] += 1f;
									this.ai[1] = 0f;
									if (this.ai[0] == 3f)
									{
										this.ai[2] = 0f;
									}
									else
									{
										Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
										for (int num522 = 0; num522 < 2; num522++)
										{
											Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 144, 1f);
											Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 7, 1f);
											Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 6, 1f);
										}
										for (int num523 = 0; num523 < 20; num523++)
										{
											Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, default(Color), 1f);
										}
										Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
									}
								}
								Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, default(Color), 1f);
								this.velocity.X = this.velocity.X * 0.98f;
								this.velocity.Y = this.velocity.Y * 0.98f;
								if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
								{
									this.velocity.X = 0f;
								}
								if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
								{
									this.velocity.Y = 0f;
									return;
								}
							}
							else
							{
								this.soundHit = 4;
								this.damage = (int)((double)this.defDamage * 1.5);
								this.defense = this.defDefense + 25;
								if (this.ai[1] == 0f)
								{
									float num524 = 4f;
									float num525 = 0.1f;
									int num526 = 1;
									if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)Main.player[this.target].width)
									{
										num526 = -1;
									}
									Vector2 vector52 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num527 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + (float)(num526 * 180) - vector52.X;
									float num528 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector52.Y;
									float num529 = (float)Math.Sqrt((double)(num527 * num527 + num528 * num528));
									num529 = num524 / num529;
									num527 *= num529;
									num528 *= num529;
									if (this.velocity.X < num527)
									{
										this.velocity.X = this.velocity.X + num525;
										if (this.velocity.X < 0f && num527 > 0f)
										{
											this.velocity.X = this.velocity.X + num525;
										}
									}
									else if (this.velocity.X > num527)
									{
										this.velocity.X = this.velocity.X - num525;
										if (this.velocity.X > 0f && num527 < 0f)
										{
											this.velocity.X = this.velocity.X - num525;
										}
									}
									if (this.velocity.Y < num528)
									{
										this.velocity.Y = this.velocity.Y + num525;
										if (this.velocity.Y < 0f && num528 > 0f)
										{
											this.velocity.Y = this.velocity.Y + num525;
										}
									}
									else if (this.velocity.Y > num528)
									{
										this.velocity.Y = this.velocity.Y - num525;
										if (this.velocity.Y > 0f && num528 < 0f)
										{
											this.velocity.Y = this.velocity.Y - num525;
										}
									}
									this.ai[2] += 1f;
									if (this.ai[2] >= 400f)
									{
										this.ai[1] = 1f;
										this.ai[2] = 0f;
										this.ai[3] = 0f;
										this.target = 255;
										this.netUpdate = true;
									}
									if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
									{
										this.localAI[2] += 1f;
										if (this.localAI[2] > 22f)
										{
											this.localAI[2] = 0f;
											Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 34);
										}
										if (Main.netMode != 1)
										{
											this.localAI[1] += 1f;
											if ((double)this.life < (double)this.lifeMax * 0.75)
											{
												this.localAI[1] += 1f;
											}
											if ((double)this.life < (double)this.lifeMax * 0.5)
											{
												this.localAI[1] += 1f;
											}
											if ((double)this.life < (double)this.lifeMax * 0.25)
											{
												this.localAI[1] += 1f;
											}
											if ((double)this.life < (double)this.lifeMax * 0.1)
											{
												this.localAI[1] += 2f;
											}
											if (this.localAI[1] > 8f)
											{
												this.localAI[1] = 0f;
												float num530 = 6f;
												int num531 = 30;
												int num532 = 101;
												vector52 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
												num527 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector52.X;
												num528 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector52.Y;
												num529 = (float)Math.Sqrt((double)(num527 * num527 + num528 * num528));
												num529 = num530 / num529;
												num527 *= num529;
												num528 *= num529;
												num528 += (float)Main.rand.Next(-40, 41) * 0.01f;
												num527 += (float)Main.rand.Next(-40, 41) * 0.01f;
												num528 += this.velocity.Y * 0.5f;
												num527 += this.velocity.X * 0.5f;
												vector52.X -= num527 * 1f;
												vector52.Y -= num528 * 1f;
												Projectile.NewProjectile(vector52.X, vector52.Y, num527, num528, num532, num531, 0f, Main.myPlayer, 0f, 0f);
												return;
											}
										}
									}
								}
								else
								{
									if (this.ai[1] == 1f)
									{
										Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
										this.rotation = num506;
										float num533 = 14f;
										Vector2 vector53 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num534 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector53.X;
										float num535 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector53.Y;
										float num536 = (float)Math.Sqrt((double)(num534 * num534 + num535 * num535));
										num536 = num533 / num536;
										this.velocity.X = num534 * num536;
										this.velocity.Y = num535 * num536;
										this.ai[1] = 2f;
										return;
									}
									if (this.ai[1] == 2f)
									{
										this.ai[2] += 1f;
										if (this.ai[2] >= 50f)
										{
											this.velocity.X = this.velocity.X * 0.93f;
											this.velocity.Y = this.velocity.Y * 0.93f;
											if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
											{
												this.velocity.X = 0f;
											}
											if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
											{
												this.velocity.Y = 0f;
											}
										}
										else
										{
											this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
										}
										if (this.ai[2] >= 80f)
										{
											this.ai[3] += 1f;
											this.ai[2] = 0f;
											this.target = 255;
											this.rotation = num506;
											if (this.ai[3] >= 6f)
											{
												this.ai[1] = 0f;
												this.ai[3] = 0f;
												return;
											}
											this.ai[1] = 1f;
											return;
										}
									}
								}
							}
						}
						else if (this.aiStyle == 32)
						{
							this.damage = this.defDamage;
							this.defense = this.defDefense;
							if (this.ai[0] == 0f && Main.netMode != 1)
							{
								this.TargetClosest(true);
								this.ai[0] = 1f;
								if (this.type != 68)
								{
									int num537 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 128, this.whoAmI);
									Main.npc[num537].ai[0] = -1f;
									Main.npc[num537].ai[1] = (float)this.whoAmI;
									Main.npc[num537].target = this.target;
									Main.npc[num537].netUpdate = true;
									num537 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 129, this.whoAmI);
									Main.npc[num537].ai[0] = 1f;
									Main.npc[num537].ai[1] = (float)this.whoAmI;
									Main.npc[num537].target = this.target;
									Main.npc[num537].netUpdate = true;
									num537 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 130, this.whoAmI);
									Main.npc[num537].ai[0] = -1f;
									Main.npc[num537].ai[1] = (float)this.whoAmI;
									Main.npc[num537].target = this.target;
									Main.npc[num537].ai[3] = 150f;
									Main.npc[num537].netUpdate = true;
									num537 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 131, this.whoAmI);
									Main.npc[num537].ai[0] = 1f;
									Main.npc[num537].ai[1] = (float)this.whoAmI;
									Main.npc[num537].target = this.target;
									Main.npc[num537].netUpdate = true;
									Main.npc[num537].ai[3] = 150f;
								}
							}
							if (this.type == 68 && this.ai[1] != 3f && this.ai[1] != 2f)
							{
								Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
								this.ai[1] = 2f;
							}
							if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 6000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 6000f)
							{
								this.TargetClosest(true);
								if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 6000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 6000f)
								{
									this.ai[1] = 3f;
								}
							}
							if (Main.dayTime && this.ai[1] != 3f && this.ai[1] != 2f)
							{
								this.ai[1] = 2f;
								Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
							}
							if (this.ai[1] == 0f)
							{
								this.ai[2] += 1f;
								if (this.ai[2] >= 600f)
								{
									this.ai[2] = 0f;
									this.ai[1] = 1f;
									this.TargetClosest(true);
									this.netUpdate = true;
								}
								this.rotation = this.velocity.X / 15f;
								if (this.position.Y > Main.player[this.target].position.Y - 200f)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.98f;
									}
									this.velocity.Y = this.velocity.Y - 0.1f;
									if (this.velocity.Y > 2f)
									{
										this.velocity.Y = 2f;
									}
								}
								else if (this.position.Y < Main.player[this.target].position.Y - 500f)
								{
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.98f;
									}
									this.velocity.Y = this.velocity.Y + 0.1f;
									if (this.velocity.Y < -2f)
									{
										this.velocity.Y = -2f;
									}
								}
								if (this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + 100f)
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.98f;
									}
									this.velocity.X = this.velocity.X - 0.1f;
									if (this.velocity.X > 8f)
									{
										this.velocity.X = 8f;
									}
								}
								if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - 100f)
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.98f;
									}
									this.velocity.X = this.velocity.X + 0.1f;
									if (this.velocity.X < -8f)
									{
										this.velocity.X = -8f;
										return;
									}
								}
							}
							else
							{
								if (this.ai[1] == 1f)
								{
									this.defense *= 2;
									this.damage *= 2;
									this.ai[2] += 1f;
									if (this.ai[2] == 2f)
									{
										Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
									}
									if (this.ai[2] >= 400f)
									{
										this.ai[2] = 0f;
										this.ai[1] = 0f;
									}
									this.rotation += (float)this.direction * 0.3f;
									Vector2 vector54 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num538 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector54.X;
									float num539 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector54.Y;
									float num540 = (float)Math.Sqrt((double)(num538 * num538 + num539 * num539));
									num540 = 2f / num540;
									this.velocity.X = num538 * num540;
									this.velocity.Y = num539 * num540;
									return;
								}
								if (this.ai[1] == 2f)
								{
									this.damage = 9999;
									this.defense = 9999;
									this.rotation += (float)this.direction * 0.3f;
									Vector2 vector55 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num541 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector55.X;
									float num542 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector55.Y;
									float num543 = (float)Math.Sqrt((double)(num541 * num541 + num542 * num542));
									num543 = 8f / num543;
									this.velocity.X = num541 * num543;
									this.velocity.Y = num542 * num543;
									return;
								}
								if (this.ai[1] == 3f)
								{
									this.velocity.Y = this.velocity.Y + 0.1f;
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.95f;
									}
									this.velocity.X = this.velocity.X * 0.95f;
									if (this.timeLeft > 500)
									{
										this.timeLeft = 500;
										return;
									}
								}
							}
						}
						else if (this.aiStyle == 33)
						{
							Vector2 vector56 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num544 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector56.X;
							float num545 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector56.Y;
							float num546 = (float)Math.Sqrt((double)(num544 * num544 + num545 * num545));
							if (this.ai[2] != 99f)
							{
								if (num546 > 800f)
								{
									this.ai[2] = 99f;
								}
							}
							else if (num546 < 400f)
							{
								this.ai[2] = 0f;
							}
							this.spriteDirection = -(int)this.ai[0];
							if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 32)
							{
								this.ai[2] += 10f;
								if (this.ai[2] > 50f || Main.netMode != 2)
								{
									this.life = -1;
									this.HitEffect(0, 10.0);
									this.active = false;
								}
							}
							if (this.ai[2] == 99f)
							{
								if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y - 0.1f;
									if (this.velocity.Y > 8f)
									{
										this.velocity.Y = 8f;
									}
								}
								else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y)
								{
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y + 0.1f;
									if (this.velocity.Y < -8f)
									{
										this.velocity.Y = -8f;
									}
								}
								if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X - 0.5f;
									if (this.velocity.X > 12f)
									{
										this.velocity.X = 12f;
									}
								}
								if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X + 0.5f;
									if (this.velocity.X < -12f)
									{
										this.velocity.X = -12f;
										return;
									}
								}
							}
							else
							{
								if (this.ai[2] == 0f || this.ai[2] == 3f)
								{
									if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
									{
										this.timeLeft = 10;
									}
									if (Main.npc[(int)this.ai[1]].ai[1] != 0f)
									{
										this.TargetClosest(true);
										if (Main.player[this.target].dead)
										{
											this.velocity.Y = this.velocity.Y + 0.1f;
											if (this.velocity.Y > 16f)
											{
												this.velocity.Y = 16f;
											}
										}
										else
										{
											Vector2 vector57 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float num547 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector57.X;
											float num548 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector57.Y;
											float num549 = (float)Math.Sqrt((double)(num547 * num547 + num548 * num548));
											num549 = 7f / num549;
											num547 *= num549;
											num548 *= num549;
											this.rotation = (float)Math.Atan2((double)num548, (double)num547) - 1.57f;
											if (this.velocity.X > num547)
											{
												if (this.velocity.X > 0f)
												{
													this.velocity.X = this.velocity.X * 0.97f;
												}
												this.velocity.X = this.velocity.X - 0.05f;
											}
											if (this.velocity.X < num547)
											{
												if (this.velocity.X < 0f)
												{
													this.velocity.X = this.velocity.X * 0.97f;
												}
												this.velocity.X = this.velocity.X + 0.05f;
											}
											if (this.velocity.Y > num548)
											{
												if (this.velocity.Y > 0f)
												{
													this.velocity.Y = this.velocity.Y * 0.97f;
												}
												this.velocity.Y = this.velocity.Y - 0.05f;
											}
											if (this.velocity.Y < num548)
											{
												if (this.velocity.Y < 0f)
												{
													this.velocity.Y = this.velocity.Y * 0.97f;
												}
												this.velocity.Y = this.velocity.Y + 0.05f;
											}
										}
										this.ai[3] += 1f;
										if (this.ai[3] >= 600f)
										{
											this.ai[2] = 0f;
											this.ai[3] = 0f;
											this.netUpdate = true;
										}
									}
									else
									{
										this.ai[3] += 1f;
										if (this.ai[3] >= 300f)
										{
											this.ai[2] += 1f;
											this.ai[3] = 0f;
											this.netUpdate = true;
										}
										if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y + 320f)
										{
											if (this.velocity.Y > 0f)
											{
												this.velocity.Y = this.velocity.Y * 0.96f;
											}
											this.velocity.Y = this.velocity.Y - 0.04f;
											if (this.velocity.Y > 3f)
											{
												this.velocity.Y = 3f;
											}
										}
										else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y + 260f)
										{
											if (this.velocity.Y < 0f)
											{
												this.velocity.Y = this.velocity.Y * 0.96f;
											}
											this.velocity.Y = this.velocity.Y + 0.04f;
											if (this.velocity.Y < -3f)
											{
												this.velocity.Y = -3f;
											}
										}
										if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
										{
											if (this.velocity.X > 0f)
											{
												this.velocity.X = this.velocity.X * 0.96f;
											}
											this.velocity.X = this.velocity.X - 0.3f;
											if (this.velocity.X > 12f)
											{
												this.velocity.X = 12f;
											}
										}
										if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 250f)
										{
											if (this.velocity.X < 0f)
											{
												this.velocity.X = this.velocity.X * 0.96f;
											}
											this.velocity.X = this.velocity.X + 0.3f;
											if (this.velocity.X < -12f)
											{
												this.velocity.X = -12f;
											}
										}
									}
									Vector2 vector58 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num550 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector58.X;
									float num551 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector58.Y;
									Math.Sqrt((double)(num550 * num550 + num551 * num551));
									this.rotation = (float)Math.Atan2((double)num551, (double)num550) + 1.57f;
									return;
								}
								if (this.ai[2] == 1f)
								{
									Vector2 vector59 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num552 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector59.X;
									float num553 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector59.Y;
									float num554 = (float)Math.Sqrt((double)(num552 * num552 + num553 * num553));
									this.rotation = (float)Math.Atan2((double)num553, (double)num552) + 1.57f;
									this.velocity.X = this.velocity.X * 0.95f;
									this.velocity.Y = this.velocity.Y - 0.1f;
									if (this.velocity.Y < -8f)
									{
										this.velocity.Y = -8f;
									}
									if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 200f)
									{
										this.TargetClosest(true);
										this.ai[2] = 2f;
										vector59 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										num552 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector59.X;
										num553 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector59.Y;
										num554 = (float)Math.Sqrt((double)(num552 * num552 + num553 * num553));
										num554 = 22f / num554;
										this.velocity.X = num552 * num554;
										this.velocity.Y = num553 * num554;
										this.netUpdate = true;
										return;
									}
								}
								else if (this.ai[2] == 2f)
								{
									if (this.position.Y > Main.player[this.target].position.Y || this.velocity.Y < 0f)
									{
										this.ai[2] = 3f;
										return;
									}
								}
								else
								{
									if (this.ai[2] == 4f)
									{
										this.TargetClosest(true);
										Vector2 vector60 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num555 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector60.X;
										float num556 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector60.Y;
										float num557 = (float)Math.Sqrt((double)(num555 * num555 + num556 * num556));
										num557 = 7f / num557;
										num555 *= num557;
										num556 *= num557;
										if (this.velocity.X > num555)
										{
											if (this.velocity.X > 0f)
											{
												this.velocity.X = this.velocity.X * 0.97f;
											}
											this.velocity.X = this.velocity.X - 0.05f;
										}
										if (this.velocity.X < num555)
										{
											if (this.velocity.X < 0f)
											{
												this.velocity.X = this.velocity.X * 0.97f;
											}
											this.velocity.X = this.velocity.X + 0.05f;
										}
										if (this.velocity.Y > num556)
										{
											if (this.velocity.Y > 0f)
											{
												this.velocity.Y = this.velocity.Y * 0.97f;
											}
											this.velocity.Y = this.velocity.Y - 0.05f;
										}
										if (this.velocity.Y < num556)
										{
											if (this.velocity.Y < 0f)
											{
												this.velocity.Y = this.velocity.Y * 0.97f;
											}
											this.velocity.Y = this.velocity.Y + 0.05f;
										}
										this.ai[3] += 1f;
										if (this.ai[3] >= 600f)
										{
											this.ai[2] = 0f;
											this.ai[3] = 0f;
											this.netUpdate = true;
										}
										vector60 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										num555 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector60.X;
										num556 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector60.Y;
										num557 = (float)Math.Sqrt((double)(num555 * num555 + num556 * num556));
										this.rotation = (float)Math.Atan2((double)num556, (double)num555) + 1.57f;
										return;
									}
									if (this.ai[2] == 5f && ((this.velocity.X > 0f && this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)) || (this.velocity.X < 0f && this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))))
									{
										this.ai[2] = 0f;
										return;
									}
								}
							}
						}
						else if (this.aiStyle == 34)
						{
							this.spriteDirection = -(int)this.ai[0];
							Vector2 vector61 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num558 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector61.X;
							float num559 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector61.Y;
							float num560 = (float)Math.Sqrt((double)(num558 * num558 + num559 * num559));
							if (this.ai[2] != 99f)
							{
								if (num560 > 800f)
								{
									this.ai[2] = 99f;
								}
							}
							else if (num560 < 400f)
							{
								this.ai[2] = 0f;
							}
							if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 32)
							{
								this.ai[2] += 10f;
								if (this.ai[2] > 50f || Main.netMode != 2)
								{
									this.life = -1;
									this.HitEffect(0, 10.0);
									this.active = false;
								}
							}
							if (this.ai[2] == 99f)
							{
								if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y - 0.1f;
									if (this.velocity.Y > 8f)
									{
										this.velocity.Y = 8f;
									}
								}
								else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y)
								{
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y + 0.1f;
									if (this.velocity.Y < -8f)
									{
										this.velocity.Y = -8f;
									}
								}
								if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X - 0.5f;
									if (this.velocity.X > 12f)
									{
										this.velocity.X = 12f;
									}
								}
								if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X + 0.5f;
									if (this.velocity.X < -12f)
									{
										this.velocity.X = -12f;
										return;
									}
								}
							}
							else
							{
								if (this.ai[2] == 0f || this.ai[2] == 3f)
								{
									if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
									{
										this.timeLeft = 10;
									}
									if (Main.npc[(int)this.ai[1]].ai[1] != 0f)
									{
										this.TargetClosest(true);
										this.TargetClosest(true);
										if (Main.player[this.target].dead)
										{
											this.velocity.Y = this.velocity.Y + 0.1f;
											if (this.velocity.Y > 16f)
											{
												this.velocity.Y = 16f;
											}
										}
										else
										{
											Vector2 vector62 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float num561 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector62.X;
											float num562 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector62.Y;
											float num563 = (float)Math.Sqrt((double)(num561 * num561 + num562 * num562));
											num563 = 12f / num563;
											num561 *= num563;
											num562 *= num563;
											this.rotation = (float)Math.Atan2((double)num562, (double)num561) - 1.57f;
											if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < 2f)
											{
												this.rotation = (float)Math.Atan2((double)num562, (double)num561) - 1.57f;
												this.velocity.X = num561;
												this.velocity.Y = num562;
												this.netUpdate = true;
											}
											else
											{
												this.velocity *= 0.97f;
											}
											this.ai[3] += 1f;
											if (this.ai[3] >= 600f)
											{
												this.ai[2] = 0f;
												this.ai[3] = 0f;
												this.netUpdate = true;
											}
										}
									}
									else
									{
										this.ai[3] += 1f;
										if (this.ai[3] >= 600f)
										{
											this.ai[2] += 1f;
											this.ai[3] = 0f;
											this.netUpdate = true;
										}
										if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y + 300f)
										{
											if (this.velocity.Y > 0f)
											{
												this.velocity.Y = this.velocity.Y * 0.96f;
											}
											this.velocity.Y = this.velocity.Y - 0.1f;
											if (this.velocity.Y > 3f)
											{
												this.velocity.Y = 3f;
											}
										}
										else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y + 230f)
										{
											if (this.velocity.Y < 0f)
											{
												this.velocity.Y = this.velocity.Y * 0.96f;
											}
											this.velocity.Y = this.velocity.Y + 0.1f;
											if (this.velocity.Y < -3f)
											{
												this.velocity.Y = -3f;
											}
										}
										if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 250f)
										{
											if (this.velocity.X > 0f)
											{
												this.velocity.X = this.velocity.X * 0.94f;
											}
											this.velocity.X = this.velocity.X - 0.3f;
											if (this.velocity.X > 9f)
											{
												this.velocity.X = 9f;
											}
										}
										if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
										{
											if (this.velocity.X < 0f)
											{
												this.velocity.X = this.velocity.X * 0.94f;
											}
											this.velocity.X = this.velocity.X + 0.2f;
											if (this.velocity.X < -8f)
											{
												this.velocity.X = -8f;
											}
										}
									}
									Vector2 vector63 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num564 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector63.X;
									float num565 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector63.Y;
									Math.Sqrt((double)(num564 * num564 + num565 * num565));
									this.rotation = (float)Math.Atan2((double)num565, (double)num564) + 1.57f;
									return;
								}
								if (this.ai[2] == 1f)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.9f;
									}
									Vector2 vector64 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num566 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 280f * this.ai[0] - vector64.X;
									float num567 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector64.Y;
									float num568 = (float)Math.Sqrt((double)(num566 * num566 + num567 * num567));
									this.rotation = (float)Math.Atan2((double)num567, (double)num566) + 1.57f;
									this.velocity.X = (this.velocity.X * 5f + Main.npc[(int)this.ai[1]].velocity.X) / 6f;
									this.velocity.X = this.velocity.X + 0.5f;
									this.velocity.Y = this.velocity.Y - 0.5f;
									if (this.velocity.Y < -9f)
									{
										this.velocity.Y = -9f;
									}
									if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 280f)
									{
										this.TargetClosest(true);
										this.ai[2] = 2f;
										vector64 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										num566 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector64.X;
										num567 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector64.Y;
										num568 = (float)Math.Sqrt((double)(num566 * num566 + num567 * num567));
										num568 = 20f / num568;
										this.velocity.X = num566 * num568;
										this.velocity.Y = num567 * num568;
										this.netUpdate = true;
										return;
									}
								}
								else if (this.ai[2] == 2f)
								{
									if (this.position.Y > Main.player[this.target].position.Y || this.velocity.Y < 0f)
									{
										if (this.ai[3] >= 4f)
										{
											this.ai[2] = 3f;
											this.ai[3] = 0f;
											return;
										}
										this.ai[2] = 1f;
										this.ai[3] += 1f;
										return;
									}
								}
								else if (this.ai[2] == 4f)
								{
									Vector2 vector65 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num569 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector65.X;
									float num570 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector65.Y;
									float num571 = (float)Math.Sqrt((double)(num569 * num569 + num570 * num570));
									this.rotation = (float)Math.Atan2((double)num570, (double)num569) + 1.57f;
									this.velocity.Y = (this.velocity.Y * 5f + Main.npc[(int)this.ai[1]].velocity.Y) / 6f;
									this.velocity.X = this.velocity.X + 0.5f;
									if (this.velocity.X > 12f)
									{
										this.velocity.X = 12f;
									}
									if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 500f || this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 500f)
									{
										this.TargetClosest(true);
										this.ai[2] = 5f;
										vector65 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										num569 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector65.X;
										num570 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector65.Y;
										num571 = (float)Math.Sqrt((double)(num569 * num569 + num570 * num570));
										num571 = 17f / num571;
										this.velocity.X = num569 * num571;
										this.velocity.Y = num570 * num571;
										this.netUpdate = true;
										return;
									}
								}
								else if (this.ai[2] == 5f && this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - 100f)
								{
									if (this.ai[3] >= 4f)
									{
										this.ai[2] = 0f;
										this.ai[3] = 0f;
										return;
									}
									this.ai[2] = 4f;
									this.ai[3] += 1f;
									return;
								}
							}
						}
						else if (this.aiStyle == 35)
						{
							this.spriteDirection = -(int)this.ai[0];
							if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 32)
							{
								this.ai[2] += 10f;
								if (this.ai[2] > 50f || Main.netMode != 2)
								{
									this.life = -1;
									this.HitEffect(0, 10.0);
									this.active = false;
								}
							}
							if (this.ai[2] == 0f)
							{
								if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
								{
									this.timeLeft = 10;
								}
								if (Main.npc[(int)this.ai[1]].ai[1] != 0f)
								{
									this.localAI[0] += 2f;
									if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 100f)
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y - 0.07f;
										if (this.velocity.Y > 6f)
										{
											this.velocity.Y = 6f;
										}
									}
									else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 100f)
									{
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y + 0.07f;
										if (this.velocity.Y < -6f)
										{
											this.velocity.Y = -6f;
										}
									}
									if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
									{
										if (this.velocity.X > 0f)
										{
											this.velocity.X = this.velocity.X * 0.96f;
										}
										this.velocity.X = this.velocity.X - 0.1f;
										if (this.velocity.X > 8f)
										{
											this.velocity.X = 8f;
										}
									}
									if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
									{
										if (this.velocity.X < 0f)
										{
											this.velocity.X = this.velocity.X * 0.96f;
										}
										this.velocity.X = this.velocity.X + 0.1f;
										if (this.velocity.X < -8f)
										{
											this.velocity.X = -8f;
										}
									}
								}
								else
								{
									this.ai[3] += 1f;
									if (this.ai[3] >= 1100f)
									{
										this.localAI[0] = 0f;
										this.ai[2] = 1f;
										this.ai[3] = 0f;
										this.netUpdate = true;
									}
									if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 150f)
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y - 0.04f;
										if (this.velocity.Y > 3f)
										{
											this.velocity.Y = 3f;
										}
									}
									else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 150f)
									{
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y + 0.04f;
										if (this.velocity.Y < -3f)
										{
											this.velocity.Y = -3f;
										}
									}
									if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 200f)
									{
										if (this.velocity.X > 0f)
										{
											this.velocity.X = this.velocity.X * 0.96f;
										}
										this.velocity.X = this.velocity.X - 0.2f;
										if (this.velocity.X > 8f)
										{
											this.velocity.X = 8f;
										}
									}
									if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 160f)
									{
										if (this.velocity.X < 0f)
										{
											this.velocity.X = this.velocity.X * 0.96f;
										}
										this.velocity.X = this.velocity.X + 0.2f;
										if (this.velocity.X < -8f)
										{
											this.velocity.X = -8f;
										}
									}
								}
								Vector2 vector66 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num572 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector66.X;
								float num573 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector66.Y;
								float num574 = (float)Math.Sqrt((double)(num572 * num572 + num573 * num573));
								this.rotation = (float)Math.Atan2((double)num573, (double)num572) + 1.57f;
								if (Main.netMode != 1)
								{
									this.localAI[0] += 1f;
									if (this.localAI[0] > 140f)
									{
										this.localAI[0] = 0f;
										float num575 = 12f;
										int num576 = 0;
										int num577 = 102;
										num574 = num575 / num574;
										num572 = -num572 * num574;
										num573 = -num573 * num574;
										num572 += (float)Main.rand.Next(-40, 41) * 0.01f;
										num573 += (float)Main.rand.Next(-40, 41) * 0.01f;
										vector66.X += num572 * 4f;
										vector66.Y += num573 * 4f;
										Projectile.NewProjectile(vector66.X, vector66.Y, num572, num573, num577, num576, 0f, Main.myPlayer, 0f, 0f);
										return;
									}
								}
							}
							else if (this.ai[2] == 1f)
							{
								this.ai[3] += 1f;
								if (this.ai[3] >= 300f)
								{
									this.localAI[0] = 0f;
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									this.netUpdate = true;
								}
								Vector2 vector67 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num578 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - vector67.X;
								float num579 = Main.npc[(int)this.ai[1]].position.Y - vector67.Y;
								num579 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 80f - vector67.Y;
								float num580 = (float)Math.Sqrt((double)(num578 * num578 + num579 * num579));
								num580 = 6f / num580;
								num578 *= num580;
								num579 *= num580;
								if (this.velocity.X > num578)
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.9f;
									}
									this.velocity.X = this.velocity.X - 0.04f;
								}
								if (this.velocity.X < num578)
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.9f;
									}
									this.velocity.X = this.velocity.X + 0.04f;
								}
								if (this.velocity.Y > num579)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.9f;
									}
									this.velocity.Y = this.velocity.Y - 0.08f;
								}
								if (this.velocity.Y < num579)
								{
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.9f;
									}
									this.velocity.Y = this.velocity.Y + 0.08f;
								}
								this.TargetClosest(true);
								vector67 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								num578 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector67.X;
								num579 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector67.Y;
								num580 = (float)Math.Sqrt((double)(num578 * num578 + num579 * num579));
								this.rotation = (float)Math.Atan2((double)num579, (double)num578) - 1.57f;
								if (Main.netMode != 1)
								{
									this.localAI[0] += 1f;
									if (this.localAI[0] > 40f)
									{
										this.localAI[0] = 0f;
										float num581 = 10f;
										int num582 = 0;
										int num583 = 102;
										num580 = num581 / num580;
										num578 *= num580;
										num579 *= num580;
										num578 += (float)Main.rand.Next(-40, 41) * 0.01f;
										num579 += (float)Main.rand.Next(-40, 41) * 0.01f;
										vector67.X += num578 * 4f;
										vector67.Y += num579 * 4f;
										Projectile.NewProjectile(vector67.X, vector67.Y, num578, num579, num583, num582, 0f, Main.myPlayer, 0f, 0f);
										return;
									}
								}
							}
						}
						else if (this.aiStyle == 36)
						{
							this.spriteDirection = -(int)this.ai[0];
							if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 32)
							{
								this.ai[2] += 10f;
								if (this.ai[2] > 50f || Main.netMode != 2)
								{
									this.life = -1;
									this.HitEffect(0, 10.0);
									this.active = false;
								}
							}
							if (this.ai[2] == 0f || this.ai[2] == 3f)
							{
								if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
								{
									this.timeLeft = 10;
								}
								if (Main.npc[(int)this.ai[1]].ai[1] != 0f)
								{
									this.localAI[0] += 3f;
									if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 100f)
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y - 0.07f;
										if (this.velocity.Y > 6f)
										{
											this.velocity.Y = 6f;
										}
									}
									else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 100f)
									{
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y + 0.07f;
										if (this.velocity.Y < -6f)
										{
											this.velocity.Y = -6f;
										}
									}
									if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
									{
										if (this.velocity.X > 0f)
										{
											this.velocity.X = this.velocity.X * 0.96f;
										}
										this.velocity.X = this.velocity.X - 0.1f;
										if (this.velocity.X > 8f)
										{
											this.velocity.X = 8f;
										}
									}
									if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
									{
										if (this.velocity.X < 0f)
										{
											this.velocity.X = this.velocity.X * 0.96f;
										}
										this.velocity.X = this.velocity.X + 0.1f;
										if (this.velocity.X < -8f)
										{
											this.velocity.X = -8f;
										}
									}
								}
								else
								{
									this.ai[3] += 1f;
									if (this.ai[3] >= 800f)
									{
										this.ai[2] += 1f;
										this.ai[3] = 0f;
										this.netUpdate = true;
									}
									if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 100f)
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y - 0.1f;
										if (this.velocity.Y > 3f)
										{
											this.velocity.Y = 3f;
										}
									}
									else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 100f)
									{
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y + 0.1f;
										if (this.velocity.Y < -3f)
										{
											this.velocity.Y = -3f;
										}
									}
									if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 180f * this.ai[0])
									{
										if (this.velocity.X > 0f)
										{
											this.velocity.X = this.velocity.X * 0.96f;
										}
										this.velocity.X = this.velocity.X - 0.14f;
										if (this.velocity.X > 8f)
										{
											this.velocity.X = 8f;
										}
									}
									if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 180f * this.ai[0])
									{
										if (this.velocity.X < 0f)
										{
											this.velocity.X = this.velocity.X * 0.96f;
										}
										this.velocity.X = this.velocity.X + 0.14f;
										if (this.velocity.X < -8f)
										{
											this.velocity.X = -8f;
										}
									}
								}
								this.TargetClosest(true);
								Vector2 vector68 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num584 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector68.X;
								float num585 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector68.Y;
								float num586 = (float)Math.Sqrt((double)(num584 * num584 + num585 * num585));
								this.rotation = (float)Math.Atan2((double)num585, (double)num584) - 1.57f;
								if (Main.netMode != 1)
								{
									this.localAI[0] += 1f;
									if (this.localAI[0] > 200f)
									{
										this.localAI[0] = 0f;
										float num587 = 8f;
										int num588 = 25;
										int num589 = 100;
										num586 = num587 / num586;
										num584 *= num586;
										num585 *= num586;
										num584 += (float)Main.rand.Next(-40, 41) * 0.05f;
										num585 += (float)Main.rand.Next(-40, 41) * 0.05f;
										vector68.X += num584 * 8f;
										vector68.Y += num585 * 8f;
										Projectile.NewProjectile(vector68.X, vector68.Y, num584, num585, num589, num588, 0f, Main.myPlayer, 0f, 0f);
										return;
									}
								}
							}
							else if (this.ai[2] == 1f)
							{
								this.ai[3] += 1f;
								if (this.ai[3] >= 200f)
								{
									this.localAI[0] = 0f;
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									this.netUpdate = true;
								}
								Vector2 vector69 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num590 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - 350f - vector69.X;
								float num591 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 20f - vector69.Y;
								float num592 = (float)Math.Sqrt((double)(num590 * num590 + num591 * num591));
								num592 = 7f / num592;
								num590 *= num592;
								num591 *= num592;
								if (this.velocity.X > num590)
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.9f;
									}
									this.velocity.X = this.velocity.X - 0.1f;
								}
								if (this.velocity.X < num590)
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.9f;
									}
									this.velocity.X = this.velocity.X + 0.1f;
								}
								if (this.velocity.Y > num591)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.9f;
									}
									this.velocity.Y = this.velocity.Y - 0.03f;
								}
								if (this.velocity.Y < num591)
								{
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.9f;
									}
									this.velocity.Y = this.velocity.Y + 0.03f;
								}
								this.TargetClosest(true);
								vector69 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								num590 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector69.X;
								num591 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector69.Y;
								num592 = (float)Math.Sqrt((double)(num590 * num590 + num591 * num591));
								this.rotation = (float)Math.Atan2((double)num591, (double)num590) - 1.57f;
								if (Main.netMode == 1)
								{
									this.localAI[0] += 1f;
									if (this.localAI[0] > 80f)
									{
										this.localAI[0] = 0f;
										float num593 = 10f;
										int num594 = 25;
										int num595 = 100;
										num592 = num593 / num592;
										num590 *= num592;
										num591 *= num592;
										num590 += (float)Main.rand.Next(-40, 41) * 0.05f;
										num591 += (float)Main.rand.Next(-40, 41) * 0.05f;
										vector69.X += num590 * 8f;
										vector69.Y += num591 * 8f;
										Projectile.NewProjectile(vector69.X, vector69.Y, num590, num591, num595, num594, 0f, Main.myPlayer, 0f, 0f);
										return;
									}
								}
							}
						}
						else if (this.aiStyle == 37)
						{
							if (this.ai[3] > 0f)
							{
								this.realLife = (int)this.ai[3];
							}
							if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
							{
								this.TargetClosest(true);
							}
							if (this.type > 134)
							{
								bool flag42 = false;
								if (this.ai[1] <= 0f)
								{
									flag42 = true;
								}
								else if (Main.npc[(int)this.ai[1]].life <= 0)
								{
									flag42 = true;
								}
								if (flag42)
								{
									this.life = 0;
									this.HitEffect(0, 10.0);
									this.checkDead();
								}
							}
							if (Main.netMode != 1)
							{
								if (this.ai[0] == 0f && this.type == 134)
								{
									this.ai[3] = (float)this.whoAmI;
									this.realLife = this.whoAmI;
									int num596 = this.whoAmI;
									int num597 = 80;
									for (int num598 = 0; num598 <= num597; num598++)
									{
										int num599 = 135;
										if (num598 == num597)
										{
											num599 = 136;
										}
										int num600 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), num599, this.whoAmI);
										Main.npc[num600].ai[3] = (float)this.whoAmI;
										Main.npc[num600].realLife = this.whoAmI;
										Main.npc[num600].ai[1] = (float)num596;
										Main.npc[num596].ai[0] = (float)num600;
										NetMessage.SendData(23, -1, -1, "", num600, 0f, 0f, 0f, 0);
										num596 = num600;
									}
								}
								if (this.type == 135)
								{
									this.localAI[0] += (float)Main.rand.Next(4);
									if (this.localAI[0] >= (float)Main.rand.Next(1400, 26000))
									{
										this.localAI[0] = 0f;
										this.TargetClosest(true);
										if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
										{
											float num601 = 8f;
											Vector2 vector70 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)(this.height / 2));
											float num602 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector70.X + (float)Main.rand.Next(-20, 21);
											float num603 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector70.Y + (float)Main.rand.Next(-20, 21);
											float num604 = (float)Math.Sqrt((double)(num602 * num602 + num603 * num603));
											num604 = num601 / num604;
											num602 *= num604;
											num603 *= num604;
											num602 += (float)Main.rand.Next(-20, 21) * 0.05f;
											num603 += (float)Main.rand.Next(-20, 21) * 0.05f;
											int num605 = 22;
											int num606 = 100;
											vector70.X += num602 * 5f;
											vector70.Y += num603 * 5f;
											int num607 = Projectile.NewProjectile(vector70.X, vector70.Y, num602, num603, num606, num605, 0f, Main.myPlayer, 0f, 0f);
											Main.projectile[num607].timeLeft = 300;
											this.netUpdate = true;
										}
									}
								}
							}
							int num608 = (int)(this.position.X / 16f) - 1;
							int num609 = (int)((this.position.X + (float)this.width) / 16f) + 2;
							int num610 = (int)(this.position.Y / 16f) - 1;
							int num611 = (int)((this.position.Y + (float)this.height) / 16f) + 2;
							if (num608 < 0)
							{
								num608 = 0;
							}
							if (num609 > Main.maxTilesX)
							{
								num609 = Main.maxTilesX;
							}
							if (num610 < 0)
							{
								num610 = 0;
							}
							if (num611 > Main.maxTilesY)
							{
								num611 = Main.maxTilesY;
							}
							bool flag43 = false;
							if (!flag43)
							{
								for (int num612 = num608; num612 < num609; num612++)
								{
									for (int num613 = num610; num613 < num611; num613++)
									{
										if (true && ((Main.tile[num612, num613].nactive() && (Main.tileSolid[(int)Main.tile[num612, num613].type] || (Main.tileSolidTop[(int)Main.tile[num612, num613].type] && Main.tile[num612, num613].frameY == 0))) || Main.tile[num612, num613].liquid > 64))
										{
											Vector2 vector71;
											vector71.X = (float)(num612 * 16);
											vector71.Y = (float)(num613 * 16);
											if (this.position.X + (float)this.width > vector71.X && this.position.X < vector71.X + 16f && this.position.Y + (float)this.height > vector71.Y && this.position.Y < vector71.Y + 16f)
											{
												flag43 = true;
												break;
											}
										}
									}
								}
							}
							if (!flag43)
							{
								this.localAI[1] = 1f;
								if (this.type == 134)
								{
									Rectangle rectangle11 = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
									int num614 = 1000;
									bool flag44 = true;
									if (this.position.Y > Main.player[this.target].position.Y)
									{
										for (int num615 = 0; num615 < 255; num615++)
										{
											if (Main.player[num615].active)
											{
												Rectangle rectangle12 = new Rectangle((int)Main.player[num615].position.X - num614, (int)Main.player[num615].position.Y - num614, num614 * 2, num614 * 2);
												if (rectangle11.Intersects(rectangle12))
												{
													flag44 = false;
													break;
												}
											}
										}
										if (flag44)
										{
											flag43 = true;
										}
									}
								}
							}
							else
							{
								this.localAI[1] = 0f;
							}
							float num616 = 16f;
							if (Main.dayTime || Main.player[this.target].dead)
							{
								flag43 = false;
								this.velocity.Y = this.velocity.Y + 1f;
								if ((double)this.position.Y > Main.worldSurface * 16.0)
								{
									this.velocity.Y = this.velocity.Y + 1f;
									num616 = 32f;
								}
								if ((double)this.position.Y > Main.rockLayer * 16.0)
								{
									for (int num617 = 0; num617 < 200; num617++)
									{
										if (Main.npc[num617].aiStyle == this.aiStyle)
										{
											Main.npc[num617].active = false;
										}
									}
								}
							}
							float num618 = 0.1f;
							float num619 = 0.15f;
							Vector2 vector72 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num620 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2);
							float num621 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2);
							num620 = (float)((int)(num620 / 16f) * 16);
							num621 = (float)((int)(num621 / 16f) * 16);
							vector72.X = (float)((int)(vector72.X / 16f) * 16);
							vector72.Y = (float)((int)(vector72.Y / 16f) * 16);
							num620 -= vector72.X;
							num621 -= vector72.Y;
							float num622 = (float)Math.Sqrt((double)(num620 * num620 + num621 * num621));
							if (this.ai[1] > 0f && this.ai[1] < (float)Main.npc.Length)
							{
								try
								{
									vector72 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									num620 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - vector72.X;
									num621 = Main.npc[(int)this.ai[1]].position.Y + (float)(Main.npc[(int)this.ai[1]].height / 2) - vector72.Y;
								}
								catch
								{
								}
								this.rotation = (float)Math.Atan2((double)num621, (double)num620) + 1.57f;
								num622 = (float)Math.Sqrt((double)(num620 * num620 + num621 * num621));
								int num623 = (int)(44f * this.scale);
								num622 = (num622 - (float)num623) / num622;
								num620 *= num622;
								num621 *= num622;
								this.velocity = default(Vector2);
								this.position.X = this.position.X + num620;
								this.position.Y = this.position.Y + num621;
								return;
							}
							if (!flag43)
							{
								this.TargetClosest(true);
								this.velocity.Y = this.velocity.Y + 0.15f;
								if (this.velocity.Y > num616)
								{
									this.velocity.Y = num616;
								}
								if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num616 * 0.4)
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X - num618 * 1.1f;
									}
									else
									{
										this.velocity.X = this.velocity.X + num618 * 1.1f;
									}
								}
								else if (this.velocity.Y == num616)
								{
									if (this.velocity.X < num620)
									{
										this.velocity.X = this.velocity.X + num618;
									}
									else if (this.velocity.X > num620)
									{
										this.velocity.X = this.velocity.X - num618;
									}
								}
								else if (this.velocity.Y > 4f)
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X + num618 * 0.9f;
									}
									else
									{
										this.velocity.X = this.velocity.X - num618 * 0.9f;
									}
								}
							}
							else
							{
								if (this.soundDelay == 0)
								{
									float num624 = num622 / 40f;
									if (num624 < 10f)
									{
										num624 = 10f;
									}
									if (num624 > 20f)
									{
										num624 = 20f;
									}
									this.soundDelay = (int)num624;
									Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 1);
								}
								num622 = (float)Math.Sqrt((double)(num620 * num620 + num621 * num621));
								float num625 = Math.Abs(num620);
								float num626 = Math.Abs(num621);
								float num627 = num616 / num622;
								num620 *= num627;
								num621 *= num627;
								if (((this.velocity.X > 0f && num620 > 0f) || (this.velocity.X < 0f && num620 < 0f)) && ((this.velocity.Y > 0f && num621 > 0f) || (this.velocity.Y < 0f && num621 < 0f)))
								{
									if (this.velocity.X < num620)
									{
										this.velocity.X = this.velocity.X + num619;
									}
									else if (this.velocity.X > num620)
									{
										this.velocity.X = this.velocity.X - num619;
									}
									if (this.velocity.Y < num621)
									{
										this.velocity.Y = this.velocity.Y + num619;
									}
									else if (this.velocity.Y > num621)
									{
										this.velocity.Y = this.velocity.Y - num619;
									}
								}
								if ((this.velocity.X > 0f && num620 > 0f) || (this.velocity.X < 0f && num620 < 0f) || (this.velocity.Y > 0f && num621 > 0f) || (this.velocity.Y < 0f && num621 < 0f))
								{
									if (this.velocity.X < num620)
									{
										this.velocity.X = this.velocity.X + num618;
									}
									else if (this.velocity.X > num620)
									{
										this.velocity.X = this.velocity.X - num618;
									}
									if (this.velocity.Y < num621)
									{
										this.velocity.Y = this.velocity.Y + num618;
									}
									else if (this.velocity.Y > num621)
									{
										this.velocity.Y = this.velocity.Y - num618;
									}
									if ((double)Math.Abs(num621) < (double)num616 * 0.2 && ((this.velocity.X > 0f && num620 < 0f) || (this.velocity.X < 0f && num620 > 0f)))
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y + num618 * 2f;
										}
										else
										{
											this.velocity.Y = this.velocity.Y - num618 * 2f;
										}
									}
									if ((double)Math.Abs(num620) < (double)num616 * 0.2 && ((this.velocity.Y > 0f && num621 < 0f) || (this.velocity.Y < 0f && num621 > 0f)))
									{
										if (this.velocity.X > 0f)
										{
											this.velocity.X = this.velocity.X + num618 * 2f;
										}
										else
										{
											this.velocity.X = this.velocity.X - num618 * 2f;
										}
									}
								}
								else if (num625 > num626)
								{
									if (this.velocity.X < num620)
									{
										this.velocity.X = this.velocity.X + num618 * 1.1f;
									}
									else if (this.velocity.X > num620)
									{
										this.velocity.X = this.velocity.X - num618 * 1.1f;
									}
									if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num616 * 0.5)
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y + num618;
										}
										else
										{
											this.velocity.Y = this.velocity.Y - num618;
										}
									}
								}
								else
								{
									if (this.velocity.Y < num621)
									{
										this.velocity.Y = this.velocity.Y + num618 * 1.1f;
									}
									else if (this.velocity.Y > num621)
									{
										this.velocity.Y = this.velocity.Y - num618 * 1.1f;
									}
									if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num616 * 0.5)
									{
										if (this.velocity.X > 0f)
										{
											this.velocity.X = this.velocity.X + num618;
										}
										else
										{
											this.velocity.X = this.velocity.X - num618;
										}
									}
								}
							}
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
							if (this.type == 134)
							{
								if (flag43)
								{
									if (this.localAI[0] != 1f)
									{
										this.netUpdate = true;
									}
									this.localAI[0] = 1f;
								}
								else
								{
									if (this.localAI[0] != 0f)
									{
										this.netUpdate = true;
									}
									this.localAI[0] = 0f;
								}
								if (((this.velocity.X > 0f && this.oldVelocity.X < 0f) || (this.velocity.X < 0f && this.oldVelocity.X > 0f) || (this.velocity.Y > 0f && this.oldVelocity.Y < 0f) || (this.velocity.Y < 0f && this.oldVelocity.Y > 0f)) && !this.justHit)
								{
									this.netUpdate = true;
									return;
								}
							}
						}
						else if (this.aiStyle == 38)
						{
							float num628 = 4f;
							float num629 = 1f;
							if (this.type == 143)
							{
								num628 = 3f;
								num629 = 0.7f;
							}
							if (this.type == 145)
							{
								num628 = 3.5f;
								num629 = 0.8f;
							}
							if (this.type == 143)
							{
								this.ai[2] += 1f;
								if (this.ai[2] >= 120f)
								{
									this.ai[2] = 0f;
									if (Main.netMode != 1)
									{
										Vector2 vector73 = new Vector2(this.position.X + (float)this.width * 0.5f - (float)(this.direction * 12), this.position.Y + (float)this.height * 0.5f);
										float speedX = (float)(12 * this.spriteDirection);
										float speedY = 0f;
										if (Main.netMode != 1)
										{
											int num630 = 25;
											int num631 = 110;
											int num632 = Projectile.NewProjectile(vector73.X, vector73.Y, speedX, speedY, num631, num630, 0f, Main.myPlayer, 0f, 0f);
											Main.projectile[num632].ai[0] = 2f;
											Main.projectile[num632].timeLeft = 300;
											Main.projectile[num632].friendly = false;
											NetMessage.SendData(27, -1, -1, "", num632, 0f, 0f, 0f, 0);
											this.netUpdate = true;
										}
									}
								}
							}
							if (this.type == 144 && this.ai[1] >= 3f)
							{
								this.TargetClosest(true);
								this.spriteDirection = this.direction;
								if (this.velocity.Y == 0f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
									this.ai[2] += 1f;
									if ((double)this.velocity.X > -0.3 && (double)this.velocity.X < 0.3)
									{
										this.velocity.X = 0f;
									}
									if (this.ai[2] >= 200f)
									{
										this.ai[2] = 0f;
										this.ai[1] = 0f;
									}
								}
							}
							else if (this.type == 145 && this.ai[1] >= 3f)
							{
								this.TargetClosest(true);
								if (this.velocity.Y == 0f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
									this.ai[2] += 1f;
									if ((double)this.velocity.X > -0.3 && (double)this.velocity.X < 0.3)
									{
										this.velocity.X = 0f;
									}
									if (this.ai[2] >= 16f)
									{
										this.ai[2] = 0f;
										this.ai[1] = 0f;
									}
								}
								if (this.velocity.X == 0f && this.velocity.Y == 0f && this.ai[2] == 8f)
								{
									float num633 = 10f;
									Vector2 vector74 = new Vector2(this.position.X + (float)this.width * 0.5f - (float)(this.direction * 12), this.position.Y + (float)this.height * 0.25f);
									float num634 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector74.X;
									float num635 = Main.player[this.target].position.Y - vector74.Y;
									float num636 = (float)Math.Sqrt((double)(num634 * num634 + num635 * num635));
									num636 = num633 / num636;
									num634 *= num636;
									num635 *= num636;
									if (Main.netMode != 1)
									{
										int num637 = 35;
										int num638 = 109;
										int num639 = Projectile.NewProjectile(vector74.X, vector74.Y, num634, num635, num638, num637, 0f, Main.myPlayer, 0f, 0f);
										Main.projectile[num639].ai[0] = 2f;
										Main.projectile[num639].timeLeft = 300;
										Main.projectile[num639].friendly = false;
										NetMessage.SendData(27, -1, -1, "", num639, 0f, 0f, 0f, 0);
										this.netUpdate = true;
									}
								}
							}
							else
							{
								if (this.velocity.Y == 0f)
								{
									if (this.localAI[2] == this.position.X)
									{
										this.direction *= -1;
										this.ai[3] = 60f;
									}
									this.localAI[2] = this.position.X;
									if (this.ai[3] == 0f)
									{
										this.TargetClosest(true);
									}
									this.ai[0] += 1f;
									if (this.ai[0] > 2f)
									{
										this.ai[0] = 0f;
										this.ai[1] += 1f;
										this.velocity.Y = -8.2f;
										this.velocity.X = this.velocity.X + (float)this.direction * num629 * 1.1f;
									}
									else
									{
										this.velocity.Y = -6f;
										this.velocity.X = this.velocity.X + (float)this.direction * num629 * 0.9f;
									}
									this.spriteDirection = this.direction;
								}
								this.velocity.X = this.velocity.X + (float)this.direction * num629 * 0.01f;
							}
							if (this.ai[3] > 0f)
							{
								this.ai[3] -= 1f;
							}
							if (this.velocity.X > num628 && this.direction > 0)
							{
								this.velocity.X = 4f;
							}
							if (this.velocity.X < -num628 && this.direction < 0)
							{
								this.velocity.X = -4f;
								return;
							}
						}
						else if (this.aiStyle == 39)
						{
							if (this.target < 0 || Main.player[this.target].dead || this.direction == 0)
							{
								this.TargetClosest(true);
							}
							bool flag45 = true;
							int num640 = 0;
							if (this.velocity.X < 0f)
							{
								num640 = -1;
							}
							if (this.velocity.X > 0f)
							{
								num640 = 1;
							}
							Vector2 vector75 = this.position;
							vector75.X += this.velocity.X;
							int num641 = (int)((vector75.X + (float)(this.width / 2) + (float)((this.width / 2 + 1) * num640)) / 16f);
							int num642 = (int)((vector75.Y + (float)this.height - 1f) / 16f);
							if ((float)(num641 * 16) < vector75.X + (float)this.width && (float)(num641 * 16 + 16) > vector75.X && ((Main.tile[num641, num642].nactive() && Main.tile[num641, num642].slope() == 0 && Main.tile[num641, num642 - 1].slope() == 0 && ((Main.tileSolid[(int)Main.tile[num641, num642].type] && !Main.tileSolidTop[(int)Main.tile[num641, num642].type]) || (flag45 && Main.tileSolidTop[(int)Main.tile[num641, num642].type] && (!Main.tileSolid[(int)Main.tile[num641, num642 - 1].type] || !Main.tile[num641, num642 - 1].nactive()) && Main.tile[num641, num642].type != 16 && Main.tile[num641, num642].type != 18 && Main.tile[num641, num642].type != 134))) || (Main.tile[num641, num642 - 1].halfBrick() && Main.tile[num641, num642 - 1].nactive())) && (!Main.tile[num641, num642 - 1].nactive() || !Main.tileSolid[(int)Main.tile[num641, num642 - 1].type] || Main.tileSolidTop[(int)Main.tile[num641, num642 - 1].type] || (Main.tile[num641, num642 - 1].halfBrick() && (!Main.tile[num641, num642 - 4].nactive() || !Main.tileSolid[(int)Main.tile[num641, num642 - 4].type] || Main.tileSolidTop[(int)Main.tile[num641, num642 - 4].type]))) && (!Main.tile[num641, num642 - 2].nactive() || !Main.tileSolid[(int)Main.tile[num641, num642 - 2].type] || Main.tileSolidTop[(int)Main.tile[num641, num642 - 2].type]) && (!Main.tile[num641, num642 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num641, num642 - 3].type] || Main.tileSolidTop[(int)Main.tile[num641, num642 - 3].type]) && (!Main.tile[num641 - num640, num642 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num641 - num640, num642 - 3].type] || Main.tileSolidTop[(int)Main.tile[num641 - num640, num642 - 3].type]))
							{
								float num643 = (float)(num642 * 16);
								if (Main.tile[num641, num642].halfBrick())
								{
									num643 += 8f;
								}
								if (Main.tile[num641, num642 - 1].halfBrick())
								{
									num643 -= 8f;
								}
								if (num643 < vector75.Y + (float)this.height)
								{
									float num644 = vector75.Y + (float)this.height - num643;
									if ((double)num644 <= 16.1)
									{
										this.gfxOffY += this.position.Y + (float)this.height - num643;
										this.position.Y = num643 - (float)this.height;
										if (num644 < 9f)
										{
											this.stepSpeed = 0.75f;
										}
										else
										{
											this.stepSpeed = 1.5f;
										}
									}
								}
							}
							if (this.justHit)
							{
								this.ai[0] = 0f;
								this.ai[1] = 0f;
								this.TargetClosest(true);
							}
							if (this.type == 154 && Main.rand.Next(10) == 0)
							{
								int num645 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, default(Color), 1.5f);
								Main.dust[num645].noGravity = true;
								Main.dust[num645].velocity *= 0.2f;
							}
							if (this.ai[0] == 0f)
							{
								if (this.velocity.X < 0f)
								{
									this.direction = -1;
								}
								else if (this.velocity.X > 0f)
								{
									this.direction = 1;
								}
								this.spriteDirection = this.direction;
								Vector2 vector76 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num646 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector76.X;
								float num647 = Main.player[this.target].position.Y - vector76.Y;
								float num648 = (float)Math.Sqrt((double)(num646 * num646 + num647 * num647));
								bool flag46 = Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
								if (num648 > 200f && flag46)
								{
									this.ai[1] += 4f;
								}
								if (num648 > 600f && (flag46 || this.position.Y + (float)this.height > Main.player[this.target].position.Y - 200f))
								{
									this.ai[1] += 10f;
								}
								if (this.wet)
								{
									this.ai[1] = 1000f;
								}
								this.defense = 30;
								this.damage = 80;
								this.knockBackResist = 0.3f;
								this.ai[1] += 1f;
								if (this.ai[1] >= 400f)
								{
									this.ai[1] = 0f;
									this.ai[0] = 1f;
								}
								if (!this.justHit && this.velocity.X != this.oldVelocity.X)
								{
									this.direction *= -1;
								}
								if (this.velocity.Y == 0f && Main.player[this.target].position.Y < this.position.Y + (float)this.height)
								{
									int num649;
									int num650;
									if (this.direction > 0)
									{
										num649 = (int)(((double)this.position.X + (double)this.width * 0.5) / 16.0);
										num650 = num649 + 3;
									}
									else
									{
										num650 = (int)(((double)this.position.X + (double)this.width * 0.5) / 16.0);
										num649 = num650 - 3;
									}
									int num651 = (int)((this.position.Y + (float)this.height + 2f) / 16f) - 1;
									int num652 = num651 + 4;
									bool flag47 = false;
									for (int num653 = num649; num653 <= num650; num653++)
									{
										for (int num654 = num651; num654 <= num652; num654++)
										{
											if (true && Main.tile[num653, num654].nactive() && Main.tileSolid[(int)Main.tile[num653, num654].type])
											{
												flag47 = true;
											}
										}
									}
									if (!flag47)
									{
										this.direction *= -1;
										this.velocity.X = 0.1f * (float)this.direction;
									}
								}
								if (num648 < 400f)
								{
									if (this.velocity.X < -1f || this.velocity.X > 1f)
									{
										if (this.velocity.Y == 0f)
										{
											this.velocity *= 0.8f;
											return;
										}
									}
									else if (this.velocity.X < 1f && this.direction == 1)
									{
										this.velocity.X = this.velocity.X + 0.07f;
										if (this.velocity.X > 1f)
										{
											this.velocity.X = 1f;
											return;
										}
									}
									else if (this.velocity.X > -1f && this.direction == -1)
									{
										this.velocity.X = this.velocity.X - 0.07f;
										if (this.velocity.X < -1f)
										{
											this.velocity.X = -1f;
											return;
										}
									}
								}
								else if (this.velocity.X < -1.5f || this.velocity.X > 1.5f)
								{
									if (this.velocity.Y == 0f)
									{
										this.velocity *= 0.8f;
										return;
									}
								}
								else if (this.velocity.X < 1.5f && this.direction == 1)
								{
									this.velocity.X = this.velocity.X + 0.07f;
									if (this.velocity.X > 1.5f)
									{
										this.velocity.X = 1.5f;
										return;
									}
								}
								else if (this.velocity.X > -1.5f && this.direction == -1)
								{
									this.velocity.X = this.velocity.X - 0.07f;
									if (this.velocity.X < -1.5f)
									{
										this.velocity.X = -1.5f;
										return;
									}
								}
							}
							else if (this.ai[0] == 1f)
							{
								this.velocity.X = this.velocity.X * 0.5f;
								this.ai[1] += 1f;
								if (this.ai[1] >= 30f)
								{
									this.netUpdate = true;
									this.TargetClosest(true);
									this.ai[1] = 0f;
									this.ai[0] = 3f;
									this.ai[2] = 0f;
									return;
								}
							}
							else
							{
								if (this.ai[0] == 3f)
								{
									if (this.type == 154 && Main.rand.Next(3) < 2)
									{
										int num655 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, default(Color), 1.5f);
										Main.dust[num655].noGravity = true;
										Main.dust[num655].velocity *= 0.2f;
									}
									this.damage = 120;
									this.defense = 70;
									this.ai[1] += 1f;
									if (this.ai[1] == 1f)
									{
										this.netUpdate = true;
										this.TargetClosest(true);
										this.ai[2] += 0.3f;
										this.rotation += this.ai[2] * (float)this.direction;
										this.ai[1] += 1f;
										bool flag48 = Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
										float num656 = 10f;
										if (!flag48)
										{
											num656 = 6f;
										}
										Vector2 vector77 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num657 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector77.X;
										float num658 = Math.Abs(num657) * 0.2f;
										if (this.directionY > 0)
										{
											num658 = 0f;
										}
										float num659 = Main.player[this.target].position.Y - vector77.Y - num658;
										float num660 = (float)Math.Sqrt((double)(num657 * num657 + num659 * num659));
										this.netUpdate = true;
										num660 = num656 / num660;
										num657 *= num660;
										num659 *= num660;
										if (!flag48)
										{
											num659 = -10f;
										}
										this.velocity.X = num657;
										this.velocity.Y = num659;
										this.ai[3] = this.velocity.X;
									}
									else
									{
										if (this.position.X + (float)this.width > Main.player[this.target].position.X && this.position.X < Main.player[this.target].position.X + (float)Main.player[this.target].width && this.position.Y < Main.player[this.target].position.Y + (float)Main.player[this.target].height)
										{
											this.velocity.X = this.velocity.X * 0.8f;
											this.ai[3] = 0f;
											if (this.velocity.Y < 0f)
											{
												this.velocity.Y = this.velocity.Y + 0.2f;
											}
										}
										if (this.ai[3] != 0f)
										{
											this.velocity.X = this.ai[3];
											this.velocity.Y = this.velocity.Y - 0.22f;
										}
										if (this.ai[1] >= 90f)
										{
											this.noGravity = false;
											this.ai[1] = 0f;
											this.ai[0] = 4f;
										}
									}
									if (this.wet && this.directionY < 0)
									{
										this.velocity.Y = this.velocity.Y - 0.3f;
									}
									this.rotation += this.ai[2] * (float)this.direction;
									return;
								}
								if (this.ai[0] == 4f)
								{
									if (this.wet && this.directionY < 0)
									{
										this.velocity.Y = this.velocity.Y - 0.3f;
									}
									this.velocity.X = this.velocity.X * 0.96f;
									if (this.ai[2] > 0f)
									{
										this.ai[2] -= 0.01f;
										this.rotation += this.ai[2] * (float)this.direction;
									}
									else if (this.velocity.Y >= 0f)
									{
										this.rotation = 0f;
									}
									if (this.ai[2] <= 0f && (this.velocity.Y == 0f || this.wet))
									{
										this.netUpdate = true;
										this.rotation = 0f;
										this.ai[2] = 0f;
										this.ai[1] = 0f;
										this.ai[0] = 5f;
										return;
									}
								}
								else if (this.ai[0] == 5f)
								{
									this.rotation = 0f;
									this.velocity.X = 0f;
									this.ai[1] += 1f;
									if (this.ai[1] >= 30f)
									{
										this.TargetClosest(true);
										this.netUpdate = true;
										this.ai[1] = 0f;
										this.ai[0] = 0f;
									}
									if (this.wet)
									{
										this.ai[0] = 3f;
										this.ai[1] = 0f;
										return;
									}
								}
							}
						}
						else if (this.aiStyle == 40)
						{
							if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
							{
								this.TargetClosest(true);
							}
							float num661 = 2f;
							float num662 = 0.08f;
							Vector2 vector78 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num663 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2);
							float num664 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2);
							num663 = (float)((int)(num663 / 8f) * 8);
							num664 = (float)((int)(num664 / 8f) * 8);
							vector78.X = (float)((int)(vector78.X / 8f) * 8);
							vector78.Y = (float)((int)(vector78.Y / 8f) * 8);
							num663 -= vector78.X;
							num664 -= vector78.Y;
							float num665 = (float)Math.Sqrt((double)(num663 * num663 + num664 * num664));
							if (num665 == 0f)
							{
								num663 = this.velocity.X;
								num664 = this.velocity.Y;
							}
							else
							{
								num665 = num661 / num665;
								num663 *= num665;
								num664 *= num665;
							}
							if (Main.player[this.target].dead)
							{
								num663 = (float)this.direction * num661 / 2f;
								num664 = -num661 / 2f;
							}
							this.spriteDirection = -1;
							if (!Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								this.ai[0] += 1f;
								if (this.ai[0] > 0f)
								{
									this.velocity.Y = this.velocity.Y + 0.023f;
								}
								else
								{
									this.velocity.Y = this.velocity.Y - 0.023f;
								}
								if (this.ai[0] < -100f || this.ai[0] > 100f)
								{
									this.velocity.X = this.velocity.X + 0.023f;
								}
								else
								{
									this.velocity.X = this.velocity.X - 0.023f;
								}
								if (this.ai[0] > 200f)
								{
									this.ai[0] = -200f;
								}
								this.velocity.X = this.velocity.X + num663 * 0.007f;
								this.velocity.Y = this.velocity.Y + num664 * 0.007f;
								this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
								if ((double)this.velocity.X > 1.5)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
								if ((double)this.velocity.X < -1.5)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
								if ((double)this.velocity.Y > 1.5)
								{
									this.velocity.Y = this.velocity.Y * 0.9f;
								}
								if ((double)this.velocity.Y < -1.5)
								{
									this.velocity.Y = this.velocity.Y * 0.9f;
								}
								if (this.velocity.X > 3f)
								{
									this.velocity.X = 3f;
								}
								if (this.velocity.X < -3f)
								{
									this.velocity.X = -3f;
								}
								if (this.velocity.Y > 3f)
								{
									this.velocity.Y = 3f;
								}
								if (this.velocity.Y < -3f)
								{
									this.velocity.Y = -3f;
								}
							}
							else
							{
								if (this.velocity.X < num663)
								{
									this.velocity.X = this.velocity.X + num662;
									if (this.velocity.X < 0f && num663 > 0f)
									{
										this.velocity.X = this.velocity.X + num662;
									}
								}
								else if (this.velocity.X > num663)
								{
									this.velocity.X = this.velocity.X - num662;
									if (this.velocity.X > 0f && num663 < 0f)
									{
										this.velocity.X = this.velocity.X - num662;
									}
								}
								if (this.velocity.Y < num664)
								{
									this.velocity.Y = this.velocity.Y + num662;
									if (this.velocity.Y < 0f && num664 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num662;
									}
								}
								else if (this.velocity.Y > num664)
								{
									this.velocity.Y = this.velocity.Y - num662;
									if (this.velocity.Y > 0f && num664 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num662;
									}
								}
								this.rotation = (float)Math.Atan2((double)num664, (double)num663);
							}
							float num666 = 0.5f;
							if (this.collideX)
							{
								this.netUpdate = true;
								this.velocity.X = this.oldVelocity.X * -num666;
								if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
								{
									this.velocity.X = 2f;
								}
								if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
								{
									this.velocity.X = -2f;
								}
							}
							if (this.collideY)
							{
								this.netUpdate = true;
								this.velocity.Y = this.oldVelocity.Y * -num666;
								if (this.velocity.Y > 0f && (double)this.velocity.Y < 1.5)
								{
									this.velocity.Y = 2f;
								}
								if (this.velocity.Y < 0f && (double)this.velocity.Y > -1.5)
								{
									this.velocity.Y = -2f;
								}
							}
							if (((this.velocity.X > 0f && this.oldVelocity.X < 0f) || (this.velocity.X < 0f && this.oldVelocity.X > 0f) || (this.velocity.Y > 0f && this.oldVelocity.Y < 0f) || (this.velocity.Y < 0f && this.oldVelocity.Y > 0f)) && !this.justHit)
							{
								this.netUpdate = true;
							}
							if (Main.netMode != 1)
							{
								int num667 = (int)this.center().X / 16;
								int num668 = (int)this.center().Y / 16;
								bool flag49 = false;
								for (int num669 = num667 - 1; num669 <= num667 + 1; num669++)
								{
									for (int num670 = num668 - 1; num670 <= num668 + 1; num670++)
									{
										if (Main.tile[num669, num670].wall > 0)
										{
											flag49 = true;
										}
									}
								}
								if (!flag49)
								{
									if (this.type == 237)
									{
										this.Transform(236);
										return;
									}
									if (this.type == 238)
									{
										this.Transform(163);
										return;
									}
									if (this.type == 240)
									{
										this.Transform(239);
										return;
									}
									this.Transform(164);
									return;
								}
							}
						}
						else if (this.aiStyle == 41)
						{
							if (this.ai[2] > 1f)
							{
								this.ai[2] -= 1f;
							}
							if (this.ai[2] == 0f)
							{
								this.ai[0] = -100f;
								this.ai[2] = 1f;
								this.TargetClosest(true);
								this.spriteDirection = this.direction;
							}
							if (this.wet && this.type != 177)
							{
								if (this.collideX)
								{
									this.direction *= -this.direction;
									this.spriteDirection = this.direction;
								}
								if (this.collideY)
								{
									this.TargetClosest(true);
									if (this.oldVelocity.Y < 0f)
									{
										this.velocity.Y = 5f;
									}
									else
									{
										this.velocity.Y = this.velocity.Y - 2f;
									}
									this.spriteDirection = this.direction;
								}
								if (this.velocity.Y > 4f)
								{
									this.velocity.Y = this.velocity.Y * 0.95f;
								}
								this.velocity.Y = this.velocity.Y - 0.3f;
								if (this.velocity.Y < -4f)
								{
									this.velocity.Y = -4f;
								}
							}
							if (this.velocity.Y == 0f)
							{
								if (this.ai[3] == this.position.X)
								{
									this.direction *= -1;
									this.ai[2] = 300f;
								}
								this.ai[3] = 0f;
								this.velocity.X = this.velocity.X * 0.8f;
								if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
								{
									this.velocity.X = 0f;
								}
								if (this.type == 177)
								{
									this.ai[0] += 2f;
								}
								else
								{
									this.ai[0] += 5f;
								}
								Vector2 vector79 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num671 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector79.X;
								float num672 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector79.Y;
								float num673 = (float)Math.Sqrt((double)(num671 * num671 + num672 * num672));
								float num674 = 400f / num673;
								if (this.type == 177)
								{
									num674 *= 5f;
								}
								else
								{
									num674 *= 10f;
								}
								if (num674 > 30f)
								{
									num674 = 30f;
								}
								this.ai[0] += (float)((int)num674);
								if (this.ai[0] >= 0f)
								{
									this.netUpdate = true;
									if (this.ai[2] == 1f)
									{
										this.TargetClosest(true);
									}
									if (this.type == 177)
									{
										if (this.ai[1] == 2f)
										{
											this.velocity.Y = -11.5f;
											this.velocity.X = this.velocity.X + 2f * (float)this.direction;
											if (num673 < 350f && num673 > 200f)
											{
												this.velocity.X = this.velocity.X + (float)this.direction;
											}
											this.ai[0] = -200f;
											this.ai[1] = 0f;
											this.ai[3] = this.position.X;
										}
										else
										{
											this.velocity.Y = -7.5f;
											this.velocity.X = this.velocity.X + (float)(4 * this.direction);
											if (num673 < 350f && num673 > 200f)
											{
												this.velocity.X = this.velocity.X + (float)this.direction;
											}
											this.ai[0] = -120f;
											this.ai[1] += 1f;
										}
									}
									else if (this.ai[1] == 3f)
									{
										this.velocity.Y = -9f;
										this.velocity.X = this.velocity.X + (float)(3 * this.direction);
										if (num673 < 350f && num673 > 200f)
										{
											this.velocity.X = this.velocity.X + (float)this.direction;
										}
										this.ai[0] = -200f;
										this.ai[1] = 0f;
										this.ai[3] = this.position.X;
									}
									else
									{
										this.velocity.Y = -5f;
										this.velocity.X = this.velocity.X + (float)(5 * this.direction);
										if (num673 < 350f && num673 > 200f)
										{
											this.velocity.X = this.velocity.X + (float)this.direction;
										}
										this.ai[0] = -120f;
										this.ai[1] += 1f;
									}
								}
								else if (this.ai[0] >= -30f)
								{
									this.aiAction = 1;
								}
								this.spriteDirection = this.direction;
								return;
							}
							if (this.target < 255)
							{
								if (this.type == 177)
								{
									bool flag50 = false;
									if (this.position.Y + (float)this.height < Main.player[this.target].position.Y && this.position.X + (float)this.width > Main.player[this.target].position.X && this.position.X < Main.player[this.target].position.X + (float)Main.player[this.target].width)
									{
										flag50 = true;
										this.velocity.X = this.velocity.X * 0.92f;
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.9f;
											this.velocity.Y = this.velocity.Y + 0.1f;
										}
									}
									if (!flag50 && ((this.direction == 1 && this.velocity.X < 4f) || (this.direction == -1 && this.velocity.X > -4f)))
									{
										if ((this.direction == -1 && (double)this.velocity.X < 0.1) || (this.direction == 1 && (double)this.velocity.X > -0.1))
										{
											this.velocity.X = this.velocity.X + 0.2f * (float)this.direction;
											return;
										}
										this.velocity.X = this.velocity.X * 0.93f;
										return;
									}
								}
								else if ((this.direction == 1 && this.velocity.X < 3f) || (this.direction == -1 && this.velocity.X > -3f))
								{
									if ((this.direction == -1 && (double)this.velocity.X < 0.1) || (this.direction == 1 && (double)this.velocity.X > -0.1))
									{
										this.velocity.X = this.velocity.X + 0.2f * (float)this.direction;
										return;
									}
									this.velocity.X = this.velocity.X * 0.93f;
									return;
								}
							}
						}
						else if (this.aiStyle == 42)
						{
							this.TargetClosest(true);
							if (this.ai[0] == 0f)
							{
								if (this.target >= 0)
								{
									Vector2 vector80 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num675 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector80.X;
									float num676 = Main.player[this.target].position.Y - vector80.Y;
									float num677 = (float)Math.Sqrt((double)(num675 * num675 + num676 * num676));
									if (num677 < 200f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
									{
										this.ai[0] = 1f;
									}
								}
								if (this.velocity.X != 0f || this.velocity.Y < 0f || this.velocity.Y > 2f || this.life != this.lifeMax)
								{
									this.ai[0] = 1f;
									return;
								}
							}
							else
							{
								this.ai[0] += 1f;
								if (this.ai[0] >= 21f)
								{
									this.ai[0] = 21f;
									this.Transform(196);
									return;
								}
							}
						}
						else if (this.aiStyle == 43)
						{
							if (this.target == -1 || Main.player[this.target].dead || !Main.player[this.target].active)
							{
								this.TargetClosest(true);
							}
							if (this.ai[0] == -1f && Main.netMode != 1)
							{
								float num678 = this.ai[1];
								int num679;
								do
								{
									num679 = Main.rand.Next(3);
									if (num679 == 1)
									{
										num679 = 2;
									}
									else if (num679 == 2)
									{
										num679 = 3;
									}
								}
								while ((float)num679 == num678);
								this.ai[0] = (float)num679;
								this.ai[1] = 0f;
								this.ai[2] = 0f;
							}
							if (this.ai[0] == 0f)
							{
								if (this.ai[1] > 4f && this.ai[1] % 2f == 0f)
								{
									this.ai[0] = -1f;
									this.ai[1] = 0f;
									this.ai[2] = 0f;
									this.netUpdate = true;
								}
								else if (this.ai[1] % 2f == 0f)
								{
									this.TargetClosest(true);
									if (Math.Abs(this.position.Y + (float)(this.height / 2) - (Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2))) < 20f)
									{
										this.localAI[0] = 1f;
										this.ai[1] += 1f;
										this.ai[2] = 0f;
										float num680 = 12f;
										Vector2 vector81 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num681 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector81.X;
										float num682 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector81.Y;
										float num683 = (float)Math.Sqrt((double)(num681 * num681 + num682 * num682));
										num683 = num680 / num683;
										this.velocity.X = num681 * num683;
										this.velocity.Y = num682 * num683;
										this.spriteDirection = this.direction;
										Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
									}
									else
									{
										this.localAI[0] = 0f;
										if (this.position.Y + (float)(this.height / 2) < Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2))
										{
											this.velocity.Y = this.velocity.Y + 0.15f;
										}
										else
										{
											this.velocity.Y = this.velocity.Y - 0.15f;
										}
										if (this.velocity.Y < -12f)
										{
											this.velocity.Y = -12f;
										}
										if (this.velocity.Y > 12f)
										{
											this.velocity.Y = 12f;
										}
										if (Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) > 600f)
										{
											this.velocity.X = this.velocity.X + 0.15f * (float)this.direction;
										}
										else if (Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) < 300f)
										{
											this.velocity.X = this.velocity.X - 0.15f * (float)this.direction;
										}
										else
										{
											this.velocity.X = this.velocity.X * 0.8f;
										}
										if (this.velocity.X < -16f)
										{
											this.velocity.X = -16f;
										}
										if (this.velocity.X > 16f)
										{
											this.velocity.X = 16f;
										}
										this.spriteDirection = this.direction;
									}
								}
								else
								{
									if (this.velocity.X < 0f)
									{
										this.direction = -1;
									}
									else
									{
										this.direction = 1;
									}
									this.spriteDirection = this.direction;
									int num684 = 1;
									if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))
									{
										num684 = -1;
									}
									if (this.direction == num684 && Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) > 600f)
									{
										this.ai[2] = 1f;
									}
									if (this.ai[2] == 1f)
									{
										this.TargetClosest(true);
										this.spriteDirection = this.direction;
										this.localAI[0] = 0f;
										this.velocity *= 0.9f;
										if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < 0.1)
										{
											this.ai[2] = 0f;
											this.ai[1] += 1f;
										}
									}
									else
									{
										this.localAI[0] = 1f;
									}
								}
							}
							if (this.ai[0] == 2f)
							{
								this.TargetClosest(true);
								this.spriteDirection = this.direction;
								float num685 = 12f;
								float num686 = 0.07f;
								Vector2 vector82 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num687 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector82.X;
								float num688 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 200f - vector82.Y;
								float num689 = (float)Math.Sqrt((double)(num687 * num687 + num688 * num688));
								if (num689 < 200f)
								{
									this.ai[0] = 1f;
									this.ai[1] = 0f;
									this.netUpdate = true;
								}
								else
								{
									num689 = num685 / num689;
									if (this.velocity.X < num687)
									{
										this.velocity.X = this.velocity.X + num686;
										if (this.velocity.X < 0f && num687 > 0f)
										{
											this.velocity.X = this.velocity.X + num686;
										}
									}
									else if (this.velocity.X > num687)
									{
										this.velocity.X = this.velocity.X - num686;
										if (this.velocity.X > 0f && num687 < 0f)
										{
											this.velocity.X = this.velocity.X - num686;
										}
									}
									if (this.velocity.Y < num688)
									{
										this.velocity.Y = this.velocity.Y + num686;
										if (this.velocity.Y < 0f && num688 > 0f)
										{
											this.velocity.Y = this.velocity.Y + num686;
										}
									}
									else if (this.velocity.Y > num688)
									{
										this.velocity.Y = this.velocity.Y - num686;
										if (this.velocity.Y > 0f && num688 < 0f)
										{
											this.velocity.Y = this.velocity.Y - num686;
										}
									}
								}
							}
							if (this.ai[0] == 1f)
							{
								this.localAI[0] = 0f;
								this.TargetClosest(true);
								Vector2 vector83 = new Vector2(this.position.X + (float)(this.width / 2) + (float)(Main.rand.Next(20) * this.direction), this.position.Y + (float)this.height * 0.8f);
								Vector2 vector84 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num690 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector84.X;
								float num691 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector84.Y;
								float num692 = (float)Math.Sqrt((double)(num690 * num690 + num691 * num691));
								if (Collision.CanHit(vector83, 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									this.ai[1] += 1f;
									if (this.ai[1] > 40f)
									{
										this.ai[1] = 0f;
										this.ai[2] += 1f;
										Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
										if (Main.netMode != 1)
										{
											int num693 = Main.rand.Next(210, 212);
											int num694 = NPC.NewNPC((int)vector83.X, (int)vector83.Y, num693, 0);
											Main.npc[num694].velocity.X = (float)Main.rand.Next(-200, 201) * 0.002f;
											Main.npc[num694].velocity.Y = (float)Main.rand.Next(-200, 201) * 0.002f;
											Main.npc[num694].localAI[0] = 60f;
											Main.npc[num694].netUpdate = true;
										}
									}
								}
								if (num692 > 400f || !Collision.CanHit(new Vector2(vector83.X, vector83.Y - 30f), 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									float num695 = 14f;
									float num696 = 0.1f;
									vector84 = vector83;
									num690 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector84.X;
									num691 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector84.Y;
									num692 = (float)Math.Sqrt((double)(num690 * num690 + num691 * num691));
									num692 = num695 / num692;
									if (this.velocity.X < num690)
									{
										this.velocity.X = this.velocity.X + num696;
										if (this.velocity.X < 0f && num690 > 0f)
										{
											this.velocity.X = this.velocity.X + num696;
										}
									}
									else if (this.velocity.X > num690)
									{
										this.velocity.X = this.velocity.X - num696;
										if (this.velocity.X > 0f && num690 < 0f)
										{
											this.velocity.X = this.velocity.X - num696;
										}
									}
									if (this.velocity.Y < num691)
									{
										this.velocity.Y = this.velocity.Y + num696;
										if (this.velocity.Y < 0f && num691 > 0f)
										{
											this.velocity.Y = this.velocity.Y + num696;
										}
									}
									else if (this.velocity.Y > num691)
									{
										this.velocity.Y = this.velocity.Y - num696;
										if (this.velocity.Y > 0f && num691 < 0f)
										{
											this.velocity.Y = this.velocity.Y - num696;
										}
									}
								}
								else
								{
									this.velocity *= 0.9f;
								}
								this.spriteDirection = this.direction;
								if (this.ai[2] > 5f)
								{
									this.ai[0] = -1f;
									this.ai[1] = 1f;
									this.netUpdate = true;
								}
							}
							if (this.ai[0] == 3f)
							{
								float num697 = 4f;
								float num698 = 0.05f;
								Vector2 vector85 = new Vector2(this.position.X + (float)(this.width / 2) + (float)(Main.rand.Next(20) * this.direction), this.position.Y + (float)this.height * 0.8f);
								Vector2 vector86 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num699 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector86.X;
								float num700 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 300f - vector86.Y;
								float num701 = (float)Math.Sqrt((double)(num699 * num699 + num700 * num700));
								this.ai[1] += 1f;
								if (this.ai[1] % 40f == 39f && this.position.Y + (float)this.height < Main.player[this.target].position.Y && Collision.CanHit(vector85, 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
									if (Main.netMode != 1)
									{
										float num702 = 8f;
										float num703 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector85.X + (float)Main.rand.Next(-80, 81);
										float num704 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector85.Y + (float)Main.rand.Next(-40, 41);
										float num705 = (float)Math.Sqrt((double)(num703 * num703 + num704 * num704));
										num705 = num702 / num705;
										num703 *= num705;
										num704 *= num705;
										int num706 = 11;
										int num707 = 55;
										int num708 = Projectile.NewProjectile(vector85.X, vector85.Y, num703, num704, num707, num706, 0f, Main.myPlayer, 0f, 0f);
										Main.projectile[num708].timeLeft = 300;
									}
								}
								if (!Collision.CanHit(new Vector2(vector85.X, vector85.Y - 30f), 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									num697 = 14f;
									num698 = 0.1f;
									vector86 = vector85;
									num699 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector86.X;
									num700 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector86.Y;
									num701 = (float)Math.Sqrt((double)(num699 * num699 + num700 * num700));
									num701 = num697 / num701;
									if (this.velocity.X < num699)
									{
										this.velocity.X = this.velocity.X + num698;
										if (this.velocity.X < 0f && num699 > 0f)
										{
											this.velocity.X = this.velocity.X + num698;
										}
									}
									else if (this.velocity.X > num699)
									{
										this.velocity.X = this.velocity.X - num698;
										if (this.velocity.X > 0f && num699 < 0f)
										{
											this.velocity.X = this.velocity.X - num698;
										}
									}
									if (this.velocity.Y < num700)
									{
										this.velocity.Y = this.velocity.Y + num698;
										if (this.velocity.Y < 0f && num700 > 0f)
										{
											this.velocity.Y = this.velocity.Y + num698;
										}
									}
									else if (this.velocity.Y > num700)
									{
										this.velocity.Y = this.velocity.Y - num698;
										if (this.velocity.Y > 0f && num700 < 0f)
										{
											this.velocity.Y = this.velocity.Y - num698;
										}
									}
								}
								else if (num701 > 100f)
								{
									this.TargetClosest(true);
									this.spriteDirection = this.direction;
									num701 = num697 / num701;
									if (this.velocity.X < num699)
									{
										this.velocity.X = this.velocity.X + num698;
										if (this.velocity.X < 0f && num699 > 0f)
										{
											this.velocity.X = this.velocity.X + num698 * 2f;
										}
									}
									else if (this.velocity.X > num699)
									{
										this.velocity.X = this.velocity.X - num698;
										if (this.velocity.X > 0f && num699 < 0f)
										{
											this.velocity.X = this.velocity.X - num698 * 2f;
										}
									}
									if (this.velocity.Y < num700)
									{
										this.velocity.Y = this.velocity.Y + num698;
										if (this.velocity.Y < 0f && num700 > 0f)
										{
											this.velocity.Y = this.velocity.Y + num698 * 2f;
										}
									}
									else if (this.velocity.Y > num700)
									{
										this.velocity.Y = this.velocity.Y - num698;
										if (this.velocity.Y > 0f && num700 < 0f)
										{
											this.velocity.Y = this.velocity.Y - num698 * 2f;
										}
									}
								}
								if (this.ai[1] > 800f)
								{
									this.ai[0] = -1f;
									this.ai[1] = 3f;
									this.netUpdate = true;
									return;
								}
							}
						}
						else if (this.aiStyle == 44)
						{
							this.noGravity = true;
							if (this.collideX)
							{
								this.velocity.X = this.oldVelocity.X * -0.5f;
								if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
								{
									this.velocity.X = 2f;
								}
								if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
								{
									this.velocity.X = -2f;
								}
							}
							if (this.collideY)
							{
								this.velocity.Y = this.oldVelocity.Y * -0.5f;
								if (this.velocity.Y > 0f && this.velocity.Y < 1f)
								{
									this.velocity.Y = 1f;
								}
								if (this.velocity.Y < 0f && this.velocity.Y > -1f)
								{
									this.velocity.Y = -1f;
								}
							}
							this.TargetClosest(true);
							float num709 = 0.05f;
							float num710 = 3f;
							float num711 = Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)));
							float num712 = Main.player[this.target].position.Y - (float)(this.height / 2);
							if (num711 > 30f)
							{
								if (this.direction == -1 && this.velocity.X > -num710)
								{
									this.velocity.X = this.velocity.X - num709;
									if (this.velocity.X > num710)
									{
										this.velocity.X = this.velocity.X - num709;
									}
									else if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X - num709 / 2f;
									}
									if (this.velocity.X < -num710)
									{
										this.velocity.X = -num710;
									}
								}
								else if (this.direction == 1 && this.velocity.X < num710)
								{
									this.velocity.X = this.velocity.X + num709;
									if (this.velocity.X < -num710)
									{
										this.velocity.X = this.velocity.X + num709;
									}
									else if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X + num709 / 2f;
									}
									if (this.velocity.X > num710)
									{
										this.velocity.X = num710;
									}
								}
							}
							if (num711 > 100f)
							{
								num712 -= 50f;
							}
							if (this.position.Y < num712)
							{
								this.velocity.Y = this.velocity.Y + 0.01f;
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y + 0.01f;
								}
							}
							else
							{
								this.velocity.Y = this.velocity.Y - 0.01f;
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y - 0.01f;
								}
							}
							if (this.velocity.Y < -1f)
							{
								this.velocity.Y = -1f;
							}
							if (this.velocity.Y > 1f)
							{
								this.velocity.Y = 1f;
								return;
							}
						}
						else if (this.aiStyle == 45)
						{
							NPC.golemBoss = this.whoAmI;
							if (this.localAI[0] == 0f && Main.netMode != 1)
							{
								this.localAI[0] = 1f;
								NPC.NewNPC((int)this.center().X - 84, (int)this.center().Y - 9, 247, 0);
								NPC.NewNPC((int)this.center().X + 78, (int)this.center().Y - 9, 248, 0);
								NPC.NewNPC((int)this.center().X - 3, (int)this.center().Y - 57, 246, 0);
							}
							if (this.alpha > 0)
							{
								this.alpha -= 10;
								if (this.alpha < 0)
								{
									this.alpha = 0;
								}
								this.ai[1] = 0f;
							}
							bool flag51 = false;
							bool flag52 = false;
							bool flag53 = false;
							this.dontTakeDamage = false;
							for (int num713 = 0; num713 < 200; num713++)
							{
								if (Main.npc[num713].active && Main.npc[num713].type == 246)
								{
									flag51 = true;
								}
								if (Main.npc[num713].active && Main.npc[num713].type == 247)
								{
									flag52 = true;
								}
								if (Main.npc[num713].active && Main.npc[num713].type == 248)
								{
									flag53 = true;
								}
							}
							this.dontTakeDamage = flag51;
							if (!flag52)
							{
								int num714 = Dust.NewDust(new Vector2(this.center().X - 80f, this.center().Y - 9f), 8, 8, 31, 0f, 0f, 100, default(Color), 1f);
								Main.dust[num714].alpha += Main.rand.Next(100);
								Main.dust[num714].velocity *= 0.2f;
								Dust expr_2B758_cp_0 = Main.dust[num714];
								expr_2B758_cp_0.velocity.Y = expr_2B758_cp_0.velocity.Y - (0.5f + (float)Main.rand.Next(10) * 0.1f);
								Main.dust[num714].fadeIn = 0.5f + (float)Main.rand.Next(10) * 0.1f;
								if (Main.rand.Next(10) == 0)
								{
									num714 = Dust.NewDust(new Vector2(this.center().X - 80f, this.center().Y - 9f), 8, 8, 6, 0f, 0f, 0, default(Color), 1f);
									if (Main.rand.Next(20) != 0)
									{
										Main.dust[num714].noGravity = true;
										Main.dust[num714].scale *= 1f + (float)Main.rand.Next(10) * 0.1f;
										Dust expr_2B863_cp_0 = Main.dust[num714];
										expr_2B863_cp_0.velocity.Y = expr_2B863_cp_0.velocity.Y - 1f;
									}
								}
							}
							if (!flag53)
							{
								int num715 = Dust.NewDust(new Vector2(this.center().X + 62f, this.center().Y - 9f), 8, 8, 31, 0f, 0f, 100, default(Color), 1f);
								Main.dust[num715].alpha += Main.rand.Next(100);
								Main.dust[num715].velocity *= 0.2f;
								Dust expr_2B920_cp_0 = Main.dust[num715];
								expr_2B920_cp_0.velocity.Y = expr_2B920_cp_0.velocity.Y - (0.5f + (float)Main.rand.Next(10) * 0.1f);
								Main.dust[num715].fadeIn = 0.5f + (float)Main.rand.Next(10) * 0.1f;
								if (Main.rand.Next(10) == 0)
								{
									num715 = Dust.NewDust(new Vector2(this.center().X + 62f, this.center().Y - 9f), 8, 8, 6, 0f, 0f, 0, default(Color), 1f);
									if (Main.rand.Next(20) != 0)
									{
										Main.dust[num715].noGravity = true;
										Main.dust[num715].scale *= 1f + (float)Main.rand.Next(10) * 0.1f;
										Dust expr_2BA2B_cp_0 = Main.dust[num715];
										expr_2BA2B_cp_0.velocity.Y = expr_2BA2B_cp_0.velocity.Y - 1f;
									}
								}
							}
							if (this.ai[0] == 0f)
							{
								if (this.velocity.Y == 0f)
								{
									this.velocity.X = this.velocity.X * 0.8f;
									this.ai[1] += 1f;
									if (this.ai[1] > 0f)
									{
										if (!flag52)
										{
											this.ai[1] += 2f;
										}
										if (!flag53)
										{
											this.ai[1] += 2f;
										}
										if (!flag51)
										{
											this.ai[1] += 4f;
										}
										if (this.life < this.lifeMax)
										{
											this.ai[1] += 2f;
										}
										if (this.life < this.lifeMax / 2)
										{
											this.ai[1] += 4f;
										}
										if (this.life < this.lifeMax / 3)
										{
											this.ai[1] += 8f;
										}
									}
									if (this.ai[1] >= 300f)
									{
										this.ai[1] = -20f;
										this.frameCounter = 0.0;
									}
									else if (this.ai[1] == -1f)
									{
										this.TargetClosest(true);
										this.velocity.X = (float)(4 * this.direction);
										this.velocity.Y = -12.1f;
										this.ai[0] = 1f;
										this.ai[1] = 0f;
									}
								}
							}
							else if (this.ai[0] == 1f)
							{
								if (this.velocity.Y == 0f)
								{
									Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
									this.ai[0] = 0f;
									for (int num716 = (int)this.position.X - 20; num716 < (int)this.position.X + this.width + 40; num716 += 20)
									{
										for (int num717 = 0; num717 < 4; num717++)
										{
											int num718 = Dust.NewDust(new Vector2(this.position.X - 20f, this.position.Y + (float)this.height), this.width + 20, 4, 31, 0f, 0f, 100, default(Color), 1.5f);
											Main.dust[num718].velocity *= 0.2f;
										}
										int num719 = Gore.NewGore(new Vector2((float)(num716 - 20), this.position.Y + (float)this.height - 8f), default(Vector2), Main.rand.Next(61, 64), 1f);
										Main.gore[num719].velocity *= 0.4f;
									}
								}
								else
								{
									this.TargetClosest(true);
									if (this.position.X < Main.player[this.target].position.X && this.position.X + (float)this.width > Main.player[this.target].position.X + (float)Main.player[this.target].width)
									{
										this.velocity.X = this.velocity.X * 0.9f;
										this.velocity.Y = this.velocity.Y + 0.2f;
									}
									else
									{
										if (this.direction < 0)
										{
											this.velocity.X = this.velocity.X - 0.2f;
										}
										else if (this.direction > 0)
										{
											this.velocity.X = this.velocity.X + 0.2f;
										}
										float num720 = 3f;
										if (this.life < this.lifeMax)
										{
											num720 += 1f;
										}
										if (this.life < this.lifeMax / 2)
										{
											num720 += 1f;
										}
										if (this.life < this.lifeMax / 4)
										{
											num720 += 1f;
										}
										if (this.velocity.X < -num720)
										{
											this.velocity.X = -num720;
										}
										if (this.velocity.X > num720)
										{
											this.velocity.X = num720;
										}
									}
								}
							}
							if (this.target <= 0 || this.target == 255 || Main.player[this.target].dead)
							{
								this.TargetClosest(true);
							}
							int num721 = 3000;
							if (Math.Abs(this.center().X - Main.player[this.target].center().X) + Math.Abs(this.center().Y - Main.player[this.target].center().Y) > (float)num721)
							{
								this.TargetClosest(true);
								if (Math.Abs(this.center().X - Main.player[this.target].center().X) + Math.Abs(this.center().Y - Main.player[this.target].center().Y) > (float)num721)
								{
									this.active = false;
									return;
								}
							}
						}
						else if (this.aiStyle == 46)
						{
							if (NPC.golemBoss < 0)
							{
								this.StrikeNPC(9999, 0f, 0, false, false);
								return;
							}
							this.noTileCollide = false;
							float num722 = 12f;
							Vector2 vector87 = new Vector2(this.center().X, this.center().Y);
							float num723 = Main.npc[NPC.golemBoss].center().X - vector87.X;
							float num724 = Main.npc[NPC.golemBoss].center().Y - vector87.Y;
							num724 -= 57f;
							num723 -= 3f;
							float num725 = (float)Math.Sqrt((double)(num723 * num723 + num724 * num724));
							if (num725 < 20f)
							{
								this.rotation = 0f;
								this.velocity.X = num723;
								this.velocity.Y = num724;
							}
							else
							{
								num725 = num722 / num725;
								this.velocity.X = num723 * num725;
								this.velocity.Y = num724 * num725;
								this.rotation = this.velocity.X * 0.1f;
							}
							if (this.alpha > 0)
							{
								this.alpha -= 10;
								if (this.alpha < 0)
								{
									this.alpha = 0;
								}
								this.ai[1] = 30f;
							}
							if (this.ai[0] == 0f)
							{
								this.ai[1] += 1f;
								int num726 = 300;
								if (this.ai[1] < 20f || this.ai[1] > (float)(num726 - 20))
								{
									this.localAI[0] = 1f;
								}
								else
								{
									this.localAI[0] = 0f;
								}
								if (this.ai[1] >= (float)num726)
								{
									this.TargetClosest(true);
									this.ai[1] = 0f;
									Vector2 vector88 = new Vector2(this.center().X, this.center().Y + 10f);
									float num727 = 8f;
									float num728 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector88.X;
									float num729 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector88.Y;
									float num730 = (float)Math.Sqrt((double)(num728 * num728 + num729 * num729));
									num730 = num727 / num730;
									num728 *= num730;
									num729 *= num730;
									int num731 = 18;
									int num732 = 258;
									if (Main.netMode != 1)
									{
										Projectile.NewProjectile(vector88.X, vector88.Y, num728, num729, num732, num731, 0f, Main.myPlayer, 0f, 0f);
									}
								}
							}
							else if (this.ai[0] == 1f)
							{
								this.TargetClosest(true);
								Vector2 vector89 = new Vector2(this.center().X, this.center().Y + 10f);
								if (Main.player[this.target].center().X < this.center().X - (float)this.width)
								{
									this.localAI[1] = -1f;
									vector89.X -= 40f;
								}
								else if (Main.player[this.target].center().X > this.center().X + (float)this.width)
								{
									this.localAI[1] = 1f;
									vector89.X += 40f;
								}
								else
								{
									this.localAI[1] = 0f;
								}
								this.ai[1] += 1f;
								if ((double)this.life < (double)this.lifeMax * 0.4)
								{
									this.ai[1] += 1f;
								}
								if ((double)this.life < (double)this.lifeMax * 0.3)
								{
									this.ai[1] += 1f;
								}
								if ((double)this.life < (double)this.lifeMax * 0.2)
								{
									this.ai[1] += 1f;
								}
								if ((double)this.life < (double)this.lifeMax * 0.1)
								{
									this.ai[1] += 1f;
								}
								int num733 = 300;
								if (this.ai[1] < 20f || this.ai[1] > (float)(num733 - 20))
								{
									this.localAI[0] = 1f;
								}
								else
								{
									this.localAI[0] = 0f;
								}
								if (this.ai[1] >= (float)num733)
								{
									this.TargetClosest(true);
									this.ai[1] = 0f;
									float num734 = 8f;
									float num735 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector89.X;
									float num736 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector89.Y;
									float num737 = (float)Math.Sqrt((double)(num735 * num735 + num736 * num736));
									num737 = num734 / num737;
									num735 *= num737;
									num736 *= num737;
									int num738 = 24;
									int num739 = 258;
									if (Main.netMode != 1)
									{
										Projectile.NewProjectile(vector89.X, vector89.Y, num735, num736, num739, num738, 0f, Main.myPlayer, 0f, 0f);
									}
								}
								this.ai[2] += 1f;
								if (this.life < this.lifeMax / 3)
								{
									this.ai[2] += 1f;
								}
								if (this.life < this.lifeMax / 4)
								{
									this.ai[2] += 1f;
								}
								if (this.life < this.lifeMax / 5)
								{
									this.ai[2] += 1f;
								}
								if (this.ai[2] > (float)(60 + Main.rand.Next(600)))
								{
									this.ai[2] = 0f;
									if (this.localAI[1] != 0f)
									{
										vector89 = new Vector2(this.center().X, this.center().Y - 22f);
										if (this.localAI[1] == -1f)
										{
											vector89.X -= 30f;
										}
										else if (this.localAI[1] == 1f)
										{
											vector89.X += 30f;
										}
										float num740 = 12f;
										float num741 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector89.X;
										float num742 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector89.Y;
										float num743 = (float)Math.Sqrt((double)(num741 * num741 + num742 * num742));
										num743 = num740 / num743;
										num741 *= num743;
										num742 *= num743;
										int num744 = 29;
										int num745 = 259;
										vector89.X += num741 * 3f;
										vector89.Y += num742 * 3f;
										if (Main.netMode != 1)
										{
											int num746 = Projectile.NewProjectile(vector89.X, vector89.Y, num741, num742, num745, num744, 0f, Main.myPlayer, 0f, 0f);
											Main.projectile[num746].timeLeft = 300;
										}
									}
								}
							}
							if (this.life < this.lifeMax / 2)
							{
								this.ai[0] = 1f;
								return;
							}
							this.ai[0] = 0f;
							return;
						}
						else if (this.aiStyle == 47)
						{
							if (NPC.golemBoss < 0)
							{
								this.StrikeNPC(9999, 0f, 0, false, false);
								return;
							}
							if (this.alpha > 0)
							{
								this.alpha -= 10;
								if (this.alpha < 0)
								{
									this.alpha = 0;
								}
								this.ai[1] = 0f;
							}
							if (this.ai[0] == 0f)
							{
								this.noTileCollide = true;
								float num747 = 8f;
								if (this.life < this.lifeMax / 2)
								{
									num747 += 2f;
								}
								if (this.life < this.lifeMax / 4)
								{
									num747 += 2f;
								}
								if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
								{
									num747 += 8f;
								}
								Vector2 vector90 = new Vector2(this.center().X, this.center().Y);
								float num748 = Main.npc[NPC.golemBoss].center().X - vector90.X;
								float num749 = Main.npc[NPC.golemBoss].center().Y - vector90.Y;
								num749 -= 9f;
								if (this.type == 247)
								{
									num748 -= 84f;
								}
								else
								{
									num748 += 78f;
								}
								float num750 = (float)Math.Sqrt((double)(num748 * num748 + num749 * num749));
								if (num750 < 12f + num747)
								{
									this.rotation = 0f;
									this.velocity.X = num748;
									this.velocity.Y = num749;
									this.ai[1] += 1f;
									if (this.life < this.lifeMax / 2)
									{
										this.ai[1] += 1f;
									}
									if (this.life < this.lifeMax / 4)
									{
										this.ai[1] += 1f;
									}
									if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
									{
										this.ai[1] += 10f;
									}
									if (this.ai[1] >= 60f)
									{
										this.TargetClosest(true);
										if ((this.type == 247 && this.center().X + 100f > Main.player[this.target].center().X) || (this.type == 248 && this.center().X - 100f < Main.player[this.target].center().X))
										{
											this.ai[1] = 0f;
											this.ai[0] = 1f;
											return;
										}
										this.ai[1] = 0f;
										return;
									}
								}
								else
								{
									num750 = num747 / num750;
									this.velocity.X = num748 * num750;
									this.velocity.Y = num749 * num750;
									this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
									if (this.type == 247)
									{
										this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
										return;
									}
								}
							}
							else if (this.ai[0] == 1f)
							{
								this.noTileCollide = false;
								float num751 = 10f;
								if (this.life < this.lifeMax / 2)
								{
									num751 += 4f;
								}
								if (this.life < this.lifeMax / 4)
								{
									num751 += 4f;
								}
								if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
								{
									num751 += 10f;
								}
								Vector2 vector91 = new Vector2(this.center().X, this.center().Y);
								float num752 = Main.player[this.target].center().X - vector91.X;
								float num753 = Main.player[this.target].center().Y - vector91.Y;
								float num754 = (float)Math.Sqrt((double)(num752 * num752 + num753 * num753));
								num754 = num751 / num754;
								this.velocity.X = num752 * num754;
								this.velocity.Y = num753 * num754;
								this.ai[0] = 2f;
								this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
								if (this.type == 247)
								{
									this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
									return;
								}
							}
							else if (this.ai[0] == 2f)
							{
								Vector2 vector92 = new Vector2(this.center().X, this.center().Y);
								float num755 = Main.npc[NPC.golemBoss].center().X - vector92.X;
								float num756 = Main.npc[NPC.golemBoss].center().Y - vector92.Y;
								num755 += Main.npc[NPC.golemBoss].velocity.X;
								num756 += Main.npc[NPC.golemBoss].velocity.Y;
								num756 -= 9f;
								if (this.type == 247)
								{
									num755 -= 84f;
								}
								else
								{
									num755 += 78f;
								}
								float num757 = (float)Math.Sqrt((double)(num755 * num755 + num756 * num756));
								if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
								{
									this.knockBackResist = 0f;
									if (num757 > 700f || this.collideX || this.collideY)
									{
										this.noTileCollide = true;
										this.ai[0] = 0f;
										return;
									}
								}
								else if (num757 > 600f || this.collideX || this.collideY || this.justHit)
								{
									this.noTileCollide = true;
									this.ai[0] = 0f;
									return;
								}
							}
							else if (this.ai[0] == 3f)
							{
								this.noTileCollide = true;
								float num758 = 12f;
								float num759 = 0.4f;
								Vector2 vector93 = new Vector2(this.center().X, this.center().Y);
								float num760 = Main.player[this.target].center().X - vector93.X;
								float num761 = Main.player[this.target].center().Y - vector93.Y;
								float num762 = (float)Math.Sqrt((double)(num760 * num760 + num761 * num761));
								num762 = num758 / num762;
								num760 *= num762;
								num761 *= num762;
								if (this.velocity.X < num760)
								{
									this.velocity.X = this.velocity.X + num759;
									if (this.velocity.X < 0f && num760 > 0f)
									{
										this.velocity.X = this.velocity.X + num759 * 2f;
									}
								}
								else if (this.velocity.X > num760)
								{
									this.velocity.X = this.velocity.X - num759;
									if (this.velocity.X > 0f && num760 < 0f)
									{
										this.velocity.X = this.velocity.X - num759 * 2f;
									}
								}
								if (this.velocity.Y < num761)
								{
									this.velocity.Y = this.velocity.Y + num759;
									if (this.velocity.Y < 0f && num761 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num759 * 2f;
									}
								}
								else if (this.velocity.Y > num761)
								{
									this.velocity.Y = this.velocity.Y - num759;
									if (this.velocity.Y > 0f && num761 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num759 * 2f;
									}
								}
								this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
								if (this.type == 247)
								{
									this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
									return;
								}
							}
						}
						else if (this.aiStyle == 48)
						{
							if (NPC.golemBoss < 0)
							{
								this.StrikeNPC(9999, 0f, 0, false, false);
								return;
							}
							this.TargetClosest(true);
							float num763 = 7f;
							float num764 = 0.05f;
							Vector2 vector94 = new Vector2(this.center().X, this.center().Y);
							float num765 = Main.player[this.target].center().X - vector94.X;
							float num766 = Main.player[this.target].center().Y - vector94.Y - 300f;
							float num767 = (float)Math.Sqrt((double)(num765 * num765 + num766 * num766));
							num767 = num763 / num767;
							num765 *= num767;
							num766 *= num767;
							if (this.velocity.X < num765)
							{
								this.velocity.X = this.velocity.X + num764;
								if (this.velocity.X < 0f && num765 > 0f)
								{
									this.velocity.X = this.velocity.X + num764;
								}
							}
							else if (this.velocity.X > num765)
							{
								this.velocity.X = this.velocity.X - num764;
								if (this.velocity.X > 0f && num765 < 0f)
								{
									this.velocity.X = this.velocity.X - num764;
								}
							}
							if (this.velocity.Y < num766)
							{
								this.velocity.Y = this.velocity.Y + num764;
								if (this.velocity.Y < 0f && num766 > 0f)
								{
									this.velocity.Y = this.velocity.Y + num764;
								}
							}
							else if (this.velocity.Y > num766)
							{
								this.velocity.Y = this.velocity.Y - num764;
								if (this.velocity.Y > 0f && num766 < 0f)
								{
									this.velocity.Y = this.velocity.Y - num764;
								}
							}
							this.ai[1] += 1f;
							if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.8)
							{
								this.ai[1] += 1f;
							}
							if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.6)
							{
								this.ai[1] += 1f;
							}
							if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.4)
							{
								this.ai[1] += 1f;
							}
							if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.2)
							{
								this.ai[1] += 1f;
							}
							int num768 = 300;
							if (this.ai[1] < 20f || this.ai[1] > (float)(num768 - 20))
							{
								this.localAI[0] = 1f;
							}
							else
							{
								this.localAI[0] = 0f;
							}
							if (this.ai[1] >= (float)num768)
							{
								this.TargetClosest(true);
								this.ai[1] = 0f;
								Vector2 vector95 = new Vector2(this.center().X, this.center().Y - 10f);
								float num769 = 8f;
								float num770 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector95.X;
								float num771 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector95.Y;
								float num772 = (float)Math.Sqrt((double)(num770 * num770 + num771 * num771));
								num772 = num769 / num772;
								num770 *= num772;
								num771 *= num772;
								int num773 = 20;
								int num774 = 258;
								if (Main.netMode != 1)
								{
									Projectile.NewProjectile(vector95.X, vector95.Y, num770, num771, num774, num773, 0f, Main.myPlayer, 0f, 0f);
								}
							}
							if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 2)
							{
								this.ai[2] += 1f;
							}
							if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 3)
							{
								this.ai[2] += 1f;
							}
							if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 4)
							{
								this.ai[2] += 1f;
							}
							if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 5)
							{
								this.ai[2] += 1f;
							}
							if (this.ai[2] > (float)(80 + Main.rand.Next(1200)))
							{
								this.ai[2] = 0f;
								for (int num775 = 0; num775 < 2; num775++)
								{
									Vector2 vector96 = new Vector2(this.center().X, this.center().Y - 50f);
									if (num775 == 0)
									{
										vector96.X -= 14f;
									}
									else if (num775 == 1)
									{
										vector96.X += 14f;
									}
									float num776 = 12f;
									float num777 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector96.X;
									float num778 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector96.Y;
									float num779 = (float)Math.Sqrt((double)(num777 * num777 + num778 * num778));
									num779 = num776 / num779;
									num777 *= num779;
									num778 *= num779;
									int num780 = 25;
									int num781 = 259;
									vector96.X += num777 * 3f;
									vector96.Y += num778 * 3f;
									if (Main.netMode != 1)
									{
										int num782 = Projectile.NewProjectile(vector96.X, vector96.Y, num777, num778, num781, num780, 0f, Main.myPlayer, 0f, 0f);
										Main.projectile[num782].timeLeft = 300;
									}
								}
								return;
							}
						}
						else if (this.aiStyle == 49)
						{
							this.noGravity = true;
							this.TargetClosest(true);
							float num783 = 4f;
							float num784 = 0.25f;
							Vector2 vector97 = new Vector2(this.center().X, this.center().Y);
							float num785 = Main.player[this.target].center().X - vector97.X;
							float num786 = Main.player[this.target].center().Y - vector97.Y - 200f;
							float num787 = (float)Math.Sqrt((double)(num785 * num785 + num786 * num786));
							if (num787 < 20f)
							{
								num785 = this.velocity.X;
								num786 = this.velocity.Y;
							}
							else
							{
								num787 = num783 / num787;
								num785 *= num787;
								num786 *= num787;
							}
							if (this.velocity.X < num785)
							{
								this.velocity.X = this.velocity.X + num784;
								if (this.velocity.X < 0f && num785 > 0f)
								{
									this.velocity.X = this.velocity.X + num784 * 2f;
								}
							}
							else if (this.velocity.X > num785)
							{
								this.velocity.X = this.velocity.X - num784;
								if (this.velocity.X > 0f && num785 < 0f)
								{
									this.velocity.X = this.velocity.X - num784 * 2f;
								}
							}
							if (this.velocity.Y < num786)
							{
								this.velocity.Y = this.velocity.Y + num784;
								if (this.velocity.Y < 0f && num786 > 0f)
								{
									this.velocity.Y = this.velocity.Y + num784 * 2f;
								}
							}
							else if (this.velocity.Y > num786)
							{
								this.velocity.Y = this.velocity.Y - num784;
								if (this.velocity.Y > 0f && num786 < 0f)
								{
									this.velocity.Y = this.velocity.Y - num784 * 2f;
								}
							}
							if (this.position.X + (float)this.width > Main.player[this.target].position.X && this.position.X < Main.player[this.target].position.X + (float)Main.player[this.target].width && this.position.Y + (float)this.height < Main.player[this.target].position.Y && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && Main.netMode != 1)
							{
								this.ai[0] += 1f;
								if (this.ai[0] > 8f)
								{
									this.ai[0] = 0f;
									int num788 = (int)(this.position.X + 10f + (float)Main.rand.Next(this.width - 20));
									int num789 = (int)(this.position.Y + (float)this.height + 4f);
									Projectile.NewProjectile((float)num788, (float)num789, 0f, 5f, 264, 20, 0f, Main.myPlayer, 0f, 0f);
									return;
								}
							}
						}
						else
						{
							if (this.aiStyle == 50)
							{
								if (this.timeLeft > 5)
								{
									this.timeLeft = 5;
								}
								this.noTileCollide = true;
								this.velocity.Y = this.velocity.Y + 0.02f;
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.99f;
								}
								if (this.velocity.Y > 1f)
								{
									this.velocity.Y = 1f;
								}
								this.TargetClosest(true);
								if (this.position.X + (float)this.width < Main.player[this.target].position.X)
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.98f;
									}
									this.velocity.X = this.velocity.X + 0.1f;
								}
								else if (this.position.X > Main.player[this.target].position.X + (float)Main.player[this.target].width)
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.98f;
									}
									this.velocity.X = this.velocity.X - 0.1f;
								}
								if (this.velocity.X > 5f || this.velocity.X < -5f)
								{
									this.velocity.X = this.velocity.X * 0.97f;
								}
								this.rotation = this.velocity.X * 0.2f;
								return;
							}
							if (this.aiStyle == 51)
							{
								bool flag54 = false;
								this.TargetClosest(true);
								if (Main.netMode != 1)
								{
									int num790 = 6000;
									if (Math.Abs(this.center().X - Main.player[this.target].center().X) + Math.Abs(this.center().Y - Main.player[this.target].center().Y) > (float)num790)
									{
										this.active = false;
										this.life = 0;
										if (Main.netMode == 2)
										{
											NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0);
										}
									}
								}
								NPC.plantBoss = this.whoAmI;
								if (this.localAI[0] == 0f && Main.netMode != 1)
								{
									this.localAI[0] = 1f;
									NPC.NewNPC((int)this.center().X, (int)this.center().Y, 263, this.whoAmI);
									NPC.NewNPC((int)this.center().X, (int)this.center().Y, 263, this.whoAmI);
									NPC.NewNPC((int)this.center().X, (int)this.center().Y, 263, this.whoAmI);
								}
								int[] array = new int[3];
								float num791 = 0f;
								float num792 = 0f;
								int num793 = 0;
								for (int num794 = 0; num794 < 200; num794++)
								{
									if (Main.npc[num794].active && Main.npc[num794].aiStyle == 52)
									{
										num791 += Main.npc[num794].center().X;
										num792 += Main.npc[num794].center().Y;
										array[num793] = num794;
										num793++;
										if (num793 > 2)
										{
											break;
										}
									}
								}
								num791 /= (float)num793;
								num792 /= (float)num793;
								float num795 = 2.5f;
								float num796 = 0.025f;
								if (this.life < this.lifeMax / 2)
								{
									num795 = 5f;
									num796 = 0.05f;
								}
								if (this.life < this.lifeMax / 4)
								{
									num795 = 7f;
								}
								if (!Main.player[this.target].zoneJungle || (double)Main.player[this.target].position.Y < Main.worldSurface * 16.0 || Main.player[this.target].position.Y > (float)((Main.maxTilesY - 200) * 16))
								{
									flag54 = true;
									num795 += 8f;
									num796 = 0.15f;
								}
								Vector2 vector98 = new Vector2(num791, num792);
								float num797 = Main.player[this.target].center().X - vector98.X;
								float num798 = Main.player[this.target].center().Y - vector98.Y;
								float num799 = (float)Math.Sqrt((double)(num797 * num797 + num798 * num798));
								int num800 = 500;
								if (flag54)
								{
									num800 += 350;
								}
								if (num799 >= (float)num800)
								{
									num799 = (float)num800 / num799;
									num797 *= num799;
									num798 *= num799;
								}
								num791 += num797;
								num792 += num798;
								vector98 = new Vector2(this.center().X, this.center().Y);
								num797 = num791 - vector98.X;
								num798 = num792 - vector98.Y;
								num799 = (float)Math.Sqrt((double)(num797 * num797 + num798 * num798));
								if (num799 < num795)
								{
									num797 = this.velocity.X;
									num798 = this.velocity.Y;
								}
								else
								{
									num799 = num795 / num799;
									num797 *= num799;
									num798 *= num799;
								}
								if (this.velocity.X < num797)
								{
									this.velocity.X = this.velocity.X + num796;
									if (this.velocity.X < 0f && num797 > 0f)
									{
										this.velocity.X = this.velocity.X + num796 * 2f;
									}
								}
								else if (this.velocity.X > num797)
								{
									this.velocity.X = this.velocity.X - num796;
									if (this.velocity.X > 0f && num797 < 0f)
									{
										this.velocity.X = this.velocity.X - num796 * 2f;
									}
								}
								if (this.velocity.Y < num798)
								{
									this.velocity.Y = this.velocity.Y + num796;
									if (this.velocity.Y < 0f && num798 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num796 * 2f;
									}
								}
								else if (this.velocity.Y > num798)
								{
									this.velocity.Y = this.velocity.Y - num796;
									if (this.velocity.Y > 0f && num798 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num796 * 2f;
									}
								}
								Vector2 vector99 = new Vector2(this.center().X, this.center().Y);
								float num801 = Main.player[this.target].center().X - vector99.X;
								float num802 = Main.player[this.target].center().Y - vector99.Y;
								this.rotation = (float)Math.Atan2((double)num802, (double)num801) + 1.57f;
								if (this.life > this.lifeMax / 2)
								{
									this.defense = 36;
									this.damage = 50;
									if (flag54)
									{
										this.defense *= 2;
										this.damage *= 2;
									}
									if (Main.netMode != 1)
									{
										this.localAI[1] += 1f;
										if ((double)this.life < (double)this.lifeMax * 0.9)
										{
											this.localAI[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.8)
										{
											this.localAI[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.7)
										{
											this.localAI[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.6)
										{
											this.localAI[1] += 1f;
										}
										if (flag54)
										{
											this.localAI[1] += 3f;
										}
										if (this.localAI[1] > 80f)
										{
											this.localAI[1] = 0f;
											if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
											{
												Vector2 vector100 = new Vector2(this.center().X, this.center().Y);
												float num803 = 15f;
												float num804 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector100.X;
												float num805 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector100.Y;
												float num806 = (float)Math.Sqrt((double)(num804 * num804 + num805 * num805));
												num806 = num803 / num806;
												num804 *= num806;
												num805 *= num806;
												int num807 = 22;
												int num808 = 275;
												if ((double)this.life < (double)this.lifeMax * 0.8 && Main.rand.Next(4) == 0)
												{
													num807 = 27;
													this.localAI[1] = -30f;
													num808 = 276;
												}
												else if ((double)this.life < (double)this.lifeMax * 0.8 && Main.rand.Next(8) == 0)
												{
													num807 = 31;
													this.localAI[1] = -120f;
													num808 = 277;
												}
												if (flag54)
												{
													num807 *= 2;
												}
												vector100.X += num804 * 3f;
												vector100.Y += num805 * 3f;
												int num809 = Projectile.NewProjectile(vector100.X, vector100.Y, num804, num805, num808, num807, 0f, Main.myPlayer, 0f, 0f);
												if (num808 != 277)
												{
													Main.projectile[num809].timeLeft = 300;
													return;
												}
											}
										}
									}
								}
								else
								{
									this.defense = 10;
									this.damage = 70;
									if (flag54)
									{
										this.defense *= 4;
										this.damage *= 2;
									}
									if (this.localAI[0] == 1f && Main.netMode != 1)
									{
										this.localAI[0] = 2f;
										for (int num810 = 0; num810 < 8; num810++)
										{
											NPC.NewNPC((int)this.center().X, (int)this.center().Y, 264, this.whoAmI);
										}
									}
									if (this.localAI[2] == 0f)
									{
										Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 378, this.scale);
										Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 379, this.scale);
										Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 380, this.scale);
										this.localAI[2] = 1f;
									}
									this.localAI[1] += 1f;
									if ((double)this.life < (double)this.lifeMax * 0.4)
									{
										this.localAI[1] += 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.3)
									{
										this.localAI[1] += 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.2)
									{
										this.localAI[1] += 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.1)
									{
										this.localAI[1] += 1f;
									}
									if (this.localAI[1] >= 350f)
									{
										float num811 = 8f;
										Vector2 vector101 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num812 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector101.X + (float)Main.rand.Next(-10, 11);
										float num813 = Math.Abs(num812 * 0.2f);
										float num814 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector101.Y + (float)Main.rand.Next(-10, 11);
										if (num814 > 0f)
										{
											num813 = 0f;
										}
										num814 -= num813;
										float num815 = (float)Math.Sqrt((double)(num812 * num812 + num814 * num814));
										num815 = num811 / num815;
										num812 *= num815;
										num814 *= num815;
										int num816 = NPC.NewNPC((int)this.center().X, (int)this.center().Y, 265, 0);
										Main.npc[num816].velocity.X = num812;
										Main.npc[num816].velocity.Y = num814;
										Main.npc[num816].netUpdate = true;
										this.localAI[1] = 0f;
										return;
									}
								}
							}
							else if (this.aiStyle == 52)
							{
								bool flag55 = false;
								if (!Main.player[Main.npc[NPC.plantBoss].target].zoneJungle || (double)Main.player[Main.npc[NPC.plantBoss].target].position.Y < Main.worldSurface * 16.0 || Main.player[Main.npc[NPC.plantBoss].target].position.Y > (float)((Main.maxTilesY - 200) * 16))
								{
									this.localAI[0] -= 4f;
									flag55 = true;
								}
								if (NPC.plantBoss < 0)
								{
									this.StrikeNPC(9999, 0f, 0, false, false);
									this.netUpdate = true;
									return;
								}
								if (Main.netMode == 1)
								{
									if (this.ai[0] == 0f)
									{
										this.ai[0] = (float)((int)(this.center().X / 16f));
									}
									if (this.ai[1] == 0f)
									{
										this.ai[1] = (float)((int)(this.center().X / 16f));
									}
								}
								if (Main.netMode != 1)
								{
									if (this.ai[0] == 0f || this.ai[1] == 0f)
									{
										this.localAI[0] = 0f;
									}
									this.localAI[0] -= 1f;
									if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)
									{
										this.localAI[0] -= 2f;
									}
									if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 4)
									{
										this.localAI[0] -= 2f;
									}
									if (flag55)
									{
										this.localAI[0] -= 6f;
									}
									if (this.localAI[0] <= 0f && this.ai[0] != 0f)
									{
										for (int num817 = 0; num817 < 200; num817++)
										{
											if (num817 != this.whoAmI && Main.npc[num817].active && Main.npc[num817].type == this.type && (Main.npc[num817].velocity.X != 0f || Main.npc[num817].velocity.Y != 0f))
											{
												this.localAI[0] = (float)Main.rand.Next(60, 300);
											}
										}
									}
									if (this.localAI[0] <= 0f)
									{
										this.localAI[0] = (float)Main.rand.Next(300, 600);
										bool flag56 = false;
										int num818 = 0;
										while (!flag56 && num818 <= 1000)
										{
											num818++;
											int num819 = (int)(Main.player[Main.npc[NPC.plantBoss].target].center().X / 16f);
											int num820 = (int)(Main.player[Main.npc[NPC.plantBoss].target].center().Y / 16f);
											if (this.ai[0] == 0f)
											{
												num819 = (int)((Main.player[Main.npc[NPC.plantBoss].target].center().X + Main.npc[NPC.plantBoss].center().X) / 32f);
												num820 = (int)((Main.player[Main.npc[NPC.plantBoss].target].center().Y + Main.npc[NPC.plantBoss].center().Y) / 32f);
											}
											int num821 = 20;
											num821 += (int)(100f * ((float)num818 / 1000f));
											int num822 = num819 + Main.rand.Next(-num821, num821 + 1);
											int num823 = num820 + Main.rand.Next(-num821, num821 + 1);
											if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2 && Main.rand.Next(6) == 0)
											{
												this.TargetClosest(true);
												int num824 = (int)(Main.player[this.target].center().X / 16f);
												int num825 = (int)(Main.player[this.target].center().Y / 16f);
												if (Main.tile[num824, num825].wall > 0)
												{
													num822 = num824;
													num823 = num825;
												}
											}
											if (WorldGen.SolidTile(num822, num823) || (Main.tile[num822, num823].wall > 0 && (num818 > 500 || Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)))
											{
												flag56 = true;
												this.ai[0] = (float)num822;
												this.ai[1] = (float)num823;
												this.netUpdate = true;
											}
										}
									}
								}
								if (this.ai[0] > 0f && this.ai[1] > 0f)
								{
									float num826 = 6f;
									if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)
									{
										num826 = 8f;
									}
									if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 4)
									{
										num826 = 10f;
									}
									if (flag55)
									{
										num826 *= 2f;
									}
									Vector2 vector102 = new Vector2(this.center().X, this.center().Y);
									float num827 = this.ai[0] * 16f - 8f - vector102.X;
									float num828 = this.ai[1] * 16f - 8f - vector102.Y;
									float num829 = (float)Math.Sqrt((double)(num827 * num827 + num828 * num828));
									if (num829 < 12f + num826)
									{
										this.velocity.X = num827;
										this.velocity.Y = num828;
									}
									else
									{
										num829 = num826 / num829;
										this.velocity.X = num827 * num829;
										this.velocity.Y = num828 * num829;
									}
									Vector2 vector103 = new Vector2(this.center().X, this.center().Y);
									float num830 = Main.npc[NPC.plantBoss].center().X - vector103.X;
									float num831 = Main.npc[NPC.plantBoss].center().Y - vector103.Y;
									this.rotation = (float)Math.Atan2((double)num831, (double)num830) - 1.57f;
									return;
								}
							}
							else if (this.aiStyle == 53)
							{
								if (NPC.plantBoss < 0)
								{
									this.StrikeNPC(9999, 0f, 0, false, false);
									this.netUpdate = true;
									return;
								}
								int num832 = NPC.plantBoss;
								if (Main.netMode != 1)
								{
									this.localAI[0] -= 1f;
									if (this.localAI[0] <= 0f)
									{
										this.localAI[0] = (float)Main.rand.Next(120, 480);
										this.ai[0] = (float)Main.rand.Next(-100, 101);
										this.ai[1] = (float)Main.rand.Next(-100, 101);
										this.netUpdate = true;
									}
								}
								this.TargetClosest(true);
								float num833 = 0.2f;
								float num834 = 200f;
								if ((double)Main.npc[num832].life < (double)Main.npc[num832].lifeMax * 0.25)
								{
									num834 += 100f;
								}
								if ((double)Main.npc[num832].life < (double)Main.npc[num832].lifeMax * 0.1)
								{
									num834 += 100f;
								}
								if (!Main.npc[num832].active || NPC.plantBoss < 0)
								{
									this.active = false;
									return;
								}
								float num835 = Main.npc[num832].position.X + (float)(Main.npc[num832].width / 2);
								float num836 = Main.npc[num832].position.Y + (float)(Main.npc[num832].height / 2);
								Vector2 vector104 = new Vector2(num835, num836);
								float num837 = num835 + this.ai[0];
								float num838 = num836 + this.ai[1];
								float num839 = num837 - vector104.X;
								float num840 = num838 - vector104.Y;
								float num841 = (float)Math.Sqrt((double)(num839 * num839 + num840 * num840));
								num841 = num834 / num841;
								num839 *= num841;
								num840 *= num841;
								if (this.position.X < num835 + num839)
								{
									this.velocity.X = this.velocity.X + num833;
									if (this.velocity.X < 0f && num839 > 0f)
									{
										this.velocity.X = this.velocity.X * 0.9f;
									}
								}
								else if (this.position.X > num835 + num839)
								{
									this.velocity.X = this.velocity.X - num833;
									if (this.velocity.X > 0f && num839 < 0f)
									{
										this.velocity.X = this.velocity.X * 0.9f;
									}
								}
								if (this.position.Y < num836 + num840)
								{
									this.velocity.Y = this.velocity.Y + num833;
									if (this.velocity.Y < 0f && num840 > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.9f;
									}
								}
								else if (this.position.Y > num836 + num840)
								{
									this.velocity.Y = this.velocity.Y - num833;
									if (this.velocity.Y > 0f && num840 < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.9f;
									}
								}
								if (this.velocity.X > 8f)
								{
									this.velocity.X = 8f;
								}
								if (this.velocity.X < -8f)
								{
									this.velocity.X = -8f;
								}
								if (this.velocity.Y > 8f)
								{
									this.velocity.Y = 8f;
								}
								if (this.velocity.Y < -8f)
								{
									this.velocity.Y = -8f;
								}
								if (num839 > 0f)
								{
									this.spriteDirection = 1;
									this.rotation = (float)Math.Atan2((double)num840, (double)num839);
								}
								if (num839 < 0f)
								{
									this.spriteDirection = -1;
									this.rotation = (float)Math.Atan2((double)num840, (double)num839) + 3.14f;
									return;
								}
							}
							else if (this.aiStyle == 54)
							{
								NPC.crimsonBoss = this.whoAmI;
								if (Main.netMode != 1 && this.localAI[0] == 0f)
								{
									this.localAI[0] = 1f;
									for (int num842 = 0; num842 < 20; num842++)
									{
										float num843 = this.center().X;
										float num844 = this.center().Y;
										num843 += (float)Main.rand.Next(-this.width, this.width);
										num844 += (float)Main.rand.Next(-this.height, this.height);
										int num845 = NPC.NewNPC((int)num843, (int)num844, 267, 0);
										Main.npc[num845].velocity = new Vector2((float)Main.rand.Next(-30, 31) * 0.1f, (float)Main.rand.Next(-30, 31) * 0.1f);
										Main.npc[num845].netUpdate = true;
									}
								}
								if (Main.netMode != 1)
								{
									this.TargetClosest(true);
									int num846 = 6000;
									if (Math.Abs(this.center().X - Main.player[this.target].center().X) + Math.Abs(this.center().Y - Main.player[this.target].center().Y) > (float)num846)
									{
										this.active = false;
										this.life = 0;
										if (Main.netMode == 2)
										{
											NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0);
										}
									}
								}
								if (this.ai[0] < 0f)
								{
									if (this.localAI[2] == 0f)
									{
										Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
										this.localAI[2] = 1f;
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 392, 1f);
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 393, 1f);
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 394, 1f);
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 395, 1f);
										for (int num847 = 0; num847 < 20; num847++)
										{
											Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, default(Color), 1f);
										}
										Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
									}
									this.dontTakeDamage = false;
									this.knockBackResist = 0.5f;
									this.TargetClosest(true);
									Vector2 vector105 = new Vector2(this.center().X, this.center().Y);
									float num848 = Main.player[this.target].center().X - vector105.X;
									float num849 = Main.player[this.target].center().Y - vector105.Y;
									float num850 = (float)Math.Sqrt((double)(num848 * num848 + num849 * num849));
									float num851 = 8f;
									num850 = num851 / num850;
									num848 *= num850;
									num849 *= num850;
									this.velocity.X = (this.velocity.X * 50f + num848) / 51f;
									this.velocity.Y = (this.velocity.Y * 50f + num849) / 51f;
									if (this.ai[0] == -1f)
									{
										if (Main.netMode != 1)
										{
											this.localAI[1] += 1f;
											if (this.localAI[1] >= (float)(60 + Main.rand.Next(120)))
											{
												this.localAI[1] = 0f;
												this.TargetClosest(true);
												int num852 = 0;
												int num853;
												int num854;
												while (true)
												{
													num852++;
													num853 = (int)Main.player[this.target].center().X / 16;
													num854 = (int)Main.player[this.target].center().Y / 16;
													if (Main.rand.Next(2) == 0)
													{
														num853 += Main.rand.Next(7, 13);
													}
													else
													{
														num853 -= Main.rand.Next(7, 13);
													}
													if (Main.rand.Next(2) == 0)
													{
														num854 += Main.rand.Next(7, 13);
													}
													else
													{
														num854 -= Main.rand.Next(7, 13);
													}
													if (!WorldGen.SolidTile(num853, num854))
													{
														break;
													}
													if (num852 > 100)
													{
														return;
													}
												}
												this.ai[0] = -2f;
												this.ai[1] = (float)num853;
												this.ai[2] = (float)num854;
												this.netUpdate = true;
												return;
											}
										}
									}
									else if (this.ai[0] == -2f)
									{
										this.velocity *= 0.9f;
										this.alpha += 25;
										if (this.alpha >= 255)
										{
											this.alpha = 255;
											this.position.X = this.ai[1] * 16f - (float)(this.width / 2);
											this.position.Y = this.ai[2] * 16f - (float)(this.height / 2);
											Main.PlaySound(2, (int)this.center().X, (int)this.center().Y, 8);
											this.ai[0] = -3f;
											return;
										}
									}
									else if (this.ai[0] == -3f)
									{
										this.alpha -= 25;
										if (this.alpha <= 0)
										{
											this.alpha = 0;
											this.ai[0] = -1f;
											return;
										}
									}
								}
								else
								{
									this.TargetClosest(true);
									Vector2 vector106 = new Vector2(this.center().X, this.center().Y);
									float num855 = Main.player[this.target].center().X - vector106.X;
									float num856 = Main.player[this.target].center().Y - vector106.Y;
									float num857 = (float)Math.Sqrt((double)(num855 * num855 + num856 * num856));
									float num858 = 1f;
									if (num857 < num858)
									{
										this.velocity.X = num855;
										this.velocity.Y = num856;
									}
									else
									{
										num857 = num858 / num857;
										this.velocity.X = num855 * num857;
										this.velocity.Y = num856 * num857;
									}
									if (this.ai[0] == 0f)
									{
										if (Main.netMode != 1)
										{
											int num859 = 0;
											for (int num860 = 0; num860 < 200; num860++)
											{
												if (Main.npc[num860].active && Main.npc[num860].type == 267)
												{
													num859++;
												}
											}
											if (num859 == 0)
											{
												this.ai[0] = -1f;
												this.localAI[1] = 0f;
												this.alpha = 0;
												this.netUpdate = true;
											}
											this.localAI[1] += 1f;
											if (this.localAI[1] >= (float)(120 + Main.rand.Next(300)))
											{
												this.localAI[1] = 0f;
												this.TargetClosest(true);
												int num861 = 0;
												int num862;
												int num863;
												while (true)
												{
													num861++;
													num862 = (int)Main.player[this.target].center().X / 16;
													num863 = (int)Main.player[this.target].center().Y / 16;
													num862 += Main.rand.Next(-50, 51);
													num863 += Main.rand.Next(-50, 51);
													if (!WorldGen.SolidTile(num862, num863) && Collision.CanHit(new Vector2((float)(num862 * 16), (float)(num863 * 16)), 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
													{
														break;
													}
													if (num861 > 100)
													{
														return;
													}
												}
												this.ai[0] = 1f;
												this.ai[1] = (float)num862;
												this.ai[2] = (float)num863;
												this.netUpdate = true;
												return;
											}
										}
									}
									else if (this.ai[0] == 1f)
									{
										this.alpha += 5;
										if (this.alpha >= 255)
										{
											Main.PlaySound(2, (int)this.center().X, (int)this.center().Y, 8);
											this.alpha = 255;
											this.position.X = this.ai[1] * 16f - (float)(this.width / 2);
											this.position.Y = this.ai[2] * 16f - (float)(this.height / 2);
											this.ai[0] = 2f;
											return;
										}
									}
									else if (this.ai[0] == 2f)
									{
										this.alpha -= 5;
										if (this.alpha <= 0)
										{
											this.alpha = 0;
											this.ai[0] = 0f;
											return;
										}
									}
								}
							}
							else if (this.aiStyle == 55)
							{
								if (NPC.crimsonBoss < 0)
								{
									this.active = false;
									this.netUpdate = true;
									return;
								}
								if (this.ai[0] == 0f)
								{
									Vector2 vector107 = new Vector2(this.center().X, this.center().Y);
									float num864 = Main.npc[NPC.crimsonBoss].center().X - vector107.X;
									float num865 = Main.npc[NPC.crimsonBoss].center().Y - vector107.Y;
									float num866 = (float)Math.Sqrt((double)(num864 * num864 + num865 * num865));
									if (num866 > 90f)
									{
										num866 = 8f / num866;
										num864 *= num866;
										num865 *= num866;
										this.velocity.X = (this.velocity.X * 15f + num864) / 16f;
										this.velocity.Y = (this.velocity.Y * 15f + num865) / 16f;
										return;
									}
									if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < 8f)
									{
										this.velocity.Y = this.velocity.Y * 1.05f;
										this.velocity.X = this.velocity.X * 1.05f;
									}
									if (Main.netMode != 1 && Main.rand.Next(200) == 0)
									{
										this.TargetClosest(true);
										vector107 = new Vector2(this.center().X, this.center().Y);
										num864 = Main.player[this.target].center().X - vector107.X;
										num865 = Main.player[this.target].center().Y - vector107.Y;
										num866 = (float)Math.Sqrt((double)(num864 * num864 + num865 * num865));
										num866 = 8f / num866;
										this.velocity.X = num864 * num866;
										this.velocity.Y = num865 * num866;
										this.ai[0] = 1f;
										this.netUpdate = true;
										return;
									}
								}
								else
								{
									Vector2 vector108 = new Vector2(this.center().X, this.center().Y);
									float num867 = Main.npc[NPC.crimsonBoss].center().X - vector108.X;
									float num868 = Main.npc[NPC.crimsonBoss].center().Y - vector108.Y;
									float num869 = (float)Math.Sqrt((double)(num867 * num867 + num868 * num868));
									if (num869 > 700f || this.justHit)
									{
										this.ai[0] = 0f;
										return;
									}
								}
							}
							else
							{
								if (this.aiStyle == 56)
								{
									this.TargetClosest(true);
									Vector2 vector109 = new Vector2(this.center().X, this.center().Y);
									float num870 = Main.player[this.target].center().X - vector109.X;
									float num871 = Main.player[this.target].center().Y - vector109.Y;
									float num872 = (float)Math.Sqrt((double)(num870 * num870 + num871 * num871));
									float num873 = 12f;
									num872 = num873 / num872;
									num870 *= num872;
									num871 *= num872;
									this.velocity.X = (this.velocity.X * 100f + num870) / 101f;
									this.velocity.Y = (this.velocity.Y * 100f + num871) / 101f;
									this.rotation = (float)Math.Atan2((double)num871, (double)num870) - 1.57f;
									int num874 = Dust.NewDust(this.position, this.width, this.height, 180, 0f, 0f, 0, default(Color), 1f);
									Main.dust[num874].velocity *= 0.1f;
									Main.dust[num874].scale = 1.3f;
									Main.dust[num874].noGravity = true;
									return;
								}
								if (this.aiStyle == 57)
								{
									float num875 = 2f;
									this.noGravity = true;
									this.noTileCollide = true;
									if (!Main.dayTime)
									{
										this.TargetClosest(true);
									}
									bool flag57 = false;
									if ((double)this.life < (double)this.lifeMax * 0.75)
									{
										num875 = 3f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.5)
									{
										num875 = 4f;
									}
									if (Main.dayTime)
									{
										if (this.timeLeft > 10)
										{
											this.timeLeft = 10;
										}
										num875 = 8f;
									}
									else if (this.ai[0] == 0f)
									{
										this.ai[1] += 1f;
										if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											this.ai[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											this.ai[1] += 1f;
										}
										if (this.ai[1] >= 300f && Main.netMode != 1)
										{
											this.ai[1] = 0f;
											if ((double)this.life < (double)this.lifeMax * 0.25)
											{
												this.ai[0] = (float)Main.rand.Next(3, 5);
											}
											else
											{
												this.ai[0] = (float)Main.rand.Next(1, 3);
											}
											this.netUpdate = true;
										}
									}
									else if (this.ai[0] == 1f)
									{
										flag57 = true;
										this.ai[1] += 1f;
										if (this.ai[1] % 15f == 0f)
										{
											Vector2 vector110 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
											float num876 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector110.X;
											float num877 = Main.player[this.target].position.Y - vector110.Y;
											float num878 = (float)Math.Sqrt((double)(num876 * num876 + num877 * num877));
											float num879 = 10f;
											num878 = num879 / num878;
											num876 *= num878;
											num877 *= num878;
											num876 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
											num877 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
											Projectile.NewProjectile(vector110.X, vector110.Y, num876, num877, 325, 50, 0f, Main.myPlayer, 0f, 0f);
										}
										if (this.ai[1] >= 120f)
										{
											this.ai[1] = 0f;
											this.ai[0] = 0f;
										}
									}
									else if (this.ai[0] == 2f)
									{
										flag57 = true;
										this.ai[1] += 1f;
										if (this.ai[1] > 60f && this.ai[1] < 240f && this.ai[1] % 6f == 0f)
										{
											float num880 = 10f;
											Vector2 vector111 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
											float num881 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector111.X;
											float num882 = Main.player[this.target].position.Y - vector111.Y;
											num882 -= Math.Abs(num881) * 0.3f;
											num880 += Math.Abs(num881) * 0.004f;
											if (num880 > 14f)
											{
												num880 = 14f;
											}
											num881 += (float)Main.rand.Next(-50, 51);
											num882 -= (float)Main.rand.Next(50, 201);
											float num883 = (float)Math.Sqrt((double)(num881 * num881 + num882 * num882));
											num883 = num880 / num883;
											num881 *= num883;
											num882 *= num883;
											num881 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
											num882 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
											Projectile.NewProjectile(vector111.X, vector111.Y, num881, num882, Main.rand.Next(326, 329), 40, 0f, Main.myPlayer, 0f, 0f);
										}
										if (this.ai[1] >= 300f)
										{
											this.ai[1] = 0f;
											this.ai[0] = 0f;
										}
									}
									else if (this.ai[0] == 3f)
									{
										num875 = 4f;
										this.ai[1] += 1f;
										if (this.ai[1] % 30f == 0f)
										{
											Vector2 vector112 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
											float num884 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector112.X;
											float num885 = Main.player[this.target].position.Y - vector112.Y;
											float num886 = (float)Math.Sqrt((double)(num884 * num884 + num885 * num885));
											float num887 = 16f;
											num886 = num887 / num886;
											num884 *= num886;
											num885 *= num886;
											num884 *= 1f + (float)Main.rand.Next(-20, 21) * 0.001f;
											num885 *= 1f + (float)Main.rand.Next(-20, 21) * 0.001f;
											Projectile.NewProjectile(vector112.X, vector112.Y, num884, num885, 325, 75, 0f, Main.myPlayer, 0f, 0f);
										}
										if (this.ai[1] >= 120f)
										{
											this.ai[1] = 0f;
											this.ai[0] = 0f;
										}
									}
									else if (this.ai[0] == 4f)
									{
										num875 = 4f;
										this.ai[1] += 1f;
										if (this.ai[1] % 10f == 0f)
										{
											float num888 = 12f;
											Vector2 vector113 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
											float num889 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector113.X;
											float num890 = Main.player[this.target].position.Y - vector113.Y;
											num890 -= Math.Abs(num889) * 0.2f;
											num888 += Math.Abs(num889) * 0.002f;
											if (num888 > 16f)
											{
												num888 = 16f;
											}
											num889 += (float)Main.rand.Next(-50, 51);
											num890 -= (float)Main.rand.Next(50, 201);
											float num891 = (float)Math.Sqrt((double)(num889 * num889 + num890 * num890));
											num891 = num888 / num891;
											num889 *= num891;
											num890 *= num891;
											num889 *= 1f + (float)Main.rand.Next(-30, 31) * 0.005f;
											num890 *= 1f + (float)Main.rand.Next(-30, 31) * 0.005f;
											Projectile.NewProjectile(vector113.X, vector113.Y, num889, num890, Main.rand.Next(326, 329), 50, 0f, Main.myPlayer, 0f, 0f);
										}
										if (this.ai[1] >= 240f)
										{
											this.ai[1] = 0f;
											this.ai[0] = 0f;
										}
									}
									if (Math.Abs(this.center().X - Main.player[this.target].center().X) < 50f)
									{
										flag57 = true;
									}
									if (flag57)
									{
										this.velocity.X = this.velocity.X * 0.9f;
										if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
										{
											this.velocity.X = 0f;
										}
									}
									else
									{
										if (this.direction > 0)
										{
											this.velocity.X = (this.velocity.X * 20f + num875) / 21f;
										}
										if (this.direction < 0)
										{
											this.velocity.X = (this.velocity.X * 20f - num875) / 21f;
										}
									}
									int num892 = 80;
									int num893 = 20;
									Vector2 vector114 = new Vector2(this.center().X - (float)(num892 / 2), this.position.Y + (float)this.height - (float)num893);
									bool flag58 = false;
									if (this.position.X < Main.player[this.target].position.X && this.position.X + (float)this.width > Main.player[this.target].position.X + (float)Main.player[this.target].width && this.position.Y + (float)this.height < Main.player[this.target].position.Y + (float)Main.player[this.target].height - 16f)
									{
										flag58 = true;
									}
									if (flag58)
									{
										this.velocity.Y = this.velocity.Y + 0.5f;
									}
									else if (Collision.SolidCollision(vector114, num892, num893))
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = 0f;
										}
										if ((double)this.velocity.Y > -0.2)
										{
											this.velocity.Y = this.velocity.Y - 0.025f;
										}
										else
										{
											this.velocity.Y = this.velocity.Y - 0.2f;
										}
										if (this.velocity.Y < -4f)
										{
											this.velocity.Y = -4f;
										}
									}
									else
									{
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = 0f;
										}
										if ((double)this.velocity.Y < 0.1)
										{
											this.velocity.Y = this.velocity.Y + 0.025f;
										}
										else
										{
											this.velocity.Y = this.velocity.Y + 0.5f;
										}
									}
									if (this.velocity.Y > 10f)
									{
										this.velocity.Y = 10f;
										return;
									}
								}
								else
								{
									if (this.aiStyle == 58)
									{
										this.localAI[0] += 1f;
										if (this.localAI[0] > 6f)
										{
											this.localAI[0] = 0f;
											this.localAI[1] += 1f;
											if (this.localAI[1] > 4f)
											{
												this.localAI[1] = 0f;
											}
										}
										if (Main.netMode != 1)
										{
											this.localAI[2] += 1f;
											if (this.localAI[2] > 300f)
											{
												this.ai[3] = (float)Main.rand.Next(3);
												this.localAI[2] = 0f;
											}
											else if (this.ai[3] == 0f && this.localAI[2] % 30f == 0f && this.localAI[2] > 30f)
											{
												float num894 = 5f;
												Vector2 vector115 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
												if (!WorldGen.SolidTile((int)vector115.X / 16, (int)vector115.Y / 16))
												{
													float num895 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector115.X;
													float num896 = Main.player[this.target].position.Y - vector115.Y;
													num895 += (float)Main.rand.Next(-50, 51);
													num896 += (float)Main.rand.Next(50, 201);
													num896 *= 0.2f;
													float num897 = (float)Math.Sqrt((double)(num895 * num895 + num896 * num896));
													num897 = num894 / num897;
													num895 *= num897;
													num896 *= num897;
													num895 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
													num896 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
													Projectile.NewProjectile(vector115.X, vector115.Y, num895, num896, Main.rand.Next(326, 329), 40, 0f, Main.myPlayer, 0f, 0f);
												}
											}
										}
										if (this.ai[0] == 0f && Main.netMode != 1)
										{
											this.TargetClosest(true);
											this.ai[0] = 1f;
											int num898 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 328, this.whoAmI);
											Main.npc[num898].ai[0] = -1f;
											Main.npc[num898].ai[1] = (float)this.whoAmI;
											Main.npc[num898].target = this.target;
											Main.npc[num898].netUpdate = true;
											num898 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 328, this.whoAmI);
											Main.npc[num898].ai[0] = 1f;
											Main.npc[num898].ai[1] = (float)this.whoAmI;
											Main.npc[num898].ai[3] = 150f;
											Main.npc[num898].target = this.target;
											Main.npc[num898].netUpdate = true;
										}
										if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 2000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
										{
											this.TargetClosest(true);
											if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 2000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
											{
												this.ai[1] = 2f;
											}
										}
										if (Main.dayTime)
										{
											this.velocity.Y = this.velocity.Y + 0.3f;
											this.velocity.X = this.velocity.X * 0.9f;
										}
										else if (this.ai[1] == 0f)
										{
											this.ai[2] += 1f;
											if (this.ai[2] >= 300f)
											{
												if (this.ai[3] != 1f)
												{
													this.ai[1] = 0f;
													this.ai[2] = 0f;
												}
												else
												{
													this.ai[2] = 0f;
													this.ai[1] = 1f;
													this.TargetClosest(true);
													this.netUpdate = true;
												}
											}
											Vector2 vector116 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float num899 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector116.X;
											float num900 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 200f - vector116.Y;
											float num901 = (float)Math.Sqrt((double)(num899 * num899 + num900 * num900));
											float num902 = 6f;
											if (this.ai[3] == 1f)
											{
												if (num901 > 900f)
												{
													num902 = 12f;
												}
												else if (num901 > 600f)
												{
													num902 = 10f;
												}
												else if (num901 > 300f)
												{
													num902 = 8f;
												}
											}
											if (num901 > 50f)
											{
												num901 = num902 / num901;
												this.velocity.X = (this.velocity.X * 14f + num899 * num901) / 15f;
												this.velocity.Y = (this.velocity.Y * 14f + num900 * num901) / 15f;
											}
										}
										else if (this.ai[1] == 1f)
										{
											this.ai[2] += 1f;
											if (this.ai[2] >= 600f || this.ai[3] != 1f)
											{
												this.ai[2] = 0f;
												this.ai[1] = 0f;
											}
											Vector2 vector117 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float num903 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector117.X;
											float num904 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector117.Y;
											float num905 = (float)Math.Sqrt((double)(num903 * num903 + num904 * num904));
											num905 = 16f / num905;
											this.velocity.X = (this.velocity.X * 49f + num903 * num905) / 50f;
											this.velocity.Y = (this.velocity.Y * 49f + num904 * num905) / 50f;
										}
										else if (this.ai[1] == 2f)
										{
											this.ai[1] = 3f;
											this.velocity.Y = this.velocity.Y + 0.1f;
											if (this.velocity.Y < 0f)
											{
												this.velocity.Y = this.velocity.Y * 0.95f;
											}
											this.velocity.X = this.velocity.X * 0.95f;
											if (this.timeLeft > 500)
											{
												this.timeLeft = 500;
											}
										}
										this.rotation = this.velocity.X * -0.02f;
										return;
									}
									if (this.aiStyle == 59)
									{
										this.spriteDirection = -(int)this.ai[0];
										if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 58)
										{
											this.ai[2] += 10f;
											if (this.ai[2] > 50f || Main.netMode != 2)
											{
												this.life = -1;
												this.HitEffect(0, 10.0);
												this.active = false;
											}
										}
										if (Main.netMode != 1 && Main.npc[(int)this.ai[1]].ai[3] == 2f)
										{
											this.localAI[1] += 1f;
											if (this.localAI[1] > 90f)
											{
												this.localAI[1] = 0f;
												float num906 = 0.01f;
												Vector2 vector118 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
												float num907 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector118.X;
												float num908 = Main.player[this.target].position.Y - vector118.Y;
												float num909 = (float)Math.Sqrt((double)(num907 * num907 + num908 * num908));
												num909 = num906 / num909;
												num907 *= num909;
												num908 *= num909;
												Projectile.NewProjectile(this.center().X, this.center().Y, num907, num908, 329, 60, 0f, Main.myPlayer, this.rotation, (float)this.spriteDirection);
											}
										}
										if (Main.dayTime)
										{
											this.velocity.Y = this.velocity.Y + 0.3f;
											this.velocity.X = this.velocity.X * 0.9f;
											return;
										}
										if (this.ai[2] == 0f || this.ai[2] == 3f)
										{
											if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
											{
												this.timeLeft = 10;
											}
											this.ai[3] += 1f;
											if (this.ai[3] >= 180f)
											{
												this.ai[2] += 1f;
												this.ai[3] = 0f;
												this.netUpdate = true;
											}
											Vector2 vector119 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float num910 = (Main.player[this.target].center().X + Main.npc[(int)this.ai[1]].center().X) / 2f;
											float num911 = (Main.player[this.target].center().Y + Main.npc[(int)this.ai[1]].center().Y) / 2f;
											num910 += -170f * this.ai[0] - vector119.X;
											num911 += 90f - vector119.Y;
											float num912 = Math.Abs(Main.player[this.target].center().X - Main.npc[(int)this.ai[1]].center().X) + Math.Abs(Main.player[this.target].center().Y - Main.npc[(int)this.ai[1]].center().Y);
											if (num912 > 700f)
											{
												num910 = Main.npc[(int)this.ai[1]].center().X - 170f * this.ai[0] - vector119.X;
												num911 = Main.npc[(int)this.ai[1]].center().Y + 90f - vector119.Y;
											}
											float num913 = (float)Math.Sqrt((double)(num910 * num910 + num911 * num911));
											float num914 = 6f;
											if (num913 > 1000f)
											{
												num914 = 21f;
											}
											else if (num913 > 800f)
											{
												num914 = 18f;
											}
											else if (num913 > 600f)
											{
												num914 = 15f;
											}
											else if (num913 > 400f)
											{
												num914 = 12f;
											}
											else if (num913 > 200f)
											{
												num914 = 9f;
											}
											if (this.ai[0] < 0f && this.center().X > Main.npc[(int)this.ai[1]].center().X)
											{
												num910 -= 4f;
											}
											if (this.ai[0] > 0f && this.center().X < Main.npc[(int)this.ai[1]].center().X)
											{
												num910 += 4f;
											}
											num913 = num914 / num913;
											this.velocity.X = (this.velocity.X * 14f + num910 * num913) / 15f;
											this.velocity.Y = (this.velocity.Y * 14f + num911 * num913) / 15f;
											num913 = (float)Math.Sqrt((double)(num910 * num910 + num911 * num911));
											if (num913 > 20f)
											{
												this.rotation = (float)Math.Atan2((double)num911, (double)num910) + 1.57f;
												return;
											}
										}
										else if (this.ai[2] == 1f)
										{
											Vector2 vector120 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float num915 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector120.X;
											float num916 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector120.Y;
											float num917 = (float)Math.Sqrt((double)(num915 * num915 + num916 * num916));
											this.rotation = (float)Math.Atan2((double)num916, (double)num915) + 1.57f;
											this.velocity.X = this.velocity.X * 0.95f;
											this.velocity.Y = this.velocity.Y - 0.3f;
											if (this.velocity.Y < -14f)
											{
												this.velocity.Y = -14f;
											}
											if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 200f)
											{
												this.TargetClosest(true);
												this.ai[2] = 2f;
												vector120 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
												num915 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector120.X;
												num916 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector120.Y;
												num917 = (float)Math.Sqrt((double)(num915 * num915 + num916 * num916));
												num917 = 18f / num917;
												this.velocity.X = num915 * num917;
												this.velocity.Y = num916 * num917;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[2] == 2f)
										{
											float num918 = Math.Abs(this.center().X - Main.npc[(int)this.ai[1]].center().X) + Math.Abs(this.center().Y - Main.npc[(int)this.ai[1]].center().Y);
											if (this.position.Y > Main.player[this.target].position.Y || this.velocity.Y < 0f || num918 > 800f)
											{
												this.ai[2] = 3f;
												return;
											}
										}
										else if (this.ai[2] == 4f)
										{
											Vector2 vector121 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float num919 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector121.X;
											float num920 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector121.Y;
											float num921 = (float)Math.Sqrt((double)(num919 * num919 + num920 * num920));
											this.rotation = (float)Math.Atan2((double)num920, (double)num919) + 1.57f;
											this.velocity.Y = this.velocity.Y * 0.95f;
											this.velocity.X = this.velocity.X + 0.3f * -this.ai[0];
											if (this.velocity.X < -14f)
											{
												this.velocity.X = -14f;
											}
											if (this.velocity.X > 14f)
											{
												this.velocity.X = 14f;
											}
											if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 500f || this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 500f)
											{
												this.TargetClosest(true);
												this.ai[2] = 5f;
												vector121 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
												num919 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector121.X;
												num920 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector121.Y;
												num921 = (float)Math.Sqrt((double)(num919 * num919 + num920 * num920));
												num921 = 17f / num921;
												this.velocity.X = num919 * num921;
												this.velocity.Y = num920 * num921;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[2] == 5f)
										{
											float num922 = Math.Abs(this.center().X - Main.npc[(int)this.ai[1]].center().X) + Math.Abs(this.center().Y - Main.npc[(int)this.ai[1]].center().Y);
											if ((this.velocity.X > 0f && this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)) || (this.velocity.X < 0f && this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)) || num922 > 800f)
											{
												this.ai[2] = 0f;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		public void FindFrame()
		{
			int num = 1;
			int num2 = 0;
			if (this.aiAction == 0)
			{
				if (this.velocity.Y < 0f)
				{
					num2 = 2;
				}
				else if (this.velocity.Y > 0f)
				{
					num2 = 3;
				}
				else if (this.velocity.X != 0f)
				{
					num2 = 1;
				}
				else
				{
					num2 = 0;
				}
			}
			else if (this.aiAction == 1)
			{
				num2 = 4;
			}
			if (this.type == 1 || this.type == 16 || this.type == 59 || this.type == 71 || this.type == 81 || this.type == 138 || this.type == 147 || this.type == 183 || this.type == 184 || this.type == 204 || this.type == 225 || this.type == 302 || this.type == 304)
			{
				if (this.type == 302 || this.type == 304)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (num2 > 0)
				{
					this.frameCounter += 1.0;
				}
				if (num2 == 4)
				{
					this.frameCounter += 1.0;
				}
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 327)
			{
				if (this.ai[3] == 0f)
				{
					if (this.frame.Y > num * 5)
					{
						this.frameCounter += 1.0;
					}
					else if (this.frame.Y > 0)
					{
						this.frameCounter -= 1.0;
					}
				}
				else if (this.ai[3] == 1f)
				{
					if (this.frame.Y > num * 10)
					{
						this.frameCounter += 1.0;
					}
					else if (this.frame.Y > num * 4)
					{
						this.frameCounter -= 1.0;
					}
					else if (this.frame.Y < num * 4)
					{
						this.frameCounter += 1.0;
					}
				}
				else if (this.ai[3] == 2f)
				{
					if (this.frame.Y < num * 2)
					{
						this.frameCounter -= 1.0;
					}
					else if (this.frame.Y > num * 8)
					{
						this.frameCounter -= 1.0;
					}
					else if (this.frame.Y < num * 8)
					{
						this.frameCounter += 1.0;
					}
				}
				if (this.frameCounter > 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y > num * 11)
					{
						this.frame.Y = 0;
					}
				}
				if (this.frameCounter < 0.0)
				{
					this.frameCounter = 6.0;
					this.frame.Y = this.frame.Y - num;
					if (this.frame.Y < 0)
					{
						this.frame.Y = num * 11;
					}
				}
			}
			if (this.type == 325)
			{
				if (this.velocity.X == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 4)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y < num * 5)
					{
						this.frame.Y = num * 5;
					}
					if (this.frame.Y > num * 9)
					{
						this.frame.Y = num * 5;
					}
				}
			}
			if (this.type == 266)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
				}
				if (this.ai[0] >= 0f)
				{
					if (this.frame.Y > num * 3)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					if (this.frame.Y < num * 4)
					{
						this.frame.Y = num * 4;
					}
					if (this.frame.Y > num * 7)
					{
						this.frame.Y = num * 4;
					}
				}
			}
			if (this.type == 262)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
				}
				if (this.life > this.lifeMax / 2)
				{
					if (this.frame.Y > num * 3)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					if (this.frame.Y < num * 4)
					{
						this.frame.Y = num * 4;
					}
					if (this.frame.Y > num * 7)
					{
						this.frame.Y = num * 4;
					}
				}
			}
			if (this.type >= 305 && this.type <= 309)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				if (this.velocity.Y < -3f)
				{
					this.frame.Y = num * 5;
				}
				else if (this.velocity.Y <= 0f)
				{
					this.frame.Y = 0;
				}
				else if (this.velocity.Y < 2f)
				{
					this.frame.Y = num * 3;
				}
				else
				{
					this.frame.Y = num;
				}
				this.rotation = this.velocity.X * 0.1f;
			}
			if (this.type == 263)
			{
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					if (this.frame.Y > 0)
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 4.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y - num;
						}
					}
				}
				else if (this.frame.Y < 2)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
				}
			}
			if (this.type == 244)
			{
				this.frameCounter += 1.0;
				if (num2 > 0)
				{
					this.frameCounter += 1.0;
				}
				if (num2 == 4)
				{
					this.frameCounter += 1.0;
				}
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 289)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 2.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 3.0)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frame.Y = num * 2;
					this.frameCounter = 0.0;
				}
				if (this.ai[3] == 1f)
				{
					this.frame.Y = this.frame.Y + num * 3;
				}
			}
			if (this.type == 288)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 250 || this.type == 264 || this.type == 268)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 245)
			{
				if (this.ai[0] == 0f)
				{
					if (this.ai[1] < -16f)
					{
						this.frame.Y = 0;
					}
					else if (this.ai[1] < -12f)
					{
						this.frame.Y = num;
					}
					else if (this.ai[1] < -8f)
					{
						this.frame.Y = num * 2;
					}
					else if (this.ai[1] < -4f)
					{
						this.frame.Y = num * 3;
					}
					else if (this.ai[1] < 0f)
					{
						this.frame.Y = num * 4;
					}
					else
					{
						this.frame.Y = 0;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.frame.Y = 1;
				}
			}
			if (this.type == 246)
			{
				if (this.ai[0] == 0f)
				{
					if (this.localAI[0] == 1f)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = 0;
					}
				}
				else if (this.ai[0] == 1f)
				{
					if (this.localAI[0] == 1f)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = 0;
					}
					if (this.localAI[1] == -1f)
					{
						this.frame.Y = this.frame.Y + num * 4;
					}
					if (this.localAI[1] == 1f)
					{
						this.frame.Y = this.frame.Y + num * 2;
					}
				}
			}
			if (this.type == 249)
			{
				if (this.localAI[0] == 1f)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 141)
			{
				this.spriteDirection = this.direction;
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 243)
			{
				if (this.frameCounter < 0.0)
				{
					if (this.velocity.Y == 0f)
					{
						this.frameCounter += 1.0;
						if (this.frameCounter < -12.0)
						{
							if (this.frame.Y > num * 9)
							{
								this.frame.Y = num * 11;
							}
						}
						else if (this.frameCounter < -6.0)
						{
							if (this.frame.Y > num * 9)
							{
								this.frame.Y = num * 12;
							}
						}
						else if (this.frameCounter < 0.0)
						{
							this.frameCounter = 0.0;
							if (this.frame.Y > num * 9)
							{
								this.frame.Y = num * 11;
							}
						}
					}
					else
					{
						this.frameCounter = -18.0;
						if (this.velocity.Y < 0f)
						{
							this.frame.Y = num * 14;
						}
						else
						{
							this.frame.Y = num * 13;
						}
					}
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)Math.Abs(this.velocity.X * 1.1f);
					if (this.frameCounter >= 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y > num * 9)
						{
							this.frame.Y = 0;
						}
					}
					if (this.velocity.Y < -2f || this.velocity.Y > 5f)
					{
						this.frameCounter = -18.0;
					}
				}
			}
			if (this.type == 222)
			{
				this.frameCounter += 1.0;
				if (this.localAI[0] == 1f)
				{
					if (this.frameCounter > 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * 4)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					if (this.frameCounter > 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y < num * 4)
					{
						this.frame.Y = num * 4;
					}
					if (this.frame.Y >= num * 12)
					{
						this.frame.Y = num * 4;
					}
				}
			}
			if (this.type == 164 || this.type == 239)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					if (this.velocity.Y < 0f)
					{
						this.frame.Y = num * 4;
					}
					else
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1.1f);
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			if (this.type == 236)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				else
				{
					this.frame.Y = 0;
				}
				this.frameCounter += (double)Math.Abs(this.velocity.X);
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num || this.velocity.Y != 0f)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 165 || this.type == 237 || this.type == 238 || this.type == 240)
			{
				this.frameCounter += (double)((Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * 0.5f);
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 24.0)
				{
					this.frame.Y = num * 3;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			if (this.type == 195)
			{
				if (this.ai[0] < 3f)
				{
					this.frame.Y = 0;
				}
				else if (this.ai[0] < 6f)
				{
					this.frame.Y = num;
				}
				else if (this.ai[0] < 9f)
				{
					this.frame.Y = num * 2;
				}
				else if (this.ai[0] < 12f)
				{
					this.frame.Y = num * 3;
				}
				else if (this.ai[0] < 15f)
				{
					this.frame.Y = num * 4;
				}
				else
				{
					this.frame.Y = num * 5;
				}
			}
			if (this.type == 174)
			{
				if (this.velocity.Y == 0f)
				{
					this.frame.Y = 0;
				}
				else if ((double)this.velocity.Y < -1.5)
				{
					this.frame.Y = num;
				}
				else if ((double)this.velocity.Y > 1.5)
				{
					this.frame.Y = num * 3;
				}
				else
				{
					this.frame.Y = num * 2;
				}
			}
			if (this.type == 177)
			{
				if (this.velocity.Y == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 10.0)
					{
						this.frameCounter = 30.0;
						this.frame.Y = 0;
					}
					else
					{
						this.frame.Y = num;
					}
				}
				else if (this.velocity.Y < 0f)
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 2;
				}
			}
			if (this.type == 163)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = -12.0;
					if (this.velocity.Y < 0f)
					{
						this.frame.Y = num * 5;
					}
					else
					{
						this.frame.Y = num * 6;
					}
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1.1f);
					if (this.frameCounter < -6.0)
					{
						this.frame.Y = num * 6;
					}
					else if (this.frameCounter < 0.0)
					{
						this.frame.Y = num * 7;
					}
					else if (this.frameCounter < 6.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			if (this.type == 143)
			{
				if (this.velocity.Y > 0f)
				{
					this.frameCounter += 1.0;
				}
				else if (this.velocity.Y < 0f)
				{
					this.frameCounter -= 1.0;
				}
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 3;
				}
				if (this.frameCounter < 0.0)
				{
					this.frameCounter = 0.0;
				}
				if (this.frameCounter > 17.0)
				{
					this.frameCounter = 17.0;
				}
			}
			if (this.type == 144)
			{
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.localAI[3] += 1f;
					if (this.localAI[3] < 6f)
					{
						this.frame.Y = 0;
					}
					else if (this.localAI[3] < 12f)
					{
						this.frame.Y = num;
					}
					if (this.localAI[3] >= 11f)
					{
						this.localAI[3] = 0f;
					}
				}
				else
				{
					if (this.velocity.Y > 0f)
					{
						this.frameCounter += 1.0;
					}
					else if (this.velocity.Y < 0f)
					{
						this.frameCounter -= 1.0;
					}
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 4;
					}
					if (this.frameCounter < 0.0)
					{
						this.frameCounter = 0.0;
					}
					if (this.frameCounter > 17.0)
					{
						this.frameCounter = 17.0;
					}
				}
			}
			if (this.type == 145)
			{
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					if (this.ai[2] < 4f)
					{
						this.frame.Y = 0;
					}
					else if (this.ai[2] < 8f)
					{
						this.frame.Y = num;
					}
					else if (this.ai[2] < 12f)
					{
						this.frame.Y = num * 2;
					}
					else if (this.ai[2] < 16f)
					{
						this.frame.Y = num * 3;
					}
				}
				else
				{
					if (this.velocity.Y > 0f)
					{
						this.frameCounter += 1.0;
					}
					else if (this.velocity.Y < 0f)
					{
						this.frameCounter -= 1.0;
					}
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num * 5;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 6;
					}
					if (this.frameCounter < 0.0)
					{
						this.frameCounter = 0.0;
					}
					if (this.frameCounter > 17.0)
					{
						this.frameCounter = 17.0;
					}
				}
			}
			if (this.aiStyle == 39)
			{
				if (this.ai[0] == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					else if (this.velocity.Y < 0f)
					{
						this.frameCounter = 0.0;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1.1f);
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < 32.0)
					{
						this.frame.Y = num * 4;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.frameCounter = 0.0;
					if (this.ai[1] < 10f)
					{
						this.frame.Y = num * 5;
					}
					else if (this.ai[1] < 20f)
					{
						this.frame.Y = num * 6;
					}
					else
					{
						this.frame.Y = num * 7;
					}
				}
				else if (this.ai[0] == 5f)
				{
					this.frameCounter = 0.0;
					if (this.ai[1] < 10f)
					{
						this.frame.Y = num * 7;
					}
					else if (this.ai[1] < 20f)
					{
						this.frame.Y = num * 6;
					}
					else
					{
						this.frame.Y = num * 5;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 7;
				}
			}
			if (this.type == 50)
			{
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = num * 4;
				}
				else
				{
					this.frameCounter += 1.0;
					if (num2 > 0)
					{
						this.frameCounter += 1.0;
					}
					if (num2 == 4)
					{
						this.frameCounter += 1.0;
					}
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * 4)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 170 || this.type == 171 || this.type == 180)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * 14)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 135)
			{
				if (this.ai[2] == 0f)
				{
					this.frame.Y = 0;
				}
				else
				{
					this.frame.Y = num;
				}
			}
			if (this.type == 85)
			{
				if (this.ai[0] == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					int num3 = 3;
					if (this.velocity.Y == 0f)
					{
						this.frameCounter -= 1.0;
					}
					else
					{
						this.frameCounter += 1.0;
					}
					if (this.frameCounter < 0.0)
					{
						this.frameCounter = 0.0;
					}
					if (this.frameCounter > (double)(num3 * 4))
					{
						this.frameCounter = (double)(num3 * 4);
					}
					if (this.frameCounter < (double)num3)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < (double)(num3 * 2))
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < (double)(num3 * 3))
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < (double)(num3 * 4))
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter < (double)(num3 * 5))
					{
						this.frame.Y = num * 5;
					}
					else if (this.frameCounter < (double)(num3 * 6))
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter < (double)(num3 * 7))
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frame.Y = num * 2;
						if (this.frameCounter >= (double)(num3 * 8))
						{
							this.frameCounter = (double)num3;
						}
					}
				}
				if (this.ai[3] == 2f)
				{
					this.frame.Y = this.frame.Y + num * 6;
				}
				else if (this.ai[3] == 3f)
				{
					this.frame.Y = this.frame.Y + num * 12;
				}
				else if (this.ai[3] == 4f)
				{
					this.frame.Y = this.frame.Y + num * 18;
				}
			}
			if (this.type == 113 || this.type == 114)
			{
				if (this.ai[2] == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 12.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frame.Y = 0;
					this.frameCounter = -60.0;
				}
			}
			if (this.type == 61)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.1f;
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter < 4.0)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = num * 2;
						if (this.frameCounter >= 7.0)
						{
							this.frameCounter = 0.0;
						}
					}
				}
			}
			if (this.type == 252 || this.type == 301)
			{
				if (this.type == 301)
				{
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = -this.direction;
					}
					else
					{
						if ((double)this.velocity.X > 0.5)
						{
							this.spriteDirection = -1;
						}
						if ((double)this.velocity.X < -0.5)
						{
							this.spriteDirection = 1;
						}
					}
				}
				else
				{
					if ((double)this.velocity.X > 0.5)
					{
						this.spriteDirection = 1;
					}
					if ((double)this.velocity.X < -0.5)
					{
						this.spriteDirection = -1;
					}
				}
				this.rotation = this.velocity.X * 0.1f;
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 4 || this.frame.Y == 0)
					{
						this.frame.Y = num;
					}
				}
			}
			if (this.type == 122)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.05f;
				if (this.ai[3] > 0f)
				{
					int num4 = (int)(this.ai[3] / 8f);
					this.frameCounter = 0.0;
					this.frame.Y = (num4 + 3) * num;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * 3)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 74 || this.type == 297 || this.type == 298)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.1f;
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.frame.Y = num * 4;
					this.frameCounter = 0.0;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 62 || this.type == 66 || this.type == 156)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.1f;
				this.frameCounter += 1.0;
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
				}
				else
				{
					this.frame.Y = num;
					if (this.frameCounter >= 11.0)
					{
						this.frameCounter = 0.0;
					}
				}
			}
			if (this.type == 63 || this.type == 64 || this.type == 103 || this.type == 242 || this.type == 256)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frame.Y = num * 3;
					if (this.frameCounter >= 23.0)
					{
						this.frameCounter = 0.0;
					}
				}
			}
			if (this.type == 221)
			{
				if (this.localAI[2] == 1f)
				{
					if (this.localAI[0] == 1f)
					{
						this.frame.Y = 0;
						this.localAI[0] = 0f;
					}
					this.frameCounter += 1.0;
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * Main.npcFrameCount[this.type] - num;
					}
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 13.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 2 || this.type == 23 || this.type == 121 || this.type == 169 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 317 || this.type == 318)
			{
				if (this.type == 2 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 317 || this.type == 318)
				{
					if (this.velocity.X > 0f)
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
					}
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
					}
				}
				else if (this.type == 2 || this.type == 121)
				{
					if (this.velocity.X > 0f)
					{
						this.spriteDirection = 1;
					}
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
					}
					this.rotation = this.velocity.X * 0.1f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 133)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frame.Y = 0;
				}
				if (this.frameCounter >= 16.0)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
				}
				if ((double)this.life < (double)this.lifeMax * 0.5)
				{
					this.frame.Y = this.frame.Y + num * 2;
				}
			}
			if (this.type == 116)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 5.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 75)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				else
				{
					this.spriteDirection = -1;
				}
				this.rotation = this.velocity.X * 0.1f;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 157)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (!this.wet)
				{
					this.frameCounter += 1.0;
				}
				int num5 = 5;
				if (this.frameCounter < (double)num5)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < (double)(num5 * 2))
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < (double)(num5 * 3))
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < (double)(num5 * 4))
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < (double)(num5 * 5))
				{
					this.frame.Y = num * 3;
				}
				else if (this.frameCounter < (double)(num5 * 6))
				{
					this.frame.Y = num * 4;
				}
				else if (this.frameCounter < (double)(num5 * 7))
				{
					this.frame.Y = num * 5;
				}
				else if (this.frameCounter < (double)(num5 * 8))
				{
					this.frame.Y = num * 4;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			if (this.type == 55 || this.type == 57 || this.type == 58 || this.type == 102 || this.type == 241)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (this.wet)
				{
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
				else if (this.frameCounter < 6.0)
				{
					this.frame.Y = num * 4;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num * 5;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			if (this.type == 69)
			{
				if (this.ai[0] < 190f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 1)
						{
							this.frame.Y = 0;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * (Main.npcFrameCount[this.type] - 1);
				}
			}
			if (this.type == 155)
			{
				if (this.velocity.Y > 0f)
				{
					this.frame.Y = num * 4;
					this.frameCounter = 0.0;
				}
				else if (this.velocity.Y < 0f)
				{
					this.frame.Y = num * 6;
					this.frameCounter = 0.0;
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.4f);
					if ((this.direction > 0 && this.velocity.X < 0f) || (this.direction < 0 && this.velocity.X > 0f))
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 8.0)
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < 16.0)
					{
						this.frame.Y = num * 6;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter < 32.0)
					{
						this.frame.Y = num * 5;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			if (this.type == 329)
			{
				if (this.velocity.Y > 0f)
				{
					this.frame.Y = num * 3;
					this.frameCounter = 0.0;
				}
				else if (this.velocity.Y < 0f)
				{
					this.frame.Y = num * 2;
					this.frameCounter = 0.0;
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.4f);
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y < num * 2)
						{
							this.frame.Y = num * 2;
						}
						if (this.frame.Y > num * 9)
						{
							this.frame.Y = num * 2;
						}
					}
				}
			}
			if (this.type == 86)
			{
				if (this.velocity.Y == 0f || this.wet)
				{
					if (this.velocity.X < -2f)
					{
						this.spriteDirection = -1;
					}
					else if (this.velocity.X > 2f)
					{
						this.spriteDirection = 1;
					}
					else
					{
						this.spriteDirection = this.direction;
					}
				}
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = num * 15;
					this.frameCounter = 0.0;
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else if (Math.Abs(this.velocity.X) < 3f)
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= 9)
						{
							this.frame.Y = num;
						}
						if (this.frame.Y / num <= 0)
						{
							this.frame.Y = num;
						}
					}
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 10.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= 15)
						{
							this.frame.Y = num * 9;
						}
						if (this.frame.Y / num <= 8)
						{
							this.frame.Y = num * 9;
						}
					}
				}
			}
			if (this.type == 315)
			{
				if (this.velocity.Y == 0f || this.wet)
				{
					if (this.velocity.X < -1f)
					{
						this.spriteDirection = -1;
					}
					else if (this.velocity.X > 1f)
					{
						this.spriteDirection = 1;
					}
					else
					{
						this.spriteDirection = this.direction;
					}
				}
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 8.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num > 10)
						{
							this.frame.Y = num;
						}
					}
				}
			}
			if (this.type == 127)
			{
				if (this.ai[1] == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 12.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= 2)
						{
							this.frame.Y = 0;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 2;
				}
			}
			if (this.type == 129)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 2.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 130)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 67 || this.type == 217 || this.type == 218 || this.type == 219)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 220)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 10.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 109)
			{
				if (this.velocity.Y == 0f && ((this.velocity.X <= 0f && this.direction < 0) || (this.velocity.X >= 0f && this.direction > 0)))
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += (double)Math.Abs(this.velocity.X);
				if (this.frameCounter >= 7.0)
				{
					this.frameCounter -= 7.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 83 || this.type == 84 || this.type == 179)
			{
				if (this.ai[0] == 2f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = 0;
						}
					}
				}
			}
			if (this.type == 72)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 3.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 65)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (this.wet)
				{
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			if (this.type == 224)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
					this.rotation = this.velocity.Y * 0.2f;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
					this.rotation = -this.velocity.Y * 0.2f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * 4)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 150 || this.type == 151 || this.type == 152 || this.type == 158 || this.type == 226)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
				}
				this.rotation = this.velocity.X * 0.1f;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * 4)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 48 || this.type == 49 || this.type == 51 || this.type == 60 || this.type == 82 || this.type == 93 || this.type == 137 || this.type == 182 || this.type == 210 || this.type == 211 || this.type == 253 || this.type == 316)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
				}
				this.rotation = this.velocity.X * 0.1f;
				if (this.type == 210 || this.type == 211)
				{
					this.frameCounter += 1.0;
					this.rotation = this.velocity.X * 0.2f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 330)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
				}
				this.rotation = this.velocity.X * 0.15f;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 42 || (this.type >= 231 && this.type <= 235))
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 2.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 4.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 6.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 8.0)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			if (this.type == 205)
			{
				this.frameCounter += 0.5;
				if (this.frameCounter < 2.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 4.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 6.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 8.0)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			if (this.type == 176)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 43 || this.type == 56 || this.type == 175)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 24.0)
				{
					this.frame.Y = num;
				}
				if (this.frameCounter == 23.0)
				{
					this.frameCounter = 0.0;
				}
			}
			if (this.type == 115)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 3.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 6.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 15.0)
				{
					this.frame.Y = num;
				}
				if (this.frameCounter == 15.0)
				{
					this.frameCounter = 0.0;
				}
			}
			if (this.type == 101)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num * 2;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num * 2)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 199)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.frame.Y < num * 3)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
				}
				else if (this.velocity.Y == 0f)
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter > 12.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y > num * 7)
						{
							this.frame.Y = num * 3;
						}
					}
				}
			}
			if (this.type == 17 || this.type == 18 || this.type == 19 || this.type == 20 || this.type == 22 || this.type == 142 || this.type == 178 || this.type == 38 || this.type == 26 || this.type == 27 || this.type == 28 || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 21 || this.type == 44 || this.type == 54 || this.type == 37 || this.type == 73 || this.type == 77 || this.type == 78 || this.type == 79 || this.type == 80 || this.type == 104 || this.type == 107 || this.type == 108 || this.type == 120 || this.type == 124 || this.type == 140 || this.type == 159 || this.type == 160 || this.type == 167 || this.type == 181 || this.type == 185 || this.type == 196 || this.type == 197 || this.type == 198 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 207 || this.type == 208 || this.type == 209 || this.type == 212 || this.type == 213 || this.type == 227 || this.type == 228 || this.type == 229 || this.type == 287 || (this.type >= 310 && this.type <= 314) || (this.type >= 322 && this.type <= 324) || this.type == 326)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						if (this.type == 140 || this.type == 287)
						{
							this.frame.Y = num;
							this.frameCounter = 0.0;
						}
						else
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
					if (this.type == 21 || this.type == 31 || this.type == 294 || this.type == 326 || this.type == 295 || this.type == 296 || this.type == 44 || this.type == 77 || this.type == 78 || this.type == 79 || this.type == 80 || this.type == 120 || this.type == 140 || this.type == 159 || this.type == 167 || this.type == 197 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 287 || (this.type >= 322 && this.type <= 324))
					{
						this.frame.Y = 0;
					}
					if (this.type == 181)
					{
						this.frame.Y = num * 14;
					}
				}
			}
			if (this.type >= 269 && this.type <= 280)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						if (this.type == 140)
						{
							this.frame.Y = num;
							this.frameCounter = 0.0;
						}
						else
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
			}
			if (this.type == 230)
			{
				if (this.velocity.Y == 0f)
				{
					this.rotation = 0f;
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 10.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = 0;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
					if (this.velocity.Y > 4f)
					{
						this.rotation -= this.velocity.Y * 0.01f;
					}
				}
			}
			else if (this.type == 290)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						if (this.ai[1] < 10f)
						{
							this.frame.Y = num * 11;
						}
						else if (this.ai[1] < 20f)
						{
							this.frame.Y = num * 10;
						}
						else
						{
							this.frame.Y = num * 9;
						}
					}
					else if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
					}
					else
					{
						if (this.frame.Y < num * 2)
						{
							this.frame.Y = num * 2;
						}
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y > num * 8)
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
			}
			else if (this.type == 110 || this.type == 214 || this.type == 215 || this.type == 216 || this.type == 291 || this.type == 292 || this.type == 293)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						this.frame.Y = num * (int)this.ai[2];
						this.frameCounter = 0.0;
					}
					else
					{
						if (this.frame.Y < num * 6)
						{
							this.frame.Y = num * 6;
						}
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						this.frameCounter += (double)this.velocity.X;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 6;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
			}
			else if (this.type == 206)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						this.frame.Y = num * (int)this.ai[2];
						this.frameCounter = 0.0;
					}
					else
					{
						if (this.frame.Y < num * 6)
						{
							this.frame.Y = num * 6;
						}
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						this.frameCounter += (double)this.velocity.X;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 6;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
			}
			if (this.type == 111)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						this.frame.Y = num * ((int)this.ai[2] - 1);
						this.frameCounter = 0.0;
					}
					else
					{
						if (this.frame.Y < num * 7)
						{
							this.frame.Y = num * 7;
						}
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						this.frameCounter += (double)(this.velocity.X * 1.3f);
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 7;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 6;
				}
			}
			else if (this.type == 257)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 4;
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter < 8.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 16.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 32.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 258)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 1.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 5 || this.frame.Y < num * 3)
					{
						this.frame.Y = num * 3;
					}
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter < 8.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 16.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 2;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 3 || this.type == 52 || this.type == 53 || this.type == 132 || this.type == 161 || this.type == 162 || this.type == 166 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 251 || this.type == 254 || this.type == 255 || (this.type >= 319 && this.type <= 321))
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 2;
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter < 8.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 16.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 32.0)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 148 || this.type == 149 || this.type == 168)
			{
				int num6 = 0;
				if (this.localAI[0] == 2f)
				{
					num6 = 3;
				}
				if (this.localAI[0] == 3f)
				{
					num6 = 6;
				}
				if (this.localAI[0] == 4f)
				{
					num6 = 9;
				}
				num6 *= num;
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = num6;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						if (this.frameCounter < 6.0)
						{
							this.frame.Y = num6;
						}
						else if (this.frameCounter < 12.0)
						{
							this.frame.Y = num + num6;
						}
						else if (this.frameCounter < 15.0)
						{
							this.frame.Y = num * 2 + num6;
						}
						else
						{
							this.frameCounter = 0.0;
							this.frame.Y = num * 2 + num6;
						}
					}
				}
				else if (this.velocity.Y < 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 2 + num6;
				}
				else if (this.velocity.Y > 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 2 + num6;
				}
			}
			else if (this.type == 299)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.5f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 1)
						{
							this.frame.Y = num;
						}
					}
				}
				else if (this.velocity.Y < 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 2;
				}
				else if (this.velocity.Y > 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 4;
				}
			}
			else if (this.type == 300)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 8.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num > 1)
						{
							this.frame.Y = 0;
						}
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.5f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.5f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * 2;
					}
				}
			}
			else if (this.type == 46 || this.type == 47 || this.type == 303)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = 0;
						}
					}
				}
				else if (this.velocity.Y < 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 4;
				}
				else if (this.velocity.Y > 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 6;
				}
			}
			else if (this.type == 4 || this.type == 125 || this.type == 126)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 7.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 14.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 21.0)
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				if (this.ai[0] > 1f)
				{
					this.frame.Y = this.frame.Y + num * 3;
				}
			}
			else if (this.type == 5)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 94)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frame.Y = num;
					if (this.frameCounter >= 23.0)
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 6 || this.type == 173)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 24)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.ai[1] > 0f)
				{
					if (this.frame.Y < 4)
					{
						this.frameCounter = 0.0;
					}
					this.frameCounter += 1.0;
					if (this.frameCounter <= 4.0)
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter <= 8.0)
					{
						this.frame.Y = num * 5;
					}
					else if (this.frameCounter <= 12.0)
					{
						this.frame.Y = num * 6;
					}
					else if (this.frameCounter <= 16.0)
					{
						this.frame.Y = num * 7;
					}
					else if (this.frameCounter <= 20.0)
					{
						this.frame.Y = num * 8;
					}
					else
					{
						this.frame.Y = num * 9;
						this.frameCounter = 100.0;
					}
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter <= 4.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter <= 8.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter <= 12.0)
					{
						this.frame.Y = num * 2;
					}
					else
					{
						this.frame.Y = num * 3;
						if (this.frameCounter >= 16.0)
						{
							this.frameCounter = 0.0;
						}
					}
				}
			}
			else if (this.type == 29 || this.type == 32 || this.type == 45 || this.type == 172 || (this.type >= 281 && this.type <= 286))
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				this.frame.Y = 0;
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = this.frame.Y + num;
				}
				else if (this.ai[1] > 0f)
				{
					this.frame.Y = this.frame.Y + num * 2;
				}
			}
			if (this.type == 34)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
		}
		public void TargetClosest(bool faceTarget = true)
		{
			float num = 0f;
			float num2 = 0f;
			bool flag = false;
			for (int i = 0; i < 255; i++)
			{
				if (Main.player[i].active && !Main.player[i].dead)
				{
					float num3 = Math.Abs(Main.player[i].position.X + (float)(Main.player[i].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.player[i].position.Y + (float)(Main.player[i].height / 2) - this.position.Y + (float)(this.height / 2));
					num3 -= (float)Main.player[i].aggro;
					if (!flag || num3 < num)
					{
						flag = true;
						num2 = Math.Abs(Main.player[i].position.X + (float)(Main.player[i].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.player[i].position.Y + (float)(Main.player[i].height / 2) - this.position.Y + (float)(this.height / 2));
						num = num3;
						this.target = i;
					}
				}
			}
			if (this.target < 0 || this.target >= 255)
			{
				this.target = 0;
			}
			this.targetRect = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
			if (Main.player[this.target].dead)
			{
				faceTarget = false;
			}
			if (faceTarget)
			{
				float num4 = num2 - (float)Main.player[this.target].aggro;
				float num5 = (float)((Main.player[this.target].height + Main.player[this.target].width + this.height + this.width) / 4 + 600 + 50);
				if (Main.player[this.target].itemAnimation != 0 || Main.player[this.target].aggro >= 0 || num4 <= num5 || this.oldTarget < 0 || this.oldTarget > 254)
				{
					this.direction = 1;
					if ((float)(this.targetRect.X + this.targetRect.Width / 2) < this.position.X + (float)(this.width / 2))
					{
						this.direction = -1;
					}
					this.directionY = 1;
					if ((float)(this.targetRect.Y + this.targetRect.Height / 2) < this.position.Y + (float)(this.height / 2))
					{
						this.directionY = -1;
					}
				}
			}
			if (this.confused)
			{
				this.direction *= -1;
			}
			if ((this.direction != this.oldDirection || this.directionY != this.oldDirectionY || this.target != this.oldTarget) && !this.collideX && !this.collideY)
			{
				this.netUpdate = true;
			}
		}
		public void CheckActive()
		{
			if (this.active)
			{
				if (this.type == 8 || this.type == 9 || this.type == 11 || this.type == 12 || this.type == 14 || this.type == 15 || this.type == 40 || this.type == 41 || this.type == 96 || this.type == 97 || this.type == 99 || this.type == 100 || (this.type > 87 && this.type <= 92) || this.type == 118 || this.type == 119 || this.type == 113 || this.type == 114 || this.type == 115 || this.type == 263 || this.type == 267)
				{
					return;
				}
				if (this.type >= 246 && this.type <= 249)
				{
					return;
				}
				if (this.type >= 134 && this.type <= 136)
				{
					return;
				}
				if (this.type == 328)
				{
					return;
				}
				if (this.townNPC)
				{
					Rectangle rectangle = new Rectangle((int)(this.position.X + (float)(this.width / 2) - (float)NPC.townRangeX), (int)(this.position.Y + (float)(this.height / 2) - (float)NPC.townRangeY), NPC.townRangeX * 2, NPC.townRangeY * 2);
					for (int i = 0; i < 255; i++)
					{
						if (Main.player[i].active && rectangle.Intersects(new Rectangle((int)Main.player[i].position.X, (int)Main.player[i].position.Y, Main.player[i].width, Main.player[i].height)))
						{
							Main.player[i].townNPCs += this.npcSlots;
						}
					}
					return;
				}
				bool flag = false;
				Rectangle rectangle2 = new Rectangle((int)(this.position.X + (float)(this.width / 2) - (float)NPC.activeRangeX), (int)(this.position.Y + (float)(this.height / 2) - (float)NPC.activeRangeY), NPC.activeRangeX * 2, NPC.activeRangeY * 2);
				Rectangle rectangle3 = new Rectangle((int)((double)(this.position.X + (float)(this.width / 2)) - (double)NPC.sWidth * 0.5 - (double)this.width), (int)((double)(this.position.Y + (float)(this.height / 2)) - (double)NPC.sHeight * 0.5 - (double)this.height), NPC.sWidth + this.width * 2, NPC.sHeight + this.height * 2);
				for (int j = 0; j < 255; j++)
				{
					if (Main.player[j].active)
					{
						if (rectangle2.Intersects(new Rectangle((int)Main.player[j].position.X, (int)Main.player[j].position.Y, Main.player[j].width, Main.player[j].height)))
						{
							flag = true;
							if (this.type != 25 && this.type != 30 && this.type != 33 && this.lifeMax > 0)
							{
								Main.player[j].activeNPCs += this.npcSlots;
							}
						}
						if (rectangle3.Intersects(new Rectangle((int)Main.player[j].position.X, (int)Main.player[j].position.Y, Main.player[j].width, Main.player[j].height)))
						{
							this.timeLeft = NPC.activeTime;
						}
						if (this.type == 7 || this.type == 10 || this.type == 13 || this.type == 39 || this.type == 87)
						{
							flag = true;
						}
						if (this.boss || this.type == 35 || this.type == 36 || this.type == 127 || this.type == 128 || this.type == 129 || this.type == 130 || this.type == 131)
						{
							flag = true;
						}
					}
				}
				this.timeLeft--;
				if (this.timeLeft <= 0)
				{
					flag = false;
				}
				if (!flag && Main.netMode != 1)
				{
					NPC.noSpawnCycle = true;
					this.active = false;
					if (Main.netMode == 2)
					{
						this.netSkip = -1;
						this.life = 0;
						NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0);
					}
					if (this.aiStyle == 6)
					{
						for (int k = (int)this.ai[0]; k > 0; k = (int)Main.npc[k].ai[0])
						{
							if (Main.npc[k].active)
							{
								Main.npc[k].active = false;
								if (Main.netMode == 2)
								{
									Main.npc[k].life = 0;
									Main.npc[k].netSkip = -1;
									NetMessage.SendData(23, -1, -1, "", k, 0f, 0f, 0f, 0);
								}
							}
						}
					}
				}
			}
		}
		public static void SpawnNPC()
		{
			if (NPC.noSpawnCycle)
			{
				NPC.noSpawnCycle = false;
				return;
			}
			bool flag = false;
			int num = 0;
			int num2 = 0;
			int num3 = 0;
			int num4 = 0;
			for (int i = 0; i < 255; i++)
			{
				if (Main.player[i].active)
				{
					num4++;
				}
			}
			for (int j = 0; j < 255; j++)
			{
				if (Main.player[j].active && !Main.player[j].dead)
				{
					bool flag2 = false;
					bool flag3 = false;
					bool flag4 = false;
					bool flag5 = false;
					bool flag6 = false;
					if (Main.player[j].active && Main.invasionType > 0 && Main.invasionDelay == 0 && Main.invasionSize > 0 && (double)Main.player[j].position.Y < Main.worldSurface * 16.0 + (double)NPC.sHeight)
					{
						int num5 = 3000;
						if ((double)Main.player[j].position.X > Main.invasionX * 16.0 - (double)num5 && (double)Main.player[j].position.X < Main.invasionX * 16.0 + (double)num5)
						{
							flag4 = true;
						}
					}
					bool flag7 = false;
					NPC.spawnRate = NPC.defaultSpawnRate;
					NPC.maxSpawns = NPC.defaultMaxSpawns;
					if (Main.hardMode)
					{
						NPC.spawnRate = (int)((double)NPC.defaultSpawnRate * 0.9);
						NPC.maxSpawns = NPC.defaultMaxSpawns + 1;
					}
					if (Main.player[j].position.Y > (float)((Main.maxTilesY - 200) * 16))
					{
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 2f);
					}
					else if ((double)Main.player[j].position.Y > Main.rockLayer * 16.0 + (double)NPC.sHeight)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.4);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.9f);
					}
					else if ((double)Main.player[j].position.Y > Main.worldSurface * 16.0 + (double)NPC.sHeight)
					{
						if (Main.hardMode)
						{
							NPC.spawnRate = (int)((double)NPC.spawnRate * 0.45);
							NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.8f);
						}
						else
						{
							NPC.spawnRate = (int)((double)NPC.spawnRate * 0.5);
							NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.7f);
						}
					}
					else if (!Main.dayTime)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.6);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.3f);
						if (Main.bloodMoon)
						{
							NPC.spawnRate = (int)((double)NPC.spawnRate * 0.3);
							NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.8f);
						}
						if (Main.pumpkinMoon)
						{
							NPC.spawnRate = (int)((double)NPC.spawnRate * 0.2);
							NPC.maxSpawns *= 2;
						}
					}
					else if (Main.dayTime && Main.eclipse)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.2);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.9f);
					}
					if (Main.player[j].zoneSnow && (double)(Main.player[j].position.Y / 16f) < Main.worldSurface)
					{
						NPC.maxSpawns = (int)((float)NPC.maxSpawns + (float)NPC.maxSpawns * Main.cloudAlpha);
						NPC.spawnRate = (int)((float)NPC.spawnRate * (1f - Main.cloudAlpha + 1f) / 2f);
					}
					if (Main.player[j].zoneDungeon)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.4);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.7f);
					}
					else if (Main.player[j].zoneJungle)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.4);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.5f);
					}
					else if (Main.player[j].zoneEvil || Main.player[j].zoneBlood)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.65);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.3f);
					}
					else if (Main.player[j].zoneMeteor)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.4);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.1f);
					}
					if (Main.player[j].zoneHoly && (double)Main.player[j].position.Y > Main.rockLayer * 16.0 + (double)NPC.sHeight)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.65);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.3f);
					}
					if (Main.wof >= 0 && Main.player[j].position.Y > (float)((Main.maxTilesY - 200) * 16))
					{
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 0.3f);
						NPC.spawnRate *= 3;
					}
					if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.2)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 0.6f);
					}
					else if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.4)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 0.7f);
					}
					else if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.6)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 0.8f);
					}
					else if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.8)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 0.9f);
					}
					if ((double)(Main.player[j].position.Y * 16f) > (Main.worldSurface + Main.rockLayer) / 2.0 || Main.player[j].zoneEvil || Main.player[j].zoneBlood)
					{
						if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.2)
						{
							NPC.spawnRate = (int)((float)NPC.spawnRate * 0.7f);
						}
						else if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.4)
						{
							NPC.spawnRate = (int)((float)NPC.spawnRate * 0.9f);
						}
					}
					if (Main.player[j].inventory[Main.player[j].selectedItem].type == 148)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.75);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.5f);
					}
					if (Main.player[j].enemySpawns)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.5);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 2f);
					}
					if (Main.player[j].zoneCandle)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.75);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.5f);
					}
					if ((double)NPC.spawnRate < (double)NPC.defaultSpawnRate * 0.1)
					{
						NPC.spawnRate = (int)((double)NPC.defaultSpawnRate * 0.1);
					}
					if (NPC.maxSpawns > NPC.defaultMaxSpawns * 3)
					{
						NPC.maxSpawns = NPC.defaultMaxSpawns * 3;
					}
					if (Main.pumpkinMoon)
					{
						NPC.maxSpawns = (int)((double)NPC.defaultMaxSpawns * (2.0 + 0.3 * (double)num4));
						NPC.spawnRate = 20;
					}
					if (flag4)
					{
						NPC.maxSpawns = (int)((double)NPC.defaultMaxSpawns * (2.0 + 0.3 * (double)num4));
						NPC.spawnRate = 20;
					}
					if (Main.player[j].zoneDungeon && !NPC.downedBoss3)
					{
						NPC.spawnRate = 10;
					}
					bool flag8 = false;
					if (!flag4 && ((!Main.bloodMoon && !Main.pumpkinMoon) || Main.dayTime) && (!Main.eclipse || !Main.dayTime) && !Main.player[j].zoneDungeon && !Main.player[j].zoneEvil && !Main.player[j].zoneBlood && !Main.player[j].zoneMeteor)
					{
						if (Main.player[j].townNPCs == 1f)
						{
							flag3 = true;
							if (Main.rand.Next(3) <= 1)
							{
								flag8 = true;
								NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.6);
							}
							else
							{
								NPC.spawnRate = (int)((float)NPC.spawnRate * 2f);
							}
						}
						else if (Main.player[j].townNPCs == 2f)
						{
							flag3 = true;
							if (Main.rand.Next(3) == 0)
							{
								flag8 = true;
								NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.6);
							}
							else
							{
								NPC.spawnRate = (int)((float)NPC.spawnRate * 3f);
							}
						}
						else if (Main.player[j].townNPCs >= 3f)
						{
							flag3 = true;
							flag8 = true;
							NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.6);
						}
					}
					int num6 = (int)(Main.player[j].position.X + (float)(Main.player[j].width / 2)) / 16;
					int num7 = (int)(Main.player[j].position.Y + (float)(Main.player[j].height / 2)) / 16;
					if (Main.wallHouse[(int)Main.tile[num6, num7].wall])
					{
						flag3 = true;
					}
					if (Main.tile[num6, num7].wall == 87)
					{
						flag2 = true;
					}
					if (Main.player[j].active && !Main.player[j].dead && Main.player[j].activeNPCs < (float)NPC.maxSpawns && Main.rand.Next(NPC.spawnRate) == 0)
					{
						NPC.spawnRangeX = (int)((double)(NPC.sWidth / 16) * 0.7);
						NPC.spawnRangeY = (int)((double)(NPC.sHeight / 16) * 0.7);
						NPC.safeRangeX = (int)((double)(NPC.sWidth / 16) * 0.52);
						NPC.safeRangeY = (int)((double)(NPC.sHeight / 16) * 0.52);
						if (Main.player[j].inventory[Main.player[j].selectedItem].type == 1254 || Main.player[j].inventory[Main.player[j].selectedItem].type == 1299 || Main.player[j].scope)
						{
							float num8 = 1.5f;
							if (Main.player[j].inventory[Main.player[j].selectedItem].type == 1254 && Main.player[j].scope)
							{
								num8 = 1.25f;
							}
							else if (Main.player[j].inventory[Main.player[j].selectedItem].type == 1254)
							{
								num8 = 1.5f;
							}
							else if (Main.player[j].inventory[Main.player[j].selectedItem].type == 1299)
							{
								num8 = 1.5f;
							}
							else if (Main.player[j].scope)
							{
								num8 = 2f;
							}
							NPC.spawnRangeX += (int)((double)(NPC.sWidth / 16) * 0.5 / (double)num8);
							NPC.spawnRangeY += (int)((double)(NPC.sHeight / 16) * 0.5 / (double)num8);
							NPC.safeRangeX += (int)((double)(NPC.sWidth / 16) * 0.5 / (double)num8);
							NPC.safeRangeY += (int)((double)(NPC.sHeight / 16) * 0.5 / (double)num8);
						}
						int num9 = (int)(Main.player[j].position.X / 16f) - NPC.spawnRangeX;
						int num10 = (int)(Main.player[j].position.X / 16f) + NPC.spawnRangeX;
						int num11 = (int)(Main.player[j].position.Y / 16f) - NPC.spawnRangeY;
						int num12 = (int)(Main.player[j].position.Y / 16f) + NPC.spawnRangeY;
						int num13 = (int)(Main.player[j].position.X / 16f) - NPC.safeRangeX;
						int num14 = (int)(Main.player[j].position.X / 16f) + NPC.safeRangeX;
						int num15 = (int)(Main.player[j].position.Y / 16f) - NPC.safeRangeY;
						int num16 = (int)(Main.player[j].position.Y / 16f) + NPC.safeRangeY;
						if (num9 < 0)
						{
							num9 = 0;
						}
						if (num10 > Main.maxTilesX)
						{
							num10 = Main.maxTilesX;
						}
						if (num11 < 0)
						{
							num11 = 0;
						}
						if (num12 > Main.maxTilesY)
						{
							num12 = Main.maxTilesY;
						}
						int k = 0;
						while (k < 50)
						{
							int num17 = Main.rand.Next(num9, num10);
							int num18 = Main.rand.Next(num11, num12);
							if (Main.tile[num17, num18].nactive() && Main.tileSolid[(int)Main.tile[num17, num18].type])
							{
								goto IL_105A;
							}
							if (!Main.wallHouse[(int)Main.tile[num17, num18].wall])
							{
								if (!flag4 && (double)num18 < Main.worldSurface * 0.34999999403953552 && !flag8 && ((double)num17 < (double)Main.maxTilesX * 0.45 || (double)num17 > (double)Main.maxTilesX * 0.55 || Main.hardMode))
								{
									num3 = (int)Main.tile[num17, num18].type;
									num = num17;
									num2 = num18;
									flag7 = true;
									flag = true;
								}
								else if (!flag4 && (double)num18 < Main.worldSurface * 0.44999998807907104 && !flag8 && Main.hardMode && Main.rand.Next(10) == 0)
								{
									num3 = (int)Main.tile[num17, num18].type;
									num = num17;
									num2 = num18;
									flag7 = true;
									flag = true;
								}
								else
								{
									int l = num18;
									while (l < Main.maxTilesY)
									{
										if (Main.tile[num17, l].nactive() && Main.tileSolid[(int)Main.tile[num17, l].type])
										{
											if (num17 < num13 || num17 > num14 || l < num15 || l > num16)
											{
												num3 = (int)Main.tile[num17, l].type;
												num = num17;
												num2 = l;
												flag7 = true;
												break;
											}
											break;
										}
										else
										{
											l++;
										}
									}
								}
								if (!flag7)
								{
									goto IL_105A;
								}
								int num19 = num - NPC.spawnSpaceX / 2;
								int num20 = num + NPC.spawnSpaceX / 2;
								int num21 = num2 - NPC.spawnSpaceY;
								int num22 = num2;
								if (num19 < 0)
								{
									flag7 = false;
								}
								if (num20 > Main.maxTilesX)
								{
									flag7 = false;
								}
								if (num21 < 0)
								{
									flag7 = false;
								}
								if (num22 > Main.maxTilesY)
								{
									flag7 = false;
								}
								if (flag7)
								{
									for (int m = num19; m < num20; m++)
									{
										for (int n = num21; n < num22; n++)
										{
											if (Main.tile[m, n].nactive() && Main.tileSolid[(int)Main.tile[m, n].type])
											{
												flag7 = false;
												break;
											}
											if (Main.tile[m, n].lava())
											{
												flag7 = false;
												break;
											}
										}
									}
									goto IL_105A;
								}
								goto IL_105A;
							}
							IL_1060:
							k++;
							continue;
							IL_105A:
							if (!flag7 && !flag7)
							{
								goto IL_1060;
							}
							break;
						}
					}
					if (flag7)
					{
						Rectangle rectangle = new Rectangle(num * 16, num2 * 16, 16, 16);
						for (int num23 = 0; num23 < 255; num23++)
						{
							if (Main.player[num23].active)
							{
								Rectangle rectangle2 = new Rectangle((int)(Main.player[num23].position.X + (float)(Main.player[num23].width / 2) - (float)(NPC.sWidth / 2) - (float)NPC.safeRangeX), (int)(Main.player[num23].position.Y + (float)(Main.player[num23].height / 2) - (float)(NPC.sHeight / 2) - (float)NPC.safeRangeY), NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
								if (rectangle.Intersects(rectangle2))
								{
									flag7 = false;
								}
							}
						}
					}
					if (flag7)
					{
						if (Main.player[j].zoneDungeon && (!Main.tileDungeon[(int)Main.tile[num, num2].type] || Main.tile[num, num2 - 1].wall == 0))
						{
							flag7 = false;
						}
						if (Main.tile[num, num2 - 1].liquid > 0 && Main.tile[num, num2 - 2].liquid > 0 && !Main.tile[num, num2 - 1].lava())
						{
							if (Main.tile[num, num2 - 1].honey())
							{
								flag6 = true;
							}
							else
							{
								flag5 = true;
							}
						}
					}
					if (flag6)
					{
						flag7 = false;
					}
					if (flag7)
					{
						bool flag9 = false;
						if ((double)num2 > Main.rockLayer && num2 < Main.maxTilesY - 200 && !Main.player[j].zoneDungeon && !flag4)
						{
							if (Main.rand.Next(3) == 0)
							{
								int num24 = Main.rand.Next(5, 15);
								if (num - num24 >= 0 && num + num24 < Main.maxTilesX)
								{
									for (int num25 = num - num24; num25 < num + num24; num25++)
									{
										for (int num26 = num2 - num24; num26 < num2 + num24; num26++)
										{
											if (Main.tile[num25, num26].wall == 62)
											{
												flag9 = true;
											}
										}
									}
								}
							}
							else
							{
								int num27 = (int)Main.player[j].position.X / 16;
								int num28 = (int)Main.player[j].position.Y / 16;
								if (Main.tile[num27, num28].wall == 62)
								{
									flag9 = true;
								}
							}
						}
						bool flag10 = false;
						if (NPC.downedPlantBoss && Main.hardMode)
						{
							flag10 = true;
						}
						int num29 = (int)Main.tile[num, num2].type;
						int num30 = 200;
						if (flag)
						{
							if (Main.hardMode && Main.rand.Next(10) == 0 && !NPC.AnyNPCs(87) && !flag3)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 87, 1);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 48, 0);
							}
						}
						else if (flag4)
						{
							if (Main.invasionType == 1)
							{
								if (Main.rand.Next(9) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 29, 0);
								}
								else if (Main.rand.Next(5) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 26, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 111, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 27, 0);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 28, 0);
								}
							}
							else if (Main.invasionType == 2)
							{
								if (Main.rand.Next(7) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 145, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 143, 0);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 144, 0);
								}
							}
							else if (Main.invasionType == 3)
							{
								if (Main.rand.Next(30) == 0 && !NPC.AnyNPCs(216))
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 216, 0);
								}
								else if (Main.rand.Next(11) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 215, 0);
								}
								else if (Main.rand.Next(9) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 252, 0);
								}
								else if (Main.rand.Next(7) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 214, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 213, 0);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 212, 0);
								}
							}
						}
						else if (Main.tile[num, num2].wall == 62 || flag9)
						{
							if (Main.hardMode)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 163, 0);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 164, 0);
							}
						}
						else if (Main.hardMode && flag5 && Main.player[j].zoneJungle && Main.rand.Next(3) != 0)
						{
							NPC.NewNPC(num * 16 + 8, num2 * 16, 157, 0);
						}
						else if (Main.hardMode && flag5 && Main.player[j].zoneBlood && Main.rand.Next(3) != 0)
						{
							NPC.NewNPC(num * 16 + 8, num2 * 16, 242, 0);
						}
						else if (Main.hardMode && flag5 && Main.player[j].zoneBlood && Main.rand.Next(3) != 0)
						{
							NPC.NewNPC(num * 16 + 8, num2 * 16, 241, 0);
						}
						else if (flag5 && (num < 250 || num > Main.maxTilesX - 250) && num29 == 53 && (double)num2 < Main.rockLayer)
						{
							if (Main.rand.Next(60) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 220, 0);
							}
							else if (Main.rand.Next(25) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 221, 0);
							}
							else if (Main.rand.Next(8) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 65, 0);
							}
							else if (Main.rand.Next(3) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 67, 0);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 64, 0);
							}
						}
						else if (flag5 && (((double)num2 > Main.rockLayer && Main.rand.Next(2) == 0) || num29 == 60))
						{
							if (Main.hardMode && Main.rand.Next(3) > 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 102, 0);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 58, 0);
							}
						}
						else if (flag5 && (double)num2 > Main.worldSurface && Main.rand.Next(3) == 0)
						{
							if (Main.hardMode)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 103, 0);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 63, 0);
							}
						}
						else if (flag5 && Main.rand.Next(4) == 0)
						{
							if (Main.player[j].zoneEvil)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 57, 0);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 55, 0);
							}
						}
						else if (NPC.downedGoblins && Main.rand.Next(20) == 0 && !flag5 && (double)num2 >= Main.rockLayer && num2 < Main.maxTilesY - 210 && !NPC.savedGoblin && !NPC.AnyNPCs(105))
						{
							NPC.NewNPC(num * 16 + 8, num2 * 16, 105, 0);
						}
						else if (Main.hardMode && Main.rand.Next(20) == 0 && !flag5 && (double)num2 >= Main.rockLayer && num2 < Main.maxTilesY - 210 && !NPC.savedWizard && !NPC.AnyNPCs(106))
						{
							NPC.NewNPC(num * 16 + 8, num2 * 16, 106, 0);
						}
						else if (flag8)
						{
							if (flag5)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 55, 0);
							}
							else if (num29 == 147 || num29 == 161)
							{
								if (Main.rand.Next(2) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 148, 0);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 149, 0);
								}
							}
							else
							{
								if (num29 != 2 && num29 != 109 && (double)num2 <= Main.worldSurface)
								{
									return;
								}
								if (Main.raining)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 230, 0);
								}
								else if (Main.rand.Next(2) == 0 && (double)num2 <= Main.worldSurface)
								{
									int num31 = Main.rand.Next(4);
									if (num31 == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 297, 0);
									}
									else if (num31 == 1)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 298, 0);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 74, 0);
									}
								}
								else if (Main.halloween && Main.rand.Next(3) != 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 303, 0);
								}
								else if (Main.rand.Next(3) == 0 && (double)num2 <= Main.worldSurface)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 299, 0);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 46, 0);
								}
							}
						}
						else if (Main.player[j].zoneDungeon)
						{
							int num32 = 0;
							if (Main.tile[num, num2].wall == 94 || Main.tile[num, num2].wall == 96 || Main.tile[num, num2].wall == 98)
							{
								num32 = 1;
							}
							if (Main.tile[num, num2].wall == 95 || Main.tile[num, num2].wall == 97 || Main.tile[num, num2].wall == 99)
							{
								num32 = 2;
							}
							if (!NPC.downedBoss3)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 68, 0);
							}
							else if (!NPC.savedMech && Main.rand.Next(5) == 0 && !flag5 && !NPC.AnyNPCs(123) && (double)num2 > Main.rockLayer)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 123, 0);
							}
							else if (flag10 && Main.rand.Next(75) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 287, 0);
							}
							else if (flag10 && num32 == 0 && Main.rand.Next(25) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 293, 0);
							}
							else if (flag10 && num32 == 1 && Main.rand.Next(25) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 291, 0);
							}
							else if (flag10 && num32 == 2 && Main.rand.Next(25) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 292, 0);
							}
							else if (flag10 && !NPC.AnyNPCs(290) && num32 == 0 && Main.rand.Next(45) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 290, 0);
							}
							else if (flag10 && (num32 == 1 || num32 == 2) && Main.rand.Next(30) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 289, 0);
							}
							else if (flag10 && Main.rand.Next(20) == 0)
							{
								int num33 = 281;
								if (num32 == 0)
								{
									num33 += 2;
								}
								if (num32 == 2)
								{
									num33 += 4;
								}
								num33 += Main.rand.Next(2);
								if (!NPC.AnyNPCs(num33))
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, num33, 0);
								}
							}
							else if (flag10 && Main.rand.Next(3) != 0)
							{
								int num34 = 269;
								if (num32 == 0)
								{
									num34 += 4;
								}
								if (num32 == 2)
								{
									num34 += 8;
								}
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, num34 + Main.rand.Next(4), 0);
							}
							else if (Main.rand.Next(37) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 71, 0);
							}
							else if (num32 == 1 && Main.rand.Next(4) == 0 && !NPC.NearSpikeBall(num, num2))
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 70, 0);
							}
							else if (num32 == 2 && Main.rand.Next(15) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 72, 0);
							}
							else if (num32 == 0 && Main.rand.Next(9) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 34, 0);
							}
							else if (Main.rand.Next(7) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 32, 0);
							}
							else
							{
								int num35 = Main.rand.Next(5);
								if (num35 == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 294, 0);
								}
								else if (num35 == 1)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 295, 0);
								}
								else if (num35 == 2)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 296, 0);
								}
								else
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 31, 0);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num30].SetDefaults("Big Boned");
									}
									else if (Main.rand.Next(5) == 0)
									{
										Main.npc[num30].SetDefaults("Short Bones");
									}
								}
							}
						}
						else if (Main.player[j].zoneMeteor)
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 23, 0);
						}
						else if ((double)num2 <= Main.worldSurface && !Main.dayTime && Main.pumpkinMoon)
						{
							if (NPC.waveCount >= 15)
							{
								if (Main.rand.Next(2) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0);
								}
								else
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0);
								}
							}
							else if (NPC.waveCount == 14)
							{
								if (Main.rand.Next(5) == 0 && NPC.CountNPCS(327) < 3)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0);
								}
								else if (Main.rand.Next(5) == 0 && NPC.CountNPCS(325) < 3)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0);
								}
								else
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 315, 0);
								}
							}
							else if (NPC.waveCount == 13)
							{
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(327) < 2)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0);
								}
								if (Main.rand.Next(5) == 0 && NPC.CountNPCS(325) < 3)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0);
								}
								else if (Main.rand.Next(5) == 0 && NPC.CountNPCS(315) < 3)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 315, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0);
								}
								else
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0);
								}
							}
							else if (NPC.waveCount == 12)
							{
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(327) < 2)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0);
								}
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(325) < 2)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0);
								}
								else if (Main.rand.Next(7) == 0 && NPC.CountNPCS(315) < 2)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 315, 0);
								}
								else if (Main.rand.Next(7) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0);
								}
								else if (Main.rand.Next(5) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0);
								}
								else
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0);
								}
							}
							else if (NPC.waveCount == 11)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(327))
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0);
								}
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(325) < 2)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(315))
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 315, 0);
								}
								else if (Main.rand.Next(10) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0);
								}
								else if (Main.rand.Next(7) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0);
								}
								else
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0);
								}
							}
							else if (NPC.waveCount == 10)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(327))
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(325))
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(315))
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 315, 0);
								}
								else if (Main.rand.Next(8) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0);
								}
								else if (Main.rand.Next(5) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0);
								}
								else
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0);
								}
							}
							else if (NPC.waveCount == 9)
							{
								if (Main.rand.Next(8) == 0 && !NPC.AnyNPCs(327))
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0);
								}
								else if (Main.rand.Next(8) == 0 && !NPC.AnyNPCs(325))
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(315))
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 315, 0);
								}
								else
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0);
								}
							}
							else if (NPC.waveCount == 8)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(327))
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0);
								}
								else if (Main.rand.Next(5) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0);
								}
								else
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0);
								}
							}
							else if (NPC.waveCount == 7)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(327))
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0);
								}
								else if (Main.rand.Next(8) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0);
								}
								else if (Main.rand.Next(5) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0);
								}
								else
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0);
								}
							}
							else if (NPC.waveCount == 6)
							{
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(325) < 2)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0);
								}
								else if (Main.rand.Next(6) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0);
								}
								else
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0);
								}
							}
							else if (NPC.waveCount == 5)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(325))
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0);
								}
								else if (Main.rand.Next(8) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0);
								}
								else if (Main.rand.Next(5) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0);
								}
								else
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0);
								}
							}
							else if (NPC.waveCount == 4)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(325))
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0);
								}
								else if (Main.rand.Next(10) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0);
								}
								else
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0);
								}
							}
							else if (NPC.waveCount == 3)
							{
								if (Main.rand.Next(6) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0);
								}
								else
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0);
								}
							}
							else if (NPC.waveCount == 2)
							{
								if (Main.rand.Next(3) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0);
								}
								else
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0);
								}
							}
							else
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0);
							}
						}
						else if ((double)num2 <= Main.worldSurface && Main.dayTime && Main.eclipse)
						{
							if (Main.rand.Next(50) == 0 && !NPC.AnyNPCs(251))
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 251, 0);
							}
							else if (Main.rand.Next(10) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 253, 0);
							}
							else if (Main.rand.Next(12) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 158, 0);
							}
							else if (Main.rand.Next(3) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 162, 0);
							}
							else
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 166, 0);
							}
						}
						else if (Main.hardMode && num3 == 70 && flag5)
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 256, 0);
						}
						else if (num3 == 70 && (double)num2 <= Main.worldSurface && Main.rand.Next(3) != 0)
						{
							if (Main.rand.Next(3) == 0)
							{
								if (Main.rand.Next(4) == 0)
								{
									if (Main.hardMode && Main.rand.Next(3) != 0)
									{
										num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 260, 0);
										Main.npc[num30].ai[0] = (float)num;
										Main.npc[num30].ai[1] = (float)num2;
										Main.npc[num30].netUpdate = true;
									}
									else
									{
										num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 259, 0);
										Main.npc[num30].ai[0] = (float)num;
										Main.npc[num30].ai[1] = (float)num2;
										Main.npc[num30].netUpdate = true;
									}
								}
								else if (Main.rand.Next(2) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 257, 0);
								}
								else
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 258, 0);
								}
							}
							else if (Main.rand.Next(2) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 254, 0);
							}
							else
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 255, 0);
							}
						}
						else if (num3 == 70 && Main.hardMode && (double)num2 >= Main.worldSurface && Main.rand.Next(3) != 0)
						{
							if (Main.rand.Next(4) == 0)
							{
								if (Main.hardMode && Main.rand.Next(3) != 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 260, 0);
									Main.npc[num30].ai[0] = (float)num;
									Main.npc[num30].ai[1] = (float)num2;
									Main.npc[num30].netUpdate = true;
								}
								else
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 259, 0);
									Main.npc[num30].ai[0] = (float)num;
									Main.npc[num30].ai[1] = (float)num2;
									Main.npc[num30].netUpdate = true;
								}
							}
							else if (Main.rand.Next(2) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 257, 0);
							}
							else
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 258, 0);
							}
						}
						else if (Main.player[j].zoneEvil && Main.rand.Next(65) == 0 && !flag3)
						{
							if (Main.hardMode && Main.rand.Next(4) != 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 98, 1);
							}
							else
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 7, 1);
							}
						}
						else if (Main.hardMode && (double)num2 > Main.worldSurface && Main.rand.Next(75) == 0)
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 85, 0);
						}
						else if (Main.hardMode && Main.tile[num, num2 - 1].wall == 2 && Main.rand.Next(20) == 0)
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 85, 0);
						}
						else if (Main.hardMode && (double)num2 <= Main.worldSurface && !Main.dayTime && (Main.rand.Next(20) == 0 || (Main.rand.Next(5) == 0 && Main.moonPhase == 4)))
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 82, 0);
						}
						else if (Main.hardMode && Main.halloween && (double)num2 <= Main.worldSurface && !Main.dayTime && Main.rand.Next(10) == 0)
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 304, 0);
						}
						else if (num29 == 60 && Main.rand.Next(500) == 0 && !Main.dayTime)
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 52, 0);
						}
						else if (num29 == 60 && (double)num2 > Main.worldSurface && Main.rand.Next(60) == 0)
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 219, 0);
						}
						else if ((double)num2 > Main.worldSurface && num2 < Main.maxTilesY - 210 && !Main.player[j].zoneSnow && !Main.player[j].zoneBlood && !Main.player[j].zoneEvil && !Main.player[j].zoneJungle && !Main.player[j].zoneHoly && Main.rand.Next(10) == 0)
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 300, 0);
						}
						else if (num29 == 60 && Main.hardMode && Main.rand.Next(3) != 0)
						{
							if ((double)num2 < Main.worldSurface && !Main.dayTime && Main.rand.Next(3) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 152, 0);
							}
							else if ((double)num2 < Main.worldSurface && Main.dayTime && Main.rand.Next(4) != 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 177, 0);
							}
							else if ((double)num2 > Main.worldSurface && Main.rand.Next(100) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 205, 0);
							}
							else if ((double)num2 > Main.worldSurface && Main.rand.Next(5) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 236, 0);
							}
							else if ((double)num2 > Main.worldSurface && Main.rand.Next(4) != 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 176, 0);
								if (Main.rand.Next(10) == 0)
								{
									Main.npc[num30].SetDefaults("Tiny Moss Hornet");
								}
								if (Main.rand.Next(10) == 0)
								{
									Main.npc[num30].SetDefaults("Little Moss Hornet");
								}
								if (Main.rand.Next(10) == 0)
								{
									Main.npc[num30].SetDefaults("Big Moss Hornet");
								}
								if (Main.rand.Next(10) == 0)
								{
									Main.npc[num30].SetDefaults("Giant Moss Hornet");
								}
							}
							else if (Main.rand.Next(3) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 175, 0);
								Main.npc[num30].ai[0] = (float)num;
								Main.npc[num30].ai[1] = (float)num2;
								Main.npc[num30].netUpdate = true;
							}
							else
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 153, 0);
							}
						}
						else if (num29 == 226 && flag2)
						{
							if (Main.rand.Next(3) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 226, 0);
							}
							else
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 198, 0);
							}
						}
						else if (num29 == 60 && (double)num2 > (Main.worldSurface + Main.rockLayer) / 2.0)
						{
							if (Main.rand.Next(4) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 204, 0);
							}
							else if (Main.rand.Next(4) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 43, 0);
								Main.npc[num30].ai[0] = (float)num;
								Main.npc[num30].ai[1] = (float)num2;
								Main.npc[num30].netUpdate = true;
							}
							else
							{
								int num36 = Main.rand.Next(8);
								if (num36 == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 231, 0);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num30].SetDefaults("Little Hornet Fatty");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num30].SetDefaults("Big Hornet Fatty");
									}
								}
								else if (num36 == 1)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 232, 0);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num30].SetDefaults("Little Hornet Honey");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num30].SetDefaults("Big Hornet Honey");
									}
								}
								else if (num36 == 2)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 233, 0);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num30].SetDefaults("Little Hornet Leafy");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num30].SetDefaults("Big Hornet Leafy");
									}
								}
								else if (num36 == 3)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 234, 0);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num30].SetDefaults("Little Hornet Spikey");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num30].SetDefaults("Big Hornet Spikey");
									}
								}
								else if (num36 == 4)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 235, 0);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num30].SetDefaults("Little Hornet Stingy");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num30].SetDefaults("Big Hornet Stingy");
									}
								}
								else
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 42, 0);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num30].SetDefaults("Little Stinger");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num30].SetDefaults("Big Stinger");
									}
								}
							}
						}
						else if (num29 == 60 && Main.rand.Next(4) == 0)
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 51, 0);
						}
						else if (num29 == 60 && Main.rand.Next(8) == 0)
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 56, 0);
							Main.npc[num30].ai[0] = (float)num;
							Main.npc[num30].ai[1] = (float)num2;
							Main.npc[num30].netUpdate = true;
						}
						else if (Main.hardMode && num29 == 53 && Main.rand.Next(3) == 0)
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 78, 0);
						}
						else if (Main.hardMode && (num29 == 112 || num29 == 234) && Main.rand.Next(2) == 0)
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 79, 0);
						}
						else if (Main.hardMode && num29 == 116 && Main.rand.Next(2) == 0)
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 80, 0);
						}
						else if (Main.hardMode && !flag5 && (double)num2 < Main.rockLayer && (num29 == 116 || num29 == 117 || num29 == 109 || num29 == 164))
						{
							if (!Main.dayTime && Main.rand.Next(2) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 122, 0);
							}
							else if (Main.rand.Next(10) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 86, 0);
							}
							else
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 75, 0);
							}
						}
						else if (!flag3 && Main.hardMode && Main.rand.Next(50) == 0 && !flag5 && (double)num2 >= Main.rockLayer && (num29 == 116 || num29 == 117 || num29 == 109 || num29 == 164))
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 84, 0);
						}
						else if ((num29 == 204 && Main.player[j].zoneBlood) || num29 == 199 || num29 == 200 || num29 == 203)
						{
							if (Main.hardMode && (double)num2 >= Main.rockLayer && Main.rand.Next(5) == 0 && !flag3)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 182, 0);
							}
							else if (Main.hardMode && (double)num2 >= Main.rockLayer && Main.rand.Next(2) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 268, 0);
							}
							else if (Main.hardMode && Main.rand.Next(3) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 183, 0);
								if (Main.rand.Next(3) == 0)
								{
									Main.npc[num30].SetDefaults("Little Crimslime");
								}
								else if (Main.rand.Next(3) == 0)
								{
									Main.npc[num30].SetDefaults("Big Crimslime");
								}
							}
							else if (Main.hardMode && (double)num2 >= Main.rockLayer && Main.rand.Next(40) == 0 && !flag3)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 179, 0);
							}
							else if (Main.hardMode && (Main.rand.Next(2) == 0 || (double)num2 > Main.worldSurface))
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 174, 0);
							}
							else if ((Main.tile[num, num2].wall > 0 && Main.rand.Next(4) != 0) || Main.rand.Next(8) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 239, 0);
							}
							else if (Main.rand.Next(2) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 181, 0);
							}
							else
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 173, 0);
								if (Main.rand.Next(3) == 0)
								{
									Main.npc[num30].SetDefaults("Little Crimera");
								}
								else if (Main.rand.Next(3) == 0)
								{
									Main.npc[num30].SetDefaults("Big Crimera");
								}
							}
						}
						else if ((num29 == 22 && Main.player[j].zoneEvil) || num29 == 23 || num29 == 25 || num29 == 112 || num29 == 163)
						{
							if (Main.hardMode && (double)num2 >= Main.rockLayer && Main.rand.Next(3) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 101, 0);
								Main.npc[num30].ai[0] = (float)num;
								Main.npc[num30].ai[1] = (float)num2;
								Main.npc[num30].netUpdate = true;
							}
							else if (Main.hardMode && Main.rand.Next(3) == 0)
							{
								if (Main.rand.Next(3) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 121, 0);
								}
								else
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 81, 0);
								}
							}
							else if (Main.hardMode && (double)num2 >= Main.rockLayer && Main.rand.Next(40) == 0 && !flag3)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 83, 0);
							}
							else if (Main.hardMode && (Main.rand.Next(2) == 0 || (double)num2 > Main.rockLayer))
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 94, 0);
							}
							else
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 6, 0);
								if (Main.rand.Next(3) == 0)
								{
									Main.npc[num30].SetDefaults("Little Eater");
								}
								else if (Main.rand.Next(3) == 0)
								{
									Main.npc[num30].SetDefaults("Big Eater");
								}
							}
						}
						else if ((double)num2 <= Main.worldSurface)
						{
							if (Main.player[j].zoneSnow && Main.hardMode && Main.cloudAlpha > 0f && !NPC.AnyNPCs(243) && Main.rand.Next(20) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 243, 0);
							}
							else if (Main.player[j].zoneHoly && Main.hardMode && Main.cloudAlpha > 0f && !NPC.AnyNPCs(244) && Main.rand.Next(20) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 244, 0);
							}
							else if (!Main.player[j].zoneSnow && Main.hardMode && Main.cloudAlpha > 0f && !NPC.AnyNPCs(250) && Main.rand.Next(14) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 250, 0);
							}
							else if (Main.dayTime)
							{
								int num37 = Math.Abs(num - Main.spawnTileX);
								if (num37 < Main.maxTilesX / 3 && Main.rand.Next(15) == 0 && (num29 == 2 || num29 == 109 || num29 == 147 || num29 == 161))
								{
									if (num29 == 147 || num29 == 161)
									{
										if (Main.rand.Next(2) == 0)
										{
											NPC.NewNPC(num * 16 + 8, num2 * 16, 148, 0);
										}
										else
										{
											NPC.NewNPC(num * 16 + 8, num2 * 16, 149, 0);
										}
									}
									else if (Main.halloween && Main.rand.Next(3) != 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 303, 0);
									}
									else if (Main.rand.Next(3) == 0 && (double)num2 <= Main.worldSurface)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 299, 0);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 46, 0);
									}
								}
								else if (num37 < Main.maxTilesX / 3 && Main.rand.Next(15) == 0 && (num29 == 2 || num29 == 109 || num29 == 147))
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 74, 0);
								}
								else if (num37 > Main.maxTilesX / 3 && num29 == 2 && Main.rand.Next(300) == 0 && !NPC.AnyNPCs(50))
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 50, 0);
								}
								else if (num29 == 53 && Main.rand.Next(5) == 0 && !flag5)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 69, 0);
								}
								else if (num29 == 53 && !flag5)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 61, 0);
								}
								else if (num37 > Main.maxTilesX / 3 && (Main.rand.Next(15) == 0 || (!NPC.downedGoblins && WorldGen.shadowOrbSmashed && Main.rand.Next(7) == 0)))
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 73, 0);
								}
								else if (Main.raining && Main.rand.Next(3) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 224, 0);
								}
								else if (Main.raining && Main.rand.Next(2) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 225, 0);
								}
								else
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 1, 0);
									if (num29 == 60)
									{
										Main.npc[num30].SetDefaults("Jungle Slime");
									}
									else if (num29 == 161 || num29 == 147)
									{
										Main.npc[num30].SetDefaults("Ice Slime");
									}
									else if (Main.halloween && Main.rand.Next(3) != 0)
									{
										Main.npc[num30].SetDefaults(302, -1f);
									}
									else if (Main.rand.Next(3) == 0 || num37 < 200)
									{
										Main.npc[num30].SetDefaults("Green Slime");
									}
									else if (Main.rand.Next(10) == 0 && num37 > 400)
									{
										Main.npc[num30].SetDefaults("Purple Slime");
									}
								}
							}
							else if (Main.rand.Next(10) == 0 && Main.halloween)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 301, 0);
							}
							else if (Main.rand.Next(6) == 0 || (Main.moonPhase == 4 && Main.rand.Next(2) == 0))
							{
								if (Main.hardMode && Main.rand.Next(3) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 133, 0);
								}
								else if (Main.halloween && Main.rand.Next(2) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(317, 319), 0);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 2, 0);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num30].SetDefaults("Demon Eye 2");
									}
								}
								else
								{
									int num38 = Main.rand.Next(5);
									if (num38 == 0)
									{
										num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 190, 0);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num30].SetDefaults("Cataract Eye 2");
										}
									}
									else if (num38 == 1)
									{
										num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 191, 0);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num30].SetDefaults("Sleepy Eye 2");
										}
									}
									else if (num38 == 2)
									{
										num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 192, 0);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num30].SetDefaults("Dialated Eye 2");
										}
									}
									else if (num38 == 3)
									{
										num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 193, 0);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num30].SetDefaults("Green Eye 2");
										}
									}
									else if (num38 == 4)
									{
										num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 194, 0);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num30].SetDefaults("Purple Eye 2");
										}
									}
								}
							}
							else if (Main.hardMode && Main.rand.Next(50) == 0 && Main.bloodMoon && !NPC.AnyNPCs(109))
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 109, 0);
							}
							else if (Main.rand.Next(250) == 0 && Main.bloodMoon)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 53, 0);
							}
							else if (Main.moonPhase == 0 && Main.hardMode && Main.rand.Next(3) != 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 104, 0);
							}
							else if (Main.hardMode && Main.rand.Next(3) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 140, 0);
							}
							else if (num3 == 147 || num3 == 161 || num3 == 163 || num3 == 164 || num3 == 162)
							{
								if (Main.hardMode && Main.rand.Next(4) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 169, 0);
								}
								else if (Main.hardMode && Main.rand.Next(3) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 155, 0);
								}
								else
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 161, 0);
								}
							}
							else if (Main.raining && Main.rand.Next(2) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 223, 0);
								if (Main.rand.Next(3) == 0)
								{
									if (Main.rand.Next(2) == 0)
									{
										Main.npc[num30].SetDefaults("Small Rain Zombie");
									}
									else
									{
										Main.npc[num30].SetDefaults("Big Rain Zombie");
									}
								}
							}
							else
							{
								int num39 = Main.rand.Next(7);
								if (Main.halloween && Main.rand.Next(2) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(319, 322), 0);
								}
								else if (num39 == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 3, 0);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num30].SetDefaults("Small Zombie");
										}
										else
										{
											Main.npc[num30].SetDefaults("Big Zombie");
										}
									}
								}
								else if (num39 == 1)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 132, 0);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num30].SetDefaults("Small Bald Zombie");
										}
										else
										{
											Main.npc[num30].SetDefaults("Big Bald Zombie");
										}
									}
								}
								else if (num39 == 2)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 186, 0);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num30].SetDefaults("Small Pincushion Zombie");
										}
										else
										{
											Main.npc[num30].SetDefaults("Big Pincushion Zombie");
										}
									}
								}
								else if (num39 == 3)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 187, 0);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num30].SetDefaults("Small Slimed Zombie");
										}
										else
										{
											Main.npc[num30].SetDefaults("Big Slimed Zombie");
										}
									}
								}
								else if (num39 == 4)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 188, 0);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num30].SetDefaults("Small Swamp Zombie");
										}
										else
										{
											Main.npc[num30].SetDefaults("Big Swamp Zombie");
										}
									}
								}
								else if (num39 == 5)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 189, 0);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num30].SetDefaults("Small Twiggy Zombie");
										}
										else
										{
											Main.npc[num30].SetDefaults("Big Twiggy Zombie");
										}
									}
								}
								else if (num39 == 6)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 200, 0);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num30].SetDefaults("Small Female Zombie");
										}
										else
										{
											Main.npc[num30].SetDefaults("Big Female Zombie");
										}
									}
								}
							}
						}
						else if ((double)num2 <= Main.rockLayer)
						{
							if (!flag3 && Main.rand.Next(50) == 0 && !Main.player[j].zoneSnow)
							{
								if (Main.hardMode)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 95, 1);
								}
								else if (Main.player[j].zoneSnow)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 185, 0);
								}
								else
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 10, 1);
								}
							}
							else if (Main.hardMode && Main.rand.Next(3) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 140, 0);
							}
							else if (Main.hardMode && Main.rand.Next(4) != 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 141, 0);
							}
							else if (num29 == 147 || num29 == 161 || Main.player[j].zoneSnow)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 147, 0);
							}
							else
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 1, 0);
								if (Main.rand.Next(5) == 0)
								{
									Main.npc[num30].SetDefaults("Yellow Slime");
								}
								else if (Main.rand.Next(2) == 0)
								{
									Main.npc[num30].SetDefaults("Blue Slime");
								}
								else
								{
									Main.npc[num30].SetDefaults("Red Slime");
								}
							}
						}
						else if (num2 > Main.maxTilesY - 190)
						{
							if (Main.rand.Next(40) == 0 && !NPC.AnyNPCs(39))
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 39, 1);
							}
							else if (Main.rand.Next(14) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 24, 0);
							}
							else if (Main.rand.Next(8) == 0)
							{
								if (Main.rand.Next(7) == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 66, 0);
								}
								else if (NPC.downedMechBossAny && Main.rand.Next(5) != 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 156, 0);
								}
								else
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 62, 0);
								}
							}
							else if (Main.rand.Next(3) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 59, 0);
							}
							else if (NPC.downedMechBossAny && Main.rand.Next(5) != 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 151, 0);
							}
							else
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 60, 0);
							}
						}
						else if (Main.rand.Next(60) == 0)
						{
							if (Main.player[j].zoneSnow)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 218, 0);
							}
							else
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 217, 0);
							}
						}
						else if ((num29 == 116 || num29 == 117 || num29 == 164) && !flag3 && Main.rand.Next(8) == 0)
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 120, 0);
						}
						else if ((num3 == 147 || num3 == 161 || num3 == 162 || num3 == 163 || num3 == 164) && !flag3 && Main.hardMode && Main.player[j].zoneEvil && Main.rand.Next(30) == 0)
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 170, 0);
						}
						else if ((num3 == 147 || num3 == 161 || num3 == 162 || num3 == 163 || num3 == 164) && !flag3 && Main.hardMode && Main.player[j].zoneHoly && Main.rand.Next(30) == 0)
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 171, 0);
						}
						else if ((num3 == 147 || num3 == 161 || num3 == 162 || num3 == 163 || num3 == 164) && !flag3 && Main.hardMode && Main.player[j].zoneBlood && Main.rand.Next(30) == 0)
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 171, 0);
						}
						else if (Main.hardMode && Main.player[j].zoneSnow && Main.rand.Next(10) == 0)
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 154, 0);
						}
						else if (!flag3 && Main.rand.Next(100) == 0 && !Main.player[j].zoneHoly)
						{
							if (Main.hardMode)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 95, 1);
							}
							else if (Main.player[j].zoneSnow)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 185, 0);
							}
							else
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 10, 1);
							}
						}
						else if (Main.player[j].zoneSnow && Main.rand.Next(20) == 0)
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 185, 0);
						}
						else if (!Main.hardMode && Main.rand.Next(10) == 0)
						{
							if (Main.player[j].zoneSnow)
							{
								Main.npc[num30].SetDefaults(184, -1f);
							}
							else
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 16, 0);
							}
						}
						else if (!Main.hardMode && Main.rand.Next(4) == 0)
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 1, 0);
							if (Main.player[j].zoneJungle)
							{
								Main.npc[num30].SetDefaults("Jungle Slime");
							}
							else if (Main.player[j].zoneSnow)
							{
								Main.npc[num30].SetDefaults(184, -1f);
							}
							else
							{
								Main.npc[num30].SetDefaults("Black Slime");
							}
						}
						else if (Main.rand.Next(2) == 0)
						{
							if ((!Main.hardMode && Main.rand.Next(100) == 0) || Main.rand.Next(500) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 195, 0);
							}
							else if (Main.hardMode && (double)num2 > (Main.rockLayer + (double)Main.maxTilesY) / 2.0 && Main.rand.Next(400) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 172, 0);
							}
							else if ((double)num2 > (Main.rockLayer + (double)Main.maxTilesY) / 2.0 && Main.rand.Next(350) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 45, 0);
							}
							else if (Main.hardMode && Main.rand.Next(10) != 0)
							{
								if (Main.rand.Next(2) == 0)
								{
									if (Main.player[j].zoneSnow)
									{
										num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 197, 0);
									}
									else if (Main.halloween && Main.rand.Next(5) == 0)
									{
										num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 316, 0);
									}
									else
									{
										num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 77, 0);
										if ((double)num2 > (Main.rockLayer + (double)Main.maxTilesY) / 2.0 && Main.rand.Next(5) == 0)
										{
											Main.npc[num30].SetDefaults("Heavy Skeleton");
										}
									}
								}
								else if (Main.player[j].zoneSnow)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 206, 0);
								}
								else
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 110, 0);
								}
							}
							else if (Main.rand.Next(20) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 44, 0);
							}
							else if (num3 == 147 || num3 == 161 || num3 == 162)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 167, 0);
							}
							else if (Main.player[j].zoneSnow)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 185, 0);
							}
							else if (Main.halloween && Main.rand.Next(2) == 0)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(322, 325), 0);
							}
							else
							{
								int num40 = Main.rand.Next(4);
								if (num40 == 0)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 21, 0);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num30].SetDefaults("Big Skeleton");
										}
										else
										{
											Main.npc[num30].SetDefaults("Small Skeleton");
										}
									}
								}
								else if (num40 == 1)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 201, 0);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num30].SetDefaults("Big Headache Skeleton");
										}
										else
										{
											Main.npc[num30].SetDefaults("Small Headache Skeleton");
										}
									}
								}
								else if (num40 == 2)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 202, 0);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num30].SetDefaults("Big Misassembled Skeleton");
										}
										else
										{
											Main.npc[num30].SetDefaults("Small Misassembled Skeleton");
										}
									}
								}
								else if (num40 == 3)
								{
									num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 203, 0);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num30].SetDefaults("Big Pantless Skeleton");
										}
										else
										{
											Main.npc[num30].SetDefaults("Small Pantless Skeleton");
										}
									}
								}
							}
						}
						else if (Main.hardMode && (Main.player[j].zoneHoly & Main.rand.Next(2) == 0))
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 138, 0);
						}
						else if (Main.player[j].zoneJungle)
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 51, 0);
						}
						else if (Main.hardMode && Main.player[j].zoneHoly)
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 137, 0);
						}
						else if (Main.hardMode && Main.rand.Next(6) > 0)
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 93, 0);
						}
						else if (num3 == 147 || num3 == 161 || num3 == 162)
						{
							if (Main.hardMode)
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 169, 0);
							}
							else
							{
								num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 150, 0);
							}
						}
						else
						{
							num30 = NPC.NewNPC(num * 16 + 8, num2 * 16, 49, 0);
						}
						if (Main.npc[num30].type == 1 && Main.rand.Next(250) == 0)
						{
							Main.npc[num30].SetDefaults("Pinky");
						}
						if (Main.netMode == 2 && num30 < 200)
						{
							NetMessage.SendData(23, -1, -1, "", num30, 0f, 0f, 0f, 0);
							return;
						}
						break;
					}
				}
			}
		}
		public static void SpawnWOF(Vector2 pos)
		{
			if (pos.Y / 16f < (float)(Main.maxTilesY - 205))
			{
				return;
			}
			if (Main.wof >= 0)
			{
				return;
			}
			if (Main.netMode == 1)
			{
				return;
			}
			Player.FindClosest(pos, 16, 16);
			int num = 1;
			if (pos.X / 16f > (float)(Main.maxTilesX / 2))
			{
				num = -1;
			}
			bool flag = false;
			int num2 = (int)pos.X;
			while (!flag)
			{
				flag = true;
				for (int i = 0; i < 255; i++)
				{
					if (Main.player[i].active && Main.player[i].position.X > (float)(num2 - 1200) && Main.player[i].position.X < (float)(num2 + 1200))
					{
						num2 -= num * 16;
						flag = false;
					}
				}
				if (num2 / 16 < 20 || num2 / 16 > Main.maxTilesX - 20)
				{
					flag = true;
				}
			}
			int num3 = (int)pos.Y;
			int num4 = num2 / 16;
			int num5 = num3 / 16;
			int num6 = 0;
			try
			{
				while (WorldGen.SolidTile(num4, num5 - num6) || Main.tile[num4, num5 - num6].liquid >= 100)
				{
					if (!WorldGen.SolidTile(num4, num5 + num6) && Main.tile[num4, num5 + num6].liquid < 100)
					{
						num5 += num6;
						goto IL_162;
					}
					num6++;
				}
				num5 -= num6;
			}
			catch
			{
			}
			IL_162:
			num3 = num5 * 16;
			int num7 = NPC.NewNPC(num2, num3, 113, 0);
			if (Main.npc[num7].displayName == "")
			{
				Main.npc[num7].displayName = Main.npc[num7].name;
			}
			if (Main.netMode == 0)
			{
				Main.NewText(Main.npc[num7].displayName + " " + Lang.misc[16], 175, 75, 255, false);
				return;
			}
			if (Main.netMode == 2)
			{
				NetMessage.SendData(25, -1, -1, Main.npc[num7].displayName + " " + Lang.misc[16], 255, 175f, 75f, 255f, 0);
			}
		}
		public static void SpawnOnPlayer(int plr, int Type)
		{
			if (Main.netMode == 1)
			{
				return;
			}
			if (Type == 262 && NPC.AnyNPCs(262))
			{
				return;
			}
			if (Type != 245)
			{
				bool flag = false;
				int num = 0;
				int num2 = 0;
				int num3 = (int)(Main.player[plr].position.X / 16f) - NPC.spawnRangeX * 2;
				int num4 = (int)(Main.player[plr].position.X / 16f) + NPC.spawnRangeX * 2;
				int num5 = (int)(Main.player[plr].position.Y / 16f) - NPC.spawnRangeY * 2;
				int num6 = (int)(Main.player[plr].position.Y / 16f) + NPC.spawnRangeY * 2;
				int num7 = (int)(Main.player[plr].position.X / 16f) - NPC.safeRangeX;
				int num8 = (int)(Main.player[plr].position.X / 16f) + NPC.safeRangeX;
				int num9 = (int)(Main.player[plr].position.Y / 16f) - NPC.safeRangeY;
				int num10 = (int)(Main.player[plr].position.Y / 16f) + NPC.safeRangeY;
				if (num3 < 0)
				{
					num3 = 0;
				}
				if (num4 > Main.maxTilesX)
				{
					num4 = Main.maxTilesX;
				}
				if (num5 < 0)
				{
					num5 = 0;
				}
				if (num6 > Main.maxTilesY)
				{
					num6 = Main.maxTilesY;
				}
				for (int i = 0; i < 1000; i++)
				{
					int j = 0;
					while (j < 100)
					{
						int num11 = Main.rand.Next(num3, num4);
						int num12 = Main.rand.Next(num5, num6);
						if (Main.tile[num11, num12].nactive() && Main.tileSolid[(int)Main.tile[num11, num12].type])
						{
							goto IL_518;
						}
						if (!Main.wallHouse[(int)Main.tile[num11, num12].wall] || i >= 999)
						{
							int k = num12;
							while (k < Main.maxTilesY)
							{
								if (Main.tile[num11, k].nactive() && Main.tileSolid[(int)Main.tile[num11, k].type])
								{
									if (num11 < num7 || num11 > num8 || k < num9 || k > num10 || i == 999)
									{
										byte arg_43A_0 = Main.tile[num11, k].type;
										num = num11;
										num2 = k;
										flag = true;
										break;
									}
									break;
								}
								else
								{
									k++;
								}
							}
							if (!flag || i >= 999)
							{
								goto IL_518;
							}
							int num13 = num - NPC.spawnSpaceX / 2;
							int num14 = num + NPC.spawnSpaceX / 2;
							int num15 = num2 - NPC.spawnSpaceY;
							int num16 = num2;
							if (num13 < 0)
							{
								flag = false;
							}
							if (num14 > Main.maxTilesX)
							{
								flag = false;
							}
							if (num15 < 0)
							{
								flag = false;
							}
							if (num16 > Main.maxTilesY)
							{
								flag = false;
							}
							if (flag)
							{
								for (int l = num13; l < num14; l++)
								{
									for (int m = num15; m < num16; m++)
									{
										if (Main.tile[l, m].nactive() && Main.tileSolid[(int)Main.tile[l, m].type])
										{
											flag = false;
											break;
										}
									}
								}
								goto IL_518;
							}
							goto IL_518;
						}
						IL_520:
						j++;
						continue;
						IL_518:
						if (!flag && !flag)
						{
							goto IL_520;
						}
						break;
					}
					if (flag && i < 999)
					{
						Rectangle rectangle = new Rectangle(num * 16, num2 * 16, 16, 16);
						for (int n = 0; n < 255; n++)
						{
							if (Main.player[n].active)
							{
								Rectangle rectangle2 = new Rectangle((int)(Main.player[n].position.X + (float)(Main.player[n].width / 2) - (float)(NPC.sWidth / 2) - (float)NPC.safeRangeX), (int)(Main.player[n].position.Y + (float)(Main.player[n].height / 2) - (float)(NPC.sHeight / 2) - (float)NPC.safeRangeY), NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
								if (rectangle.Intersects(rectangle2))
								{
									flag = false;
								}
							}
						}
					}
					if (flag)
					{
						break;
					}
				}
				if (flag)
				{
					int num17 = NPC.NewNPC(num * 16 + 8, num2 * 16, Type, 1);
					if (num17 == 200)
					{
						return;
					}
					Main.npc[num17].target = plr;
					Main.npc[num17].timeLeft *= 20;
					string str = Main.npc[num17].name;
					if (Main.npc[num17].displayName != "")
					{
						str = Main.npc[num17].displayName;
					}
					if (Main.netMode == 2 && num17 < 200)
					{
						NetMessage.SendData(23, -1, -1, "", num17, 0f, 0f, 0f, 0);
					}
					if (Type == 125)
					{
						if (Main.netMode == 0)
						{
							Main.NewText("The Twins " + Lang.misc[16], 175, 75, 255, false);
							return;
						}
						if (Main.netMode == 2)
						{
							NetMessage.SendData(25, -1, -1, "The Twins " + Lang.misc[16], 255, 175f, 75f, 255f, 0);
							return;
						}
					}
					else if (Type != 82 && Type != 126 && Type != 50)
					{
						if (Main.netMode == 0)
						{
							Main.NewText(str + " " + Lang.misc[16], 175, 75, 255, false);
							return;
						}
						if (Main.netMode == 2)
						{
							NetMessage.SendData(25, -1, -1, str + " " + Lang.misc[16], 255, 175f, 75f, 255f, 0);
						}
					}
				}
				return;
			}
			if (NPC.AnyNPCs(245))
			{
				return;
			}
			try
			{
				int num18 = (int)Main.player[plr].center().X / 16;
				int num19 = (int)Main.player[plr].center().Y / 16;
				int num20 = 0;
				int num21 = 0;
				for (int num22 = num18 - 20; num22 < num18 + 20; num22++)
				{
					for (int num23 = num19 - 20; num23 < num19 + 20; num23++)
					{
						if (Main.tile[num22, num23].active() && Main.tile[num22, num23].type == 237 && Main.tile[num22, num23].frameX == 18 && Main.tile[num22, num23].frameY == 0)
						{
							num20 = num22;
							num21 = num23;
						}
					}
				}
				if (num20 > 0 && num21 > 0)
				{
					int num24 = num21 - 15;
					int num25 = num21 - 15;
					for (int num26 = num21; num26 > num21 - 100; num26--)
					{
						if (WorldGen.SolidTile(num20, num26))
						{
							num24 = num26;
							break;
						}
					}
					for (int num27 = num21; num27 < num21 + 100; num27++)
					{
						if (WorldGen.SolidTile(num20, num27))
						{
							num25 = num27;
							break;
						}
					}
					num21 = (num24 + num24 + num25) / 3;
					int num28 = NPC.NewNPC(num20 * 16 + 8, num21 * 16, 245, 100);
					Main.npc[num28].target = plr;
					string str2 = Main.npc[num28].name;
					if (Main.netMode == 0)
					{
						Main.NewText(str2 + " " + Lang.misc[16], 175, 75, 255, false);
					}
					else if (Main.netMode == 2)
					{
						NetMessage.SendData(25, -1, -1, str2 + " " + Lang.misc[16], 255, 175f, 75f, 255f, 0);
					}
				}
			}
			catch
			{
			}
		}
		public static int NewNPC(int X, int Y, int Type, int Start = 0)
		{
			int num = -1;
			if (Type == 222)
			{
				for (int i = 199; i >= 0; i--)
				{
					if (!Main.npc[i].active)
					{
						num = i;
						break;
					}
				}
			}
			else
			{
				for (int j = Start; j < 200; j++)
				{
					if (!Main.npc[j].active)
					{
						num = j;
						break;
					}
				}
			}
			if (num >= 0)
			{
				Main.npc[num] = new NPC();
				Main.npc[num].SetDefaults(Type, -1f);
				if (ServerApi.Hooks.InvokeNpcSpawn(Main.npc[num]))
				{
					return 200;
				}
				Main.npc[num].position.X = (float)(X - Main.npc[num].width / 2);
				Main.npc[num].position.Y = (float)(Y - Main.npc[num].height);
				Main.npc[num].active = true;
				Main.npc[num].timeLeft = (int)((double)NPC.activeTime * 1.25);
				Main.npc[num].wet = Collision.WetCollision(Main.npc[num].position, Main.npc[num].width, Main.npc[num].height);
				if (Type == 50)
				{
					if (Main.netMode == 0)
					{
						Main.NewText(Main.npc[num].name + " " + Lang.misc[16], 175, 75, 255, false);
					}
					else if (Main.netMode == 2)
					{
						NetMessage.SendData(25, -1, -1, Main.npc[num].name + " " + Lang.misc[16], 255, 175f, 75f, 255f, 0);
					}
				}
				return num;
			}
			return 200;
		}
		public void xForm(int oldType, int newType)
		{
			if ((oldType == 158 && newType == 159) || (oldType == 159 && newType == 158))
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
				int num = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), this.velocity, 99, this.scale);
				Main.gore[num].velocity *= 0.3f;
				num = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), this.velocity, 99, this.scale);
				Main.gore[num].velocity *= 0.3f;
				num = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 10f), this.velocity, 99, this.scale);
				Main.gore[num].velocity *= 0.3f;
			}
		}
		public void Teleport(Vector2 newPos, int Style = 0)
		{
			Main.TeleportEffect(this.getRect(), Style);
			this.position = newPos;
			Main.TeleportEffect(this.getRect(), Style);
			this.teleportTime = 1f;
			if (Main.netMode == 2)
			{
				NetMessage.SendData(65, -1, -1, "", 1, (float)this.whoAmI, newPos.X, newPos.Y, Style);
			}
		}
		public void Transform(int newType)
		{
			if (Main.netMode != 1)
			{
				bool flag = false;
				if (this.value == 0f)
				{
					flag = true;
				}
				int[] array = new int[5];
				int[] array2 = new int[5];
				for (int i = 0; i < 5; i++)
				{
					array[i] = this.buffType[i];
					array2[i] = this.buffTime[i];
				}
				int oldType = this.type;
				int num = this.life;
				int num2 = this.lifeMax;
				Vector2 vector = this.velocity;
				this.position.Y = this.position.Y + (float)this.height;
				int num3 = this.spriteDirection;
				this.SetDefaults(newType, -1f);
				this.spriteDirection = num3;
				this.TargetClosest(true);
				this.velocity = vector;
				this.position.Y = this.position.Y - (float)this.height;
				if (flag)
				{
					this.value = 0f;
				}
				if (this.lifeMax == num2)
				{
					this.life = num;
				}
				if (newType == 107 || newType == 108)
				{
					this.homeTileX = (int)(this.position.X + (float)(this.width / 2)) / 16;
					this.homeTileY = (int)(this.position.Y + (float)this.height) / 16;
					this.homeless = true;
				}
				for (int j = 0; j < 5; j++)
				{
					this.buffType[j] = array[j];
					this.buffTime[j] = array2[j];
				}
				if (Main.netMode == 2)
				{
					this.netUpdate = true;
					NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0);
					NetMessage.SendData(54, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0);
				}
				this.xForm(oldType, newType);
			}
		}
		public double StrikeNPC(int Damage, float knockBack, int hitDirection, bool crit = false, bool noEffect = false)
		{
			if (!this.active || this.life <= 0)
			{
				return 0.0;
			}
			double num = (double)Damage;
			if (this.ichor)
			{
				num = Main.CalculateDamage((int)num, this.defense - 20);
			}
			else
			{
				num = Main.CalculateDamage((int)num, this.defense);
			}
			if (crit)
			{
				num *= 2.0;
			}
			if (num >= 1.0)
			{
				this.justHit = true;
				if (this.townNPC)
				{
					this.ai[0] = 1f;
					this.ai[1] = (float)(300 + Main.rand.Next(300));
					this.ai[2] = 0f;
					this.direction = hitDirection;
					this.netUpdate = true;
				}
				if (this.aiStyle == 8 && Main.netMode != 1)
				{
					if (this.type == 172)
					{
						this.ai[0] = 450f;
					}
					else
					{
						this.ai[0] = 400f;
					}
					this.TargetClosest(true);
				}
				if (this.type == 184)
				{
					this.localAI[0] = 60f;
				}
				if (this.type == 185)
				{
					this.localAI[0] = 1f;
				}
				if (this.realLife >= 0)
				{
					Main.npc[this.realLife].life -= (int)num;
					this.life = Main.npc[this.realLife].life;
					this.lifeMax = Main.npc[this.realLife].lifeMax;
				}
				else
				{
					this.life -= (int)num;
				}
				if (knockBack > 0f && this.knockBackResist > 0f)
				{
					float num2 = knockBack * this.knockBackResist;
					if (num2 > 8f)
					{
						num2 = 8f;
					}
					if (crit)
					{
						num2 *= 1.4f;
					}
					if (num * 10.0 > (double)this.lifeMax)
					{
						if (hitDirection < 0 && this.velocity.X > -num2)
						{
							if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X - num2;
							}
							this.velocity.X = this.velocity.X - num2;
							if (this.velocity.X < -num2)
							{
								this.velocity.X = -num2;
							}
						}
						else if (hitDirection > 0 && this.velocity.X < num2)
						{
							if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X + num2;
							}
							this.velocity.X = this.velocity.X + num2;
							if (this.velocity.X > num2)
							{
								this.velocity.X = num2;
							}
						}
						if (this.type == 185)
						{
							num2 *= 1.5f;
						}
						if (!this.noGravity)
						{
							num2 *= -0.75f;
						}
						else
						{
							num2 *= -0.5f;
						}
						if (this.velocity.Y > num2)
						{
							this.velocity.Y = this.velocity.Y + num2;
							if (this.velocity.Y < num2)
							{
								this.velocity.Y = num2;
							}
						}
					}
					else
					{
						if (!this.noGravity)
						{
							this.velocity.Y = -num2 * 0.75f * this.knockBackResist;
						}
						else
						{
							this.velocity.Y = -num2 * 0.5f * this.knockBackResist;
						}
						this.velocity.X = num2 * (float)hitDirection * this.knockBackResist;
					}
				}
				if ((this.type == 113 || this.type == 114) && this.life <= 0)
				{
					for (int i = 0; i < 200; i++)
					{
						if (Main.npc[i].active && (Main.npc[i].type == 113 || Main.npc[i].type == 114))
						{
							Main.npc[i].HitEffect(hitDirection, num);
						}
					}
				}
				else
				{
					this.HitEffect(hitDirection, num);
				}
				if (this.soundHit > 0)
				{
					Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, this.soundHit);
				}
				if (this.realLife >= 0)
				{
					Main.npc[this.realLife].checkDead();
				}
				else
				{
					this.checkDead();
				}
				return num;
			}
			return 0.0;
		}
		public void checkDead()
		{
			if (!this.active)
			{
				return;
			}
			if (this.realLife >= 0 && this.realLife != this.whoAmI)
			{
				return;
			}
			if (this.life <= 0)
			{
				NPC.noSpawnCycle = true;
				if (this.townNPC && this.type != 37)
				{
					string str = this.name;
					if (this.displayName != "")
					{
						str = this.displayName;
					}
					if (Main.netMode == 0)
					{
						Main.NewText(str + Lang.misc[19], 255, 25, 25, false);
					}
					else if (Main.netMode == 2)
					{
						NetMessage.SendData(25, -1, -1, str + Lang.misc[19], 255, 255f, 25f, 25f, 0);
					}
				}
				if (Main.netMode != 1 && !Main.dayTime && this.type == 54 && !NPC.AnyNPCs(35))
				{
					for (int i = 0; i < 255; i++)
					{
						if (Main.player[i].active && !Main.player[i].dead && Main.player[i].killClothier)
						{
							NPC.SpawnSkeletron();
							break;
						}
					}
				}
				if (this.townNPC && Main.netMode != 1 && this.homeless && WorldGen.spawnNPC == this.type)
				{
					WorldGen.spawnNPC = 0;
				}
				if (this.soundKilled > 0)
				{
					Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, this.soundKilled);
				}
				this.NPCLoot();
				if (this.townNPC && this.type != 37 && Main.netMode != 1)
				{
					Main.chrName[this.type] = "";
					NPC.setNames();
					NetMessage.SendData(56, -1, -1, "", this.type, 0f, 0f, 0f, 0);
				}
				this.active = false;
				if (Main.pumpkinMoon)
				{
					float arg_1ED_0 = NPC.waveKills;
					if (this.type >= 305 && this.type <= 314)
					{
						NPC.waveKills += 1f;
					}
					if (this.type == 326)
					{
						NPC.waveKills += 2f;
					}
					if (this.type == 329)
					{
						NPC.waveKills += 4f;
					}
					if (this.type == 330)
					{
						NPC.waveKills += 8f;
					}
					if (this.type == 315)
					{
						NPC.waveKills += 25f;
					}
					if (this.type == 325)
					{
						NPC.waveKills += 75f;
					}
					if (this.type == 327)
					{
						NPC.waveKills += 150f;
					}
					string text = "";
					if (NPC.waveCount == 1 && NPC.waveKills >= 25f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = "Wave 2: " + Main.npcName[305] + " and " + Main.npcName[326];
					}
					if (NPC.waveCount == 2 && NPC.waveKills >= 40f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = string.Concat(new string[]
						{
							"Wave 3: ",
							Main.npcName[305],
							", ",
							Main.npcName[326],
							", and ",
							Main.npcName[329]
						});
					}
					if (NPC.waveCount == 3 && NPC.waveKills >= 50f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = string.Concat(new string[]
						{
							"Wave 4: ",
							Main.npcName[305],
							", ",
							Main.npcName[326],
							", ",
							Main.npcName[329],
							", and ",
							Main.npcName[325]
						});
					}
					if (NPC.waveCount == 4 && NPC.waveKills >= 80f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = string.Concat(new string[]
						{
							"Wave 5: ",
							Main.npcName[305],
							", ",
							Main.npcName[326],
							", ",
							Main.npcName[329],
							", ",
							Main.npcName[330],
							", and ",
							Main.npcName[325]
						});
					}
					if (NPC.waveCount == 5 && NPC.waveKills >= 100f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = string.Concat(new string[]
						{
							"Wave 6: ",
							Main.npcName[326],
							", ",
							Main.npcName[329],
							", ",
							Main.npcName[330],
							", and ",
							Main.npcName[325]
						});
					}
					if (NPC.waveCount == 6 && NPC.waveKills >= 160f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = string.Concat(new string[]
						{
							"Wave 7: ",
							Main.npcName[305],
							", ",
							Main.npcName[329],
							", ",
							Main.npcName[330],
							", and ",
							Main.npcName[327]
						});
					}
					if (NPC.waveCount == 7 && NPC.waveKills >= 180f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = string.Concat(new string[]
						{
							"Wave 8: ",
							Main.npcName[326],
							", ",
							Main.npcName[329],
							", ",
							Main.npcName[330],
							", and ",
							Main.npcName[327]
						});
					}
					if (NPC.waveCount == 8 && NPC.waveKills >= 200f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = string.Concat(new string[]
						{
							"Wave 9: ",
							Main.npcName[305],
							", ",
							Main.npcName[315],
							", ",
							Main.npcName[325],
							", and ",
							Main.npcName[327]
						});
					}
					if (NPC.waveCount == 9 && NPC.waveKills >= 250f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = string.Concat(new string[]
						{
							"Wave 10: ",
							Main.npcName[326],
							", ",
							Main.npcName[329],
							", ",
							Main.npcName[330],
							", ",
							Main.npcName[315],
							", ",
							Main.npcName[325],
							", and ",
							Main.npcName[327]
						});
					}
					if (NPC.waveCount == 10 && NPC.waveKills >= 300f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = string.Concat(new string[]
						{
							"Wave 11: ",
							Main.npcName[305],
							", ",
							Main.npcName[326],
							", ",
							Main.npcName[329],
							", ",
							Main.npcName[330],
							", ",
							Main.npcName[315],
							", ",
							Main.npcName[325],
							", and ",
							Main.npcName[327]
						});
					}
					if (NPC.waveCount == 11 && NPC.waveKills >= 375f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = string.Concat(new string[]
						{
							"Wave 12: ",
							Main.npcName[326],
							", ",
							Main.npcName[329],
							", ",
							Main.npcName[330],
							", ",
							Main.npcName[315],
							", ",
							Main.npcName[325],
							", and ",
							Main.npcName[327]
						});
					}
					if (NPC.waveCount == 12 && NPC.waveKills >= 450f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = string.Concat(new string[]
						{
							"Wave 13: ",
							Main.npcName[329],
							", ",
							Main.npcName[330],
							", ",
							Main.npcName[315],
							", ",
							Main.npcName[325],
							", and ",
							Main.npcName[327]
						});
					}
					if (NPC.waveCount == 13 && NPC.waveKills >= 525f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = string.Concat(new string[]
						{
							"Wave 14: ",
							Main.npcName[315],
							", ",
							Main.npcName[325],
							", and ",
							Main.npcName[327]
						});
					}
					if (NPC.waveCount == 14 && NPC.waveKills >= 675f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = "Final Wave: " + Main.npcName[325] + ", and " + Main.npcName[327];
					}
					if (text != "")
					{
						if (Main.netMode == 0)
						{
							Main.NewText(text, 175, 75, 255, false);
						}
						else if (Main.netMode == 2)
						{
							NetMessage.SendData(25, -1, -1, text, 255, 175f, 75f, 255f, 0);
						}
					}
				}
				if (this.type == 26 || this.type == 27 || this.type == 28 || this.type == 29 || this.type == 111 || this.type == 143 || this.type == 144 || this.type == 145 || this.type == 212 || this.type == 213 || this.type == 214 || this.type == 215)
				{
					Main.invasionSize--;
				}
				if (this.type == 216)
				{
					Main.invasionSize -= 5;
				}
			}
		}
		public void NPCLoot()
		{
			bool flag = NPC.downedMechBossAny;
			if (Main.netMode == 1)
			{
				return;
			}
			if (Main.hardMode && this.lifeMax > 1 && this.damage > 0 && !this.friendly && (double)this.position.Y > Main.rockLayer * 16.0 && Main.rand.Next(5) == 0 && this.type != 121 && this.value > 0f)
			{
				if (Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].zoneEvil || Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].zoneBlood)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 521, 1, false, 0, false);
				}
				if (Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].zoneHoly)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 520, 1, false, 0, false);
				}
			}
			if (this.type == 22 && Main.chrName[22] == "Andrew")
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 867, 1, false, 0, false);
			}
			if (Main.rand.Next(200) == 0)
			{
				int num = Item.NPCtoBanner(this.type);
				if (num > 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1615 + num - 1, 1, false, 0, false);
				}
			}
			if (Main.hardMode && this.value > 0f)
			{
				if (!NPC.downedMechBoss1 && Main.rand.Next(2500) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 556, 1, false, 0, false);
				}
				else if (!NPC.downedMechBoss2 && Main.rand.Next(2500) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 544, 1, false, 0, false);
				}
				else if (!NPC.downedMechBoss3 && Main.rand.Next(2500) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 557, 1, false, 0, false);
				}
			}
			if (Main.halloween && this.value > 0f && this.value < 500f && this.damage < 40 && this.defense < 20)
			{
				if (Main.rand.Next(2000) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1825, 1, false, 0, false);
				}
				else if (Main.rand.Next(2000) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1827, 1, false, 0, false);
				}
			}
			if (Main.hardMode && this.value > 0f)
			{
				if (Main.rand.Next(4000) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].zoneJungle)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1803, 1, false, 0, false);
				}
				if (Main.rand.Next(4000) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].zoneEvil)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1804, 1, false, 0, false);
				}
				if (Main.rand.Next(4000) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].zoneBlood)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1805, 1, false, 0, false);
				}
				if (Main.rand.Next(4000) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].zoneHoly)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1806, 1, false, 0, false);
				}
				if (Main.rand.Next(4000) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].zoneSnow)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1807, 1, false, 0, false);
				}
			}
			if (this.type == 68)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1169, 1, false, 0, false);
			}
			if (Main.pumpkinMoon)
			{
				int num2 = (int)((double)(17 - NPC.waveCount) / 1.25);
				if (num2 < 1)
				{
					num2 = 1;
				}
				if (NPC.waveCount == 15)
				{
					if (this.type == 325)
					{
						DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1855, 1, false, 0, false);
					}
					if (this.type == 327)
					{
						DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1856, 1, false, 0, false);
					}
				}
				if (Main.rand.Next(num2) == 0)
				{
					if (this.type == 315 && Main.rand.Next(20) == 0)
					{
						DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1857, 1, false, 0, false);
					}
					if (this.type >= 305 && this.type <= 314 && Main.rand.Next(10) == 0)
					{
						DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(1788, 1791), 1, false, 0, false);
					}
					if (this.type == 325)
					{
						int num3 = Main.rand.Next(5);
						if (num3 == 0)
						{
							DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1829, 1, false, 0, false);
						}
						if (num3 == 1)
						{
							DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1831, 1, false, 0, false);
						}
						if (num3 == 2)
						{
							DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1835, 1, false, 0, false);
						}
						if (num3 == 2)
						{
							DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1836, Main.rand.Next(30, 61), false, 0, false);
						}
						if (num3 == 3)
						{
							DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1837, 1, false, 0, false);
						}
						if (num3 == 4)
						{
							DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1845, 1, false, 0, false);
						}
					}
					if (this.type == 327)
					{
						int num4 = Main.rand.Next(7);
						if (num4 == 0)
						{
							DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1782, 1, false, 0, false);
						}
						if (num4 == 0)
						{
							DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1783, Main.rand.Next(50, 101), false, 0, false);
						}
						if (num4 == 1)
						{
							DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1784, 1, false, 0, false);
						}
						if (num4 == 1)
						{
							DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1785, Main.rand.Next(25, 51), false, 0, false);
						}
						if (num4 == 2)
						{
							DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1811, 1, false, 0, false);
						}
						if (num4 == 3)
						{
							DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1826, 1, false, 0, false);
						}
						if (num4 == 4)
						{
							DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1801, 1, false, 0, false);
						}
						if (num4 == 5)
						{
							DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1802, 1, false, 0, false);
						}
						if (num4 == 6)
						{
							DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1798, 1, false, 0, false);
						}
					}
				}
			}
			if (this.type == 325)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1729, Main.rand.Next(30, 51), false, 0, false);
			}
			if (this.type == 326)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1729, Main.rand.Next(1, 5), false, 0, false);
			}
			if (this.type >= 305 && this.type <= 314 && Main.rand.Next(4) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
			}
			if (this.type == 326 && Main.rand.Next(6) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
			}
			if (this.type == 329 && Main.rand.Next(4) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
			}
			if (this.type == 330 && Main.rand.Next(4) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
			}
			if (this.type == 315)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
			}
			if (this.type == 325 || this.type == 327)
			{
				int num5 = Main.rand.Next(6) + 6;
				for (int i = 0; i < num5; i++)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
				}
			}
			if (this.type == 156 && Main.rand.Next(75) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1518, 1, false, 0, false);
			}
			if (this.type == 243 && Main.rand.Next(3) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1519, 1, false, 0, false);
			}
			if (this.type >= 269 && this.type <= 280 && Main.rand.Next(450) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1517, 1, false, 0, false);
			}
			if ((this.type == 158 || this.type == 159) && Main.rand.Next(40) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1520, 1, false, 0, false);
			}
			if (this.type == 176 && Main.rand.Next(150) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1521, 1, false, 0, false);
			}
			if (this.type == 48 && Main.rand.Next(200) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1516, 1, false, 0, false);
			}
			if (this.type == 205 && Main.rand.Next(2) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1611, 1, false, 0, false);
			}
			if (Main.halloween && this.lifeMax > 1 && this.damage > 0 && !this.friendly && this.type != 121 && this.type != 23 && this.value > 0f && Main.rand.Next(80) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1774, 1, false, 0, false);
			}
			if (Main.xMas && this.lifeMax > 1 && this.damage > 0 && !this.friendly && this.type != 121 && this.value > 0f && Main.rand.Next(13) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(599, 602), 1, false, 0, false);
			}
			if ((this.type == 281 || this.type == 282) && Main.rand.Next(40) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1446, 1, false, -1, false);
			}
			if ((this.type == 283 || this.type == 284) && Main.rand.Next(40) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1444, 1, false, -1, false);
			}
			if ((this.type == 285 || this.type == 286) && Main.rand.Next(40) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1445, 1, false, -1, false);
			}
			if (this.lifeMax > 100 && this.type != 288 && this.target >= 0 && Main.hardMode && NPC.downedPlantBoss && Main.player[this.target].zoneDungeon && Main.rand.Next(15) == 0 && Main.wallDungeon[(int)Main.tile[(int)this.center().X / 16, (int)this.center().Y / 16].wall])
			{
				NPC.NewNPC((int)this.center().X, (int)this.center().Y, 288, 0);
			}
			if (this.type == 288)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1508, Main.rand.Next(1, 3), false, -1, false);
			}
			if ((this.type == 162 || this.type == 166) && Main.rand.Next(250) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1570, 1, false, -1, false);
			}
			if ((this.type == 158 || this.type == 159) && Main.rand.Next(100) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 900, 1, false, -1, false);
			}
			if (this.type == 35)
			{
				if (Main.rand.Next(7) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1281, 1, false, -1, false);
				}
				else if (Main.rand.Next(7) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1273, 1, false, -1, false);
				}
				else if (Main.rand.Next(7) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1313, 1, false, -1, false);
				}
			}
			if (Main.bloodMoon && Main.hardMode && Main.rand.Next(1000) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1314, 1, false, -1, false);
			}
			if (Main.rand.Next(100) == 0)
			{
				if (this.type == 104 || this.type == 102 || (this.type >= 269 && this.type <= 272))
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 885, 1, false, -1, false);
				}
				if (this.type == 77 || (this.type >= 273 && this.type <= 276))
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 886, 1, false, -1, false);
				}
				if (this.type == 141 || this.type == 178 || this.type == 42 || (this.type >= 231 && this.type <= 235))
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 887, 1, false, -1, false);
				}
				if (this.type == 79 || this.type == 81)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 888, 1, false, -1, false);
				}
				if (this.type == 75 || this.type == 78 || this.type == 82)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 889, 1, false, -1, false);
				}
				if (this.type == 75 || this.type == 79 || this.type == 103)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 890, 1, false, -1, false);
				}
				if (this.type == 34 || this.type == 83 || this.type == 84)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 891, 1, false, -1, false);
				}
				if (this.type == 94 || this.type == 182)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 892, 1, false, -1, false);
				}
				if (this.type == 93 || this.type == 109 || this.type == 80)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 893, 1, false, -1, false);
				}
			}
			if (this.type == 290)
			{
				if (Main.rand.Next(35) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1513, 1, false, -1, false);
				}
				else if (Main.rand.Next(15) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 938, 1, false, -1, false);
				}
			}
			if (this.type == 291)
			{
				if (Main.rand.Next(15) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1300, 1, false, -1, false);
				}
				else if (Main.rand.Next(15) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1254, 1, false, -1, false);
				}
			}
			if (this.type == 292)
			{
				if (Main.rand.Next(15) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1514, 1, false, -1, false);
				}
				else if (Main.rand.Next(15) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 679, 1, false, -1, false);
				}
			}
			if (this.type == 293 && Main.rand.Next(20) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 759, 1, false, -1, false);
			}
			if (this.type == 156 && Main.rand.Next(30) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 683, 1, false, -1, false);
			}
			if (this.type == 245)
			{
				int num6 = Main.rand.Next(8);
				if (num6 == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1258, 1, false, -1, false);
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1261, Main.rand.Next(60, 100), false, 0, false);
				}
				else if (num6 == 1)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1122, 1, false, -1, false);
				}
				else if (num6 == 2)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 899, 1, false, -1, false);
				}
				else if (num6 == 3)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1248, 1, false, -1, false);
				}
				else if (num6 == 4)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1294, 1, false, -1, false);
				}
				else if (num6 == 5)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1295, 1, false, -1, false);
				}
				else if (num6 == 6)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1296, 1, false, -1, false);
				}
				else if (num6 == 7)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1297, 1, false, -1, false);
				}
				NPC.downedGolemBoss = true;
			}
			if (this.type == 268)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1332, Main.rand.Next(1, 4), false, 0, false);
			}
			if (this.type == 109 && !NPC.downedClown)
			{
				NPC.downedClown = true;
				if (Main.netMode == 2)
				{
					NetMessage.SendData(7, -1, -1, "", 0, 0f, 0f, 0f, 0);
				}
			}
			if (this.type == 153 && Main.rand.Next(17) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1328, 1, false, -1, false);
			}
			if (this.type == 253 && Main.rand.Next(250) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1327, 1, false, -1, false);
			}
			if (this.type == 120 && Main.rand.Next(500) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1326, 1, false, -1, false);
			}
			if (this.type == 49 && Main.rand.Next(250) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1325, 1, false, -1, false);
			}
			if (this.type == 185 && Main.rand.Next(150) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 951, 1, false, -1, false);
			}
			if (this.type == 44 && Main.rand.Next(75) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1320, 1, false, -1, false);
			}
			if (this.type == 110 && Main.rand.Next(100) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1321, 1, false, -1, false);
			}
			if (this.type == 60 && Main.rand.Next(150) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1322, 1, false, -1, false);
			}
			if (this.type == 151 && Main.rand.Next(50) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1322, 1, false, -1, false);
			}
			if (this.type == 24 && Main.rand.Next(75) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1323, 1, false, -1, false);
			}
			if (this.type == 109 && Main.rand.Next(30) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1324, Main.rand.Next(1, 5), false, -1, false);
			}
			if ((this.type == 163 || this.type == 238) && Main.rand.Next(40) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1308, 1, false, -1, false);
			}
			if (this.type == 287 && Main.rand.Next(7) == 0)
			{
				if (Main.rand.Next(2) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 963, 1, false, -1, false);
				}
				else
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 977, 1, false, -1, false);
				}
			}
			if (this.type == 77 && Main.rand.Next(150) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 723, 1, false, -1, false);
			}
			if (this.type == 251 && Main.rand.Next(50) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1311, 1, false, -1, false);
			}
			if (this.type == 197 && Main.rand.Next(200) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1306, 1, false, -1, false);
			}
			if (this.type == 244)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false);
				if (Main.rand.Next(2) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false);
				}
				if (Main.rand.Next(2) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false);
				}
				if (Main.rand.Next(2) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false);
				}
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 662, Main.rand.Next(30, 60), false, 0, false);
			}
			if (this.type == 250 && Main.rand.Next(15) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1244, 1, false, -1, false);
			}
			if (this.type == 172)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 754, 1, false, -1, false);
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 755, 1, false, -1, false);
			}
			if (this.type == 110 && Main.rand.Next(200) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 682, 1, false, -1, false);
			}
			if (this.type >= 269 && this.type <= 280)
			{
				if (Main.rand.Next(600) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1183, 1, false, -1, false);
				}
				else if (Main.rand.Next(400) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1266, 1, false, -1, false);
				}
				else if (Main.rand.Next(300) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 671, 1, false, -1, false);
				}
			}
			if (this.type == 154 && Main.rand.Next(100) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1253, 1, false, -1, false);
			}
			if ((this.type == 169 || this.type == 206) && Main.rand.Next(50) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 726, 1, false, -1, false);
			}
			if (this.type == 243)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(684, 687), 1, false, -1, false);
			}
			if (this.type == 198 || this.type == 199 || this.type == 226)
			{
				if (Main.rand.Next(3000) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1172, 1, false, -1, false);
				}
				if (Main.rand.Next(100) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1293, 1, false, -1, false);
				}
			}
			if (this.type == 78 || this.type == 79 || this.type == 80)
			{
				if (Main.rand.Next(75) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 870, 1, false, -1, false);
				}
				if (Main.rand.Next(75) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 871, 1, false, -1, false);
				}
				if (Main.rand.Next(75) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 872, 1, false, -1, false);
				}
			}
			if (this.type == 85 && this.value > 0f)
			{
				if (this.ai[3] == 4f)
				{
					if (Main.rand.Next(20) == 0)
					{
						DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1312, 1, false, -1, false);
					}
					else
					{
						int num7 = Main.rand.Next(3);
						if (num7 == 0)
						{
							DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 676, 1, false, -1, false);
						}
						else if (num7 == 1)
						{
							DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 725, 1, false, -1, false);
						}
						else if (num7 == 2)
						{
							DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1264, 1, false, -1, false);
						}
					}
				}
				else
				{
					int num8 = Main.rand.Next(7);
					if (num8 == 0)
					{
						DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 437, 1, false, -1, false);
					}
					if (num8 == 1)
					{
						DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 517, 1, false, -1, false);
					}
					if (num8 == 2)
					{
						DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 535, 1, false, -1, false);
					}
					if (num8 == 3)
					{
						DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 536, 1, false, -1, false);
					}
					if (num8 == 4)
					{
						DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 532, 1, false, -1, false);
					}
					if (num8 == 5)
					{
						DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 393, 1, false, -1, false);
					}
					if (num8 == 6)
					{
						DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 554, 1, false, -1, false);
					}
				}
			}
			if (this.type == 87)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 575, Main.rand.Next(5, 11), false, 0, false);
			}
			if (this.type >= 212 && this.type <= 215)
			{
				if (Main.rand.Next(8000) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 905, 1, false, -1, false);
				}
				if (Main.rand.Next(4000) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 855, 1, false, -1, false);
				}
				if (Main.rand.Next(2000) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 854, 1, false, -1, false);
				}
				if (Main.rand.Next(200) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 672, 1, false, -1, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1277, 1, false, 0, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1278, 1, false, 0, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1279, 1, false, 0, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1280, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1704, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1705, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1710, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1716, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1720, 1, false, 0, false);
				}
			}
			else if (this.type == 216)
			{
				if (Main.rand.Next(4000) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 905, 1, false, -1, false);
				}
				if (Main.rand.Next(2000) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 855, 1, false, -1, false);
				}
				if (Main.rand.Next(1000) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 854, 1, false, -1, false);
				}
				if (Main.rand.Next(100) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 672, 1, false, -1, false);
				}
			}
			if (this.type == 161 && Main.rand.Next(50) == 0)
			{
				int num9 = Main.rand.Next(3);
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 803 + num9, 1, false, 0, false);
			}
			if (this.type == 217)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1115, 1, false, -1, false);
			}
			if (this.type == 218)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1116, 1, false, -1, false);
			}
			if (this.type == 219)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1117, 1, false, -1, false);
			}
			if (this.type == 220)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1118, 1, false, -1, false);
			}
			if (this.type == 221)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1119, 1, false, -1, false);
			}
			if (this.type == 167 && Main.rand.Next(50) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 879, 1, false, -1, false);
			}
			if (this.type == 143 || this.type == 144 || this.type == 145)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 593, Main.rand.Next(5, 11), false, 0, false);
			}
			if (this.type == 79)
			{
				if (Main.rand.Next(10) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 527, 1, false, 0, false);
				}
			}
			else if (this.type == 80 && Main.rand.Next(10) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 528, 1, false, 0, false);
			}
			if (this.type == 49 && Main.rand.Next(200) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 18, 1, false, -1, false);
			}
			if (this.type == 21 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 322 || this.type == 323 || this.type == 324)
			{
				if (Main.rand.Next(100) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 954, 1, false, -1, false);
				}
				else if (Main.rand.Next(200) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 955, 1, false, -1, false);
				}
				else if (Main.rand.Next(200) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1166, 1, false, -1, false);
				}
				else if (Main.rand.Next(500) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1274, 1, false, -1, false);
				}
			}
			else if (this.type == 6)
			{
				if (Main.rand.Next(150) == 0)
				{
					int num10 = Main.rand.Next(3);
					if (num10 == 0)
					{
						DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 956, 1, false, -1, false);
					}
					else if (num10 == 1)
					{
						DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 957, 1, false, -1, false);
					}
					else
					{
						DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 958, 1, false, -1, false);
					}
				}
			}
			else if (this.type == 42 || this.type == 43 || (this.type >= 231 && this.type <= 235))
			{
				if (Main.rand.Next(100) == 0)
				{
					int num11 = Main.rand.Next(3);
					if (num11 == 0)
					{
						DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 960, 1, false, -1, false);
					}
					if (num11 == 1)
					{
						DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 961, 1, false, -1, false);
					}
					else
					{
						DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 962, 1, false, -1, false);
					}
				}
			}
			else if (this.type == 31 || this.type == 32 || this.type == 294 || this.type == 295 || this.type == 296)
			{
				if (Main.rand.Next(450) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 959, 1, false, -1, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1307, 1, false, -1, false);
				}
			}
			if ((this.type == 174 || this.type == 179 || this.type == 182 || this.type == 183) && Main.rand.Next(200) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 996, 1, false, 0, false);
			}
			if (this.type == 101 || this.type == 98)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 522, Main.rand.Next(2, 6), false, 0, false);
			}
			if (this.type == 86)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 526, 1, false, 0, false);
				if (Main.rand.Next(100) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 856, 1, false, 0, false);
				}
			}
			if (this.type == 113)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 367, 1, false, -1, false);
				if (Main.rand.Next(2) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(489, 492), 1, false, -1, false);
				}
				else
				{
					int num12 = Main.rand.Next(3);
					if (num12 == 0)
					{
						DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 514, 1, false, -1, false);
					}
					else if (num12 == 1)
					{
						DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 426, 1, false, -1, false);
					}
					else if (num12 == 2)
					{
						DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 434, 1, false, -1, false);
					}
				}
				if (Main.netMode != 1)
				{
					int num13 = (int)(this.position.X + (float)(this.width / 2)) / 16;
					int num14 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
					int num15 = this.width / 2 / 16 + 1;
					for (int j = num13 - num15; j <= num13 + num15; j++)
					{
						for (int k = num14 - num15; k <= num14 + num15; k++)
						{
							if ((j == num13 - num15 || j == num13 + num15 || k == num14 - num15 || k == num14 + num15) && !Main.tile[j, k].active())
							{
								Main.tile[j, k].type = 140;
								Main.tile[j, k].active(true);
							}
							Main.tile[j, k].lava(false);
							Main.tile[j, k].liquid = 0;
							if (Main.netMode == 2)
							{
								NetMessage.SendTileSquare(-1, j, k, 1);
							}
							else
							{
								WorldGen.SquareTileFrame(j, k, true);
							}
						}
					}
				}
			}
			if (this.type == 186)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 40, Main.rand.Next(1, 10), false, 0, false);
			}
			if (this.type == 225)
			{
				if (Main.rand.Next(45) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1243, 1, false, 0, false);
				}
				else
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(2, 6), false, 0, false);
				}
			}
			if (this.type == 1 || this.type == 16 || this.type == 138 || this.type == 141 || this.type == 147 || this.type == 184 || this.type == 187 || this.type == 204 || this.type == 302)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 3), false, 0, false);
				if (Main.rand.Next(10000) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1309, 1, false, -1, false);
				}
			}
			if (this.type == 75)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 501, Main.rand.Next(1, 4), false, 0, false);
			}
			if (this.type == 81)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(2, 5), false, 0, false);
			}
			if (this.type == 122)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(5, 11), false, 0, false);
			}
			if (this.type == 71)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 327, 1, false, 0, false);
			}
			if (this.type == 2 || this.type == 317 || this.type == 318 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194)
			{
				if (Main.rand.Next(3) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 38, 1, false, 0, false);
				}
				else if (Main.rand.Next(100) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 236, 1, false, 0, false);
				}
			}
			if (this.type == 104 && Main.rand.Next(60) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 485, 1, false, -1, false);
			}
			if (this.type == 58)
			{
				if (Main.rand.Next(500) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 263, 1, false, 0, false);
				}
				else if (Main.rand.Next(40) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 118, 1, false, 0, false);
				}
			}
			if (this.type == 102 && Main.rand.Next(500) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 263, 1, false, 0, false);
			}
			if (this.type == 3 || this.type == 132 || this.type == 161 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 319 || this.type == 320 || this.type == 321)
			{
				if (Main.rand.Next(50) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 216, 1, false, -1, false);
				}
				if (Main.rand.Next(250) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1304, 1, false, -1, false);
				}
			}
			if (this.type == 223 && Main.rand.Next(10) == 0)
			{
				if (Main.rand.Next(2) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1135, 1, false, -1, false);
				}
				else
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1136, 1, false, -1, false);
				}
			}
			if (this.type == 66)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 267, 1, false, 0, false);
			}
			if (this.type == 62 && Main.rand.Next(50) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 272, 1, false, -1, false);
			}
			if (this.value > 0f && Main.hardMode && (double)(this.position.Y / 16f) < Main.worldSurface + 10.0 && (this.center().X / 16f < 380f || this.center().X / 16f > (float)(Main.maxTilesX - 380)) && Main.rand.Next(100) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1315, 1, false, 0, false);
			}
			if (this.type == 52)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 251, 1, false, 0, false);
			}
			if (this.type == 53)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 239, 1, false, 0, false);
			}
			if (this.type == 54)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 260, 1, false, 0, false);
			}
			if (this.type == 55 || this.type == 230)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 261, 1, false, 0, false);
			}
			if (this.type == 69 && Main.rand.Next(7) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 323, 1, false, 0, false);
			}
			if (this.type == 73)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 362, Main.rand.Next(1, 3), false, 0, false);
			}
			if (this.type == 4)
			{
				if (Main.rand.Next(150) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1299, 1, false, 0, false);
				}
				if (WorldGen.crimson)
				{
					int stack = Main.rand.Next(20) + 10;
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack, false, 0, false);
					stack = Main.rand.Next(20) + 10;
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack, false, 0, false);
					stack = Main.rand.Next(20) + 10;
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack, false, 0, false);
				}
				else
				{
					int stack2 = Main.rand.Next(30) + 20;
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 47, stack2, false, 0, false);
					stack2 = Main.rand.Next(20) + 10;
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, stack2, false, 0, false);
					stack2 = Main.rand.Next(20) + 10;
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, stack2, false, 0, false);
					stack2 = Main.rand.Next(20) + 10;
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, stack2, false, 0, false);
					stack2 = Main.rand.Next(3) + 1;
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 59, stack2, false, 0, false);
				}
			}
			if ((this.type == 6 || this.type == 94) && Main.rand.Next(3) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 68, 1, false, 0, false);
			}
			if ((this.type == 181 || this.type == 173 || this.type == 239 || this.type == 240) && Main.rand.Next(3) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1330, 1, false, 0, false);
			}
			if (this.type == 7 || this.type == 8 || this.type == 9)
			{
				if (Main.rand.Next(3) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 68, Main.rand.Next(1, 3), false, 0, false);
				}
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 69, Main.rand.Next(3, 9), false, 0, false);
			}
			if ((this.type == 10 || this.type == 11 || this.type == 12 || this.type == 95 || this.type == 96 || this.type == 97) && Main.rand.Next(100) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 215, 1, false, 0, false);
			}
			if (this.type == 47 && Main.rand.Next(75) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 243, 1, false, 0, false);
			}
			if (this.type == 222)
			{
				NPC.downedQueenBee = true;
				int num16 = Main.rand.Next(3);
				if (num16 == 0)
				{
					num16 = 1121;
				}
				else if (num16 == 1)
				{
					num16 = 1123;
				}
				else if (num16 == 2)
				{
					num16 = 1132;
				}
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, num16, 1, false, 0, false);
				if (Main.rand.Next(20) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1170, 1, false, 0, false);
				}
				if (Main.rand.Next(3) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1129, 1, false, 0, false);
				}
				else if (Main.rand.Next(2) == 0)
				{
					num16 = Main.rand.Next(842, 845);
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, num16, 1, false, 0, false);
				}
				if (Main.rand.Next(4) != 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1130, Main.rand.Next(10, 30), false, 0, false);
				}
			}
			if (this.type == 266)
			{
				int stack3 = Main.rand.Next(15, 41);
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack3, false, 0, false);
				stack3 = Main.rand.Next(15, 41);
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack3, false, 0, false);
			}
			if (this.type == 267 && NPC.AnyNPCs(266))
			{
				int stack4 = Main.rand.Next(2, 6);
				if (Main.rand.Next(3) != 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1329, stack4, false, 0, false);
				}
				if (Main.rand.Next(3) != 0)
				{
					stack4 = Main.rand.Next(4, 11);
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack4, false, 0, false);
				}
				if (Main.rand.Next(2) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLife < Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLifeMax)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
				}
			}
			if (this.type == 13 || this.type == 14 || this.type == 15)
			{
				int stack5 = Main.rand.Next(1, 3);
				if (Main.rand.Next(2) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 86, stack5, false, 0, false);
				}
				if (Main.rand.Next(2) == 0)
				{
					stack5 = Main.rand.Next(2, 6);
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, stack5, false, 0, false);
				}
				if (this.boss)
				{
					stack5 = Main.rand.Next(10, 30);
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, stack5, false, 0, false);
					stack5 = Main.rand.Next(10, 31);
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, stack5, false, 0, false);
					if (Main.rand.Next(30) == 0)
					{
						DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 994, 1, false, 0, false);
					}
				}
				if (Main.rand.Next(4) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLife < Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLifeMax)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
				}
			}
			if (this.type == 116 || this.type == 117 || this.type == 118 || this.type == 119 || this.type == 139)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
			}
			if (this.type == 63 || this.type == 64 || this.type == 103)
			{
				if (Main.rand.Next(100) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1303, 1, false, -1, false);
				}
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 282, Main.rand.Next(1, 5), false, 0, false);
			}
			if (this.type == 21 || this.type == 44 || this.type == 167 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 322 || this.type == 323 || this.type == 324)
			{
				if (Main.rand.Next(25) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 118, 1, false, 0, false);
				}
				else if (this.type == 44)
				{
					if (Main.rand.Next(20) == 0)
					{
						DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(410, 412), 1, false, 0, false);
					}
					else
					{
						DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 166, Main.rand.Next(1, 4), false, 0, false);
					}
				}
			}
			if (this.type == 45)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 238, 1, false, 0, false);
			}
			if (this.type == 50)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(256, 259), 1, false, 0, false);
			}
			if (this.type == 23 && Main.rand.Next(50) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 116, 1, false, 0, false);
			}
			if (this.type == 24 && Main.rand.Next(300) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 244, 1, false, 0, false);
			}
			if (this.type == 31 || this.type == 32 || this.type == 34)
			{
				if (Main.rand.Next(250) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 932, 1, false, 0, false);
				}
				else if (Main.rand.Next(65) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 327, 1, false, 0, false);
				}
				else
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 154, Main.rand.Next(1, 4), false, 0, false);
				}
			}
			if (this.type == 26 || this.type == 27 || this.type == 28 || this.type == 29 || this.type == 111)
			{
				if (Main.rand.Next(200) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 160, 1, false, 0, false);
				}
				else if (Main.rand.Next(2) == 0)
				{
					int stack6 = Main.rand.Next(1, 6);
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 161, stack6, false, 0, false);
				}
			}
			if (this.type == 175 && Main.rand.Next(200) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1265, 1, false, -1, false);
			}
			if ((this.type == 42 || (this.type >= 231 && this.type <= 235)) && Main.rand.Next(2) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 209, 1, false, 0, false);
			}
			if (this.type == 204 && Main.rand.Next(3) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 209, 1, false, 0, false);
			}
			if (this.type == 43 && Main.rand.Next(3) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 210, 1, false, 0, false);
			}
			if (this.type == 65)
			{
				if (Main.rand.Next(50) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 268, 1, false, 0, false);
				}
				else
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 319, 1, false, 0, false);
				}
			}
			if (this.type == 48 && Main.rand.Next(2) == 0)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 320, 1, false, 0, false);
			}
			if (this.type == 125 || this.type == 126)
			{
				int num17 = 125;
				if (this.type == 125)
				{
					num17 = 126;
				}
				if (!NPC.AnyNPCs(num17))
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 549, Main.rand.Next(25, 41), false, 0, false);
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1225, Main.rand.Next(20, 36), false, 0, false);
				}
				else
				{
					this.value = 0f;
					this.boss = false;
				}
			}
			else if (this.type == 127)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 547, Main.rand.Next(25, 41), false, 0, false);
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1225, Main.rand.Next(20, 36), false, 0, false);
			}
			else if (this.type == 134)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 548, Main.rand.Next(25, 41), false, 0, false);
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1225, Main.rand.Next(20, 36), false, 0, false);
			}
			if (this.type == 262)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1141, 1, false, -1, false);
				if (Main.rand.Next(20) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1182, 1, false, -1, false);
				}
				if (Main.rand.Next(200) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1305, 1, false, -1, false);
				}
				if (Main.rand.Next(4) == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1157, 1, false, -1, false);
				}
				int num18 = Main.rand.Next(6);
				if (!NPC.downedPlantBoss)
				{
					num18 = 0;
				}
				if (num18 == 0)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 758, 1, false, -1, false);
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 771, Main.rand.Next(20, 50), false, 0, false);
				}
				else if (num18 == 1)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1255, 1, false, -1, false);
				}
				else if (num18 == 2)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 788, 1, false, -1, false);
				}
				else if (num18 == 3)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1178, 1, false, -1, false);
				}
				else if (num18 == 4)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1259, 1, false, -1, false);
				}
				else if (num18 == 5)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1155, 1, false, -1, false);
				}
				if (!NPC.downedPlantBoss)
				{
					if (Main.netMode == 0)
					{
						Main.NewText(Lang.misc[33], 50, 255, 130, false);
					}
					else if (Main.netMode == 2)
					{
						NetMessage.SendData(25, -1, -1, Lang.misc[33], 255, 50f, 255f, 130f, 0);
					}
				}
				NPC.downedPlantBoss = true;
			}
			if ((this.boss || this.type == 125 || this.type == 126) && Main.rand.Next(10) == 0)
			{
				if (this.type == 4)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1360, 1, false, 0, false);
				}
				if (this.type == 13 || this.type == 14 || this.type == 15)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1361, 1, false, 0, false);
				}
				if (this.type == 266)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1362, 1, false, 0, false);
				}
				if (this.type == 35)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1363, 1, false, 0, false);
				}
				if (this.type == 222)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1364, 1, false, 0, false);
				}
				if (this.type == 113)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1365, 1, false, 0, false);
				}
				if (this.type == 134)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1366, 1, false, 0, false);
				}
				if (this.type == 127)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1367, 1, false, 0, false);
				}
				if (this.type == 125)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1368, 1, false, 0, false);
				}
				if (this.type == 126)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1369, 1, false, 0, false);
				}
				if (this.type == 262)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1370, 1, false, 0, false);
				}
				if (this.type == 245)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 1371, 1, false, 0, false);
				}
			}
			if (this.boss)
			{
				if (this.type == 4)
				{
					NPC.downedBoss1 = true;
				}
				else if (this.type == 13 || this.type == 14 || this.type == 15)
				{
					NPC.downedBoss2 = true;
					this.name = "Eater of Worlds";
				}
				else if (this.type == 35)
				{
					NPC.downedBoss3 = true;
					this.name = "Skeletron";
				}
				else
				{
					this.name = this.displayName;
				}
				if (this.type == 127)
				{
					NPC.downedMechBoss3 = true;
					NPC.downedMechBossAny = true;
				}
				if (this.type == 134)
				{
					NPC.downedMechBoss1 = true;
					NPC.downedMechBossAny = true;
				}
				string str = this.name;
				if (this.displayName != "")
				{
					str = this.displayName;
				}
				int stack7 = Main.rand.Next(5, 16);
				int num19 = 28;
				if (this.type == 113)
				{
					num19 = 188;
				}
				else if (this.type == 222)
				{
					num19 = 1134;
				}
				else if (this.type > 113 && this.type < 222)
				{
					num19 = 499;
				}
				else if (this.type == 245 || this.type == 262)
				{
					num19 = 499;
				}
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, num19, stack7, false, 0, false);
				int num20 = Main.rand.Next(5) + 5;
				for (int l = 0; l < num20; l++)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
				}
				if (this.type == 125 || this.type == 126)
				{
					NPC.downedMechBoss2 = true;
					NPC.downedMechBossAny = true;
					if (Main.netMode == 0)
					{
						Main.NewText("The Twins " + Lang.misc[17], 175, 75, 255, false);
					}
					else if (Main.netMode == 2)
					{
						NetMessage.SendData(25, -1, -1, "The Twins " + Lang.misc[17], 255, 175f, 75f, 255f, 0);
					}
				}
				else if (Main.netMode == 0)
				{
					Main.NewText(str + " " + Lang.misc[17], 175, 75, 255, false);
				}
				else if (Main.netMode == 2)
				{
					NetMessage.SendData(25, -1, -1, str + " " + Lang.misc[17], 255, 175f, 75f, 255f, 0);
				}
				if (this.type == 113 && Main.netMode != 1)
				{
					WorldGen.StartHardmode();
				}
				if (Main.netMode == 2)
				{
					NetMessage.SendData(7, -1, -1, "", 0, 0f, 0f, 0f, 0);
				}
			}
			if (!flag && NPC.downedMechBossAny)
			{
				if (Main.netMode == 0)
				{
					Main.NewText(Lang.misc[32], 50, 255, 130, false);
				}
				else if (Main.netMode == 2)
				{
					NetMessage.SendData(25, -1, -1, Lang.misc[32], 255, 50f, 255f, 130f, 0);
				}
			}
			if (Main.rand.Next(6) == 0 && this.lifeMax > 1 && this.damage > 0)
			{
				if (Main.rand.Next(2) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statMana < Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statManaMax)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 184, 1, false, 0, false);
				}
				else if (Main.rand.Next(2) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLife < Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLifeMax)
				{
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
				}
			}
			if (Main.rand.Next(2) == 0 && this.lifeMax > 1 && this.damage > 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statMana < Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statManaMax)
			{
				DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 184, 1, false, 0, false);
			}
			float num21 = this.value;
			if (this.midas)
			{
				num21 *= 1f + (float)Main.rand.Next(10, 50) * 0.01f;
			}
			num21 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
			if (Main.rand.Next(5) == 0)
			{
				num21 *= 1f + (float)Main.rand.Next(5, 11) * 0.01f;
			}
			if (Main.rand.Next(10) == 0)
			{
				num21 *= 1f + (float)Main.rand.Next(10, 21) * 0.01f;
			}
			if (Main.rand.Next(15) == 0)
			{
				num21 *= 1f + (float)Main.rand.Next(15, 31) * 0.01f;
			}
			if (Main.rand.Next(20) == 0)
			{
				num21 *= 1f + (float)Main.rand.Next(20, 41) * 0.01f;
			}
			while ((int)num21 > 0)
			{
				if (num21 > 1000000f)
				{
					int num22 = (int)(num21 / 1000000f);
					if (num22 > 50 && Main.rand.Next(5) == 0)
					{
						num22 /= Main.rand.Next(3) + 1;
					}
					if (Main.rand.Next(5) == 0)
					{
						num22 /= Main.rand.Next(3) + 1;
					}
					num21 -= (float)(1000000 * num22);
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 74, num22, false, 0, false);
				}
				else if (num21 > 10000f)
				{
					int num23 = (int)(num21 / 10000f);
					if (num23 > 50 && Main.rand.Next(5) == 0)
					{
						num23 /= Main.rand.Next(3) + 1;
					}
					if (Main.rand.Next(5) == 0)
					{
						num23 /= Main.rand.Next(3) + 1;
					}
					num21 -= (float)(10000 * num23);
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 73, num23, false, 0, false);
				}
				else if (num21 > 100f)
				{
					int num24 = (int)(num21 / 100f);
					if (num24 > 50 && Main.rand.Next(5) == 0)
					{
						num24 /= Main.rand.Next(3) + 1;
					}
					if (Main.rand.Next(5) == 0)
					{
						num24 /= Main.rand.Next(3) + 1;
					}
					num21 -= (float)(100 * num24);
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 72, num24, false, 0, false);
				}
				else
				{
					int num25 = (int)num21;
					if (num25 > 50 && Main.rand.Next(5) == 0)
					{
						num25 /= Main.rand.Next(3) + 1;
					}
					if (Main.rand.Next(5) == 0)
					{
						num25 /= Main.rand.Next(4) + 1;
					}
					if (num25 < 1)
					{
						num25 = 1;
					}
					num21 -= (float)num25;
					DropLoot((int)this.position.X, (int)this.position.Y, this.width, this.height, 71, num25, false, 0, false);
				}
			}
		}
		public void HitEffect(int hitDirection = 0, double dmg = 10.0)
		{
			if (!this.active)
			{
				return;
			}
			if (this.type == 1 || this.type == 16 || this.type == 71 || this.type == 244)
			{
				if (this.life > 0)
				{
					int num = 0;
					while ((double)num < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, this.alpha, this.color, 1f);
						num++;
					}
				}
				else
				{
					for (int i = 0; i < 50; i++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, this.alpha, this.color, 1f);
					}
					if (Main.netMode != 1 && this.type == 16)
					{
						int num2 = Main.rand.Next(2) + 2;
						for (int j = 0; j < num2; j++)
						{
							int num3 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 1, 0);
							Main.npc[num3].SetDefaults("Baby Slime");
							Main.npc[num3].velocity.X = this.velocity.X * 2f;
							Main.npc[num3].velocity.Y = this.velocity.Y;
							NPC expr_193_cp_0 = Main.npc[num3];
							expr_193_cp_0.velocity.X = expr_193_cp_0.velocity.X + ((float)Main.rand.Next(-20, 20) * 0.1f + (float)(j * this.direction) * 0.3f);
							NPC expr_1D1_cp_0 = Main.npc[num3];
							expr_1D1_cp_0.velocity.Y = expr_1D1_cp_0.velocity.Y - ((float)Main.rand.Next(0, 10) * 0.1f + (float)j);
							Main.npc[num3].ai[1] = (float)j;
							if (Main.netMode == 2 && num3 < 200)
							{
								NetMessage.SendData(23, -1, -1, "", num3, 0f, 0f, 0f, 0);
							}
						}
					}
				}
			}
			if (this.type >= 305 && this.type <= 314)
			{
				if (this.life > 0)
				{
					int num4 = 0;
					while ((double)num4 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 194, (float)hitDirection, -1f, 0, default(Color), 1.1f);
						num4++;
					}
				}
				else
				{
					for (int k = 0; k < 60; k++)
					{
						Dust.NewDust(this.position, this.width, this.height, 194, (float)(2 * hitDirection), -2f, 0, default(Color), 1.1f);
					}
					Gore.NewGore(this.position, this.velocity, 441, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 442, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 443, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 444, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 445, this.scale);
				}
			}
			if (this.type == 327)
			{
				if (this.life > 0)
				{
					int num5 = 0;
					while ((double)num5 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 189, (float)hitDirection, -1f, 0, default(Color), 1.1f);
						num5++;
					}
				}
				else
				{
					for (int l = 0; l < 60; l++)
					{
						Dust.NewDust(this.position, this.width, this.height, 189, (float)(2 * hitDirection), -2f, 0, default(Color), 1.1f);
					}
					for (int m = 476; m <= 484; m++)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, m, this.scale);
					}
				}
			}
			if (this.type == 325)
			{
				if (this.life > 0)
				{
					int num6 = 0;
					while ((double)num6 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 191, (float)hitDirection, -1f, 0, default(Color), 1.1f);
						num6++;
					}
				}
				else
				{
					for (int n = 0; n < 60; n++)
					{
						Dust.NewDust(this.position, this.width, this.height, 191, (float)(2 * hitDirection), -2f, 0, default(Color), 1.1f);
					}
					for (int num7 = 469; num7 <= 475; num7++)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, num7, this.scale);
					}
				}
			}
			if (this.type == 326)
			{
				if (this.life > 0)
				{
					int num8 = 0;
					while ((double)num8 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 191, (float)hitDirection, -1f, 0, default(Color), 1.1f);
						num8++;
					}
				}
				else
				{
					for (int num9 = 0; num9 < 60; num9++)
					{
						Dust.NewDust(this.position, this.width, this.height, 191, (float)(2 * hitDirection), -2f, 0, default(Color), 1.1f);
					}
				}
			}
			if (this.type == 304)
			{
				if (this.life > 0)
				{
					int num10 = 0;
					while ((double)num10 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 189, (float)hitDirection, -1f, 0, default(Color), 1.3f);
						num10++;
					}
				}
				else
				{
					for (int num11 = 0; num11 < 60; num11++)
					{
						Dust.NewDust(this.position, this.width, this.height, 189, (float)(2 * hitDirection), -2f, 0, default(Color), 1.3f);
					}
				}
			}
			if (this.type == 302)
			{
				if (this.life > 0)
				{
					int num12 = 0;
					while ((double)num12 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 192, (float)hitDirection, -1f, 100, new Color(100, 100, 100, 100), 1f);
						num12++;
					}
				}
				else
				{
					for (int num13 = 0; num13 < 50; num13++)
					{
						Dust.NewDust(this.position, this.width, this.height, 192, (float)(2 * hitDirection), -2f, 100, new Color(100, 100, 100, 100), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 440, this.scale);
				}
			}
			if (this.type >= 245 && this.type <= 249)
			{
				if (this.life > 0)
				{
					int num14 = 0;
					while ((double)num14 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 148, (float)hitDirection, -1f, 0, default(Color), 1f);
						num14++;
					}
				}
				else if (this.type == 246)
				{
					if (Main.netMode != 1)
					{
						NPC.NewNPC((int)this.center().X, (int)this.position.Y + this.height, 249, this.whoAmI);
					}
				}
				else
				{
					for (int num15 = 0; num15 < 50; num15++)
					{
						Dust.NewDust(this.position, this.width, this.height, 148, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					if (this.type == 245)
					{
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(this.position, this.velocity, 360, this.scale);
						Gore.NewGore(this.position, this.velocity, 361, this.scale);
						Gore.NewGore(this.position, this.velocity, 362, this.scale);
						Gore.NewGore(this.position, this.velocity, 363, this.scale);
						Gore.NewGore(this.position, this.velocity, 364, this.scale);
						Gore.NewGore(this.position, this.velocity, 367, this.scale);
						Gore.NewGore(this.position, this.velocity, 366, this.scale);
					}
					else if (this.type == 249)
					{
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(this.position, this.velocity, 365, this.scale);
						Gore.NewGore(this.position, this.velocity, 363, this.scale);
						Gore.NewGore(this.position, this.velocity, 362, this.scale);
					}
					else
					{
						Gore.NewGore(this.position, this.velocity, 369, this.scale);
						Gore.NewGore(this.position, this.velocity, 371, this.scale);
						Gore.NewGore(this.position, this.velocity, 370, this.scale);
					}
				}
			}
			if (this.type == 288 && this.life <= 0)
			{
				for (int num16 = 0; num16 < 50; num16++)
				{
					int num17 = Dust.NewDust(this.position, this.width, this.height, 180, this.velocity.X, this.velocity.Y, 0, default(Color), 1f);
					Main.dust[num17].velocity *= 2f;
					Main.dust[num17].noGravity = true;
					Main.dust[num17].scale = 1.4f;
				}
			}
			if (this.type == 204)
			{
				if (this.life > 0)
				{
					int num18 = 0;
					while ((double)num18 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 100, new Color(149, 208, 104), 1f);
						num18++;
					}
				}
				else
				{
					for (int num19 = 0; num19 < 50; num19++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, 100, new Color(149, 208, 104), 1f);
					}
				}
			}
			if (this.type == 225)
			{
				if (this.life > 0)
				{
					int num20 = 0;
					while ((double)num20 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 100, new Color(0, 80, 255, 100), 1f);
						num20++;
					}
				}
				else
				{
					for (int num21 = 0; num21 < 50; num21++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, 100, new Color(0, 80, 255, 100), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 314, this.scale);
				}
			}
			if (this.type == 243)
			{
				if (this.life > 0)
				{
					int num22 = 0;
					while ((double)num22 < dmg / (double)this.lifeMax * 150.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 161, (float)hitDirection, -1f, 0, default(Color), 1f);
						num22++;
					}
				}
				else
				{
					for (int num23 = 0; num23 < 200; num23++)
					{
						Dust.NewDust(this.position, this.width, this.height, 161, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 359, this.scale);
				}
			}
			if ((this.type == 210 || this.type == 211) && this.life <= 0)
			{
				for (int num24 = 0; num24 < 6; num24++)
				{
					int num25 = Dust.NewDust(this.position, this.width, this.height, 150, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num25].noGravity = true;
						Main.dust[num25].scale = 1.5f;
					}
					else
					{
						Main.dust[num25].scale = 0.8f;
					}
				}
			}
			if (this.type == 154)
			{
				if (this.life > 0)
				{
					int num26 = 0;
					while ((double)num26 < dmg / (double)this.lifeMax * 50.0)
					{
						int num27 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, this.velocity.X, this.velocity.Y, 90, default(Color), 1.5f);
						Main.dust[num27].noGravity = true;
						Main.dust[num27].velocity *= 0.2f;
						num26++;
					}
				}
				else
				{
					for (int num28 = 0; num28 < 50; num28++)
					{
						int num29 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, this.velocity.X, this.velocity.Y, 90, default(Color), 1.5f);
						Main.dust[num29].noGravity = true;
						Main.dust[num29].velocity *= 0.2f;
					}
					Gore.NewGore(this.position, this.velocity, 180, this.scale);
				}
			}
			if (this.type == 147 || this.type == 184)
			{
				if (this.life > 0)
				{
					int num30 = 0;
					while ((double)num30 < dmg / (double)this.lifeMax * 50.0)
					{
						int num31 = Dust.NewDust(this.position, this.width, this.height, 76, (float)hitDirection, -1f, 0, default(Color), 1f);
						Main.dust[num31].noGravity = true;
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 100, new Color(97, 200, 255, 100), 1f);
						num30++;
					}
				}
				else
				{
					for (int num32 = 0; num32 < 30; num32++)
					{
						int num33 = Dust.NewDust(this.position, this.width, this.height, 76, (float)hitDirection, -2f, 0, default(Color), 1f);
						Main.dust[num33].noGravity = true;
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -2f, 100, new Color(97, 200, 255, 100), 1f);
					}
				}
			}
			if (this.type == 143 || this.type == 144 || this.type == 145)
			{
				if (this.life > 0)
				{
					int num34 = 0;
					while ((double)num34 < dmg / (double)this.lifeMax * 100.0)
					{
						int num35 = Dust.NewDust(this.position, this.width, this.height, 76, (float)hitDirection, -1f, 0, default(Color), 1f);
						Main.dust[num35].noGravity = true;
						num34++;
					}
				}
				else
				{
					for (int num36 = 0; num36 < 50; num36++)
					{
						int num37 = Dust.NewDust(this.position, this.width, this.height, 76, (float)hitDirection, -1f, 0, default(Color), 1f);
						Main.dust[num37].noGravity = true;
						Main.dust[num37].scale *= 1.2f;
					}
				}
			}
			if (this.type == 141)
			{
				if (this.life > 0)
				{
					int num38 = 0;
					while ((double)num38 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, this.alpha, new Color(210, 230, 140), 1f);
						num38++;
					}
				}
				else
				{
					for (int num39 = 0; num39 < 50; num39++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, this.alpha, new Color(210, 230, 140), 1f);
					}
				}
			}
			if (this.type == 112)
			{
				for (int num40 = 0; num40 < 20; num40++)
				{
					int num41 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 18, 0f, 0f, 100, default(Color), 2f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num41].scale *= 0.6f;
					}
					else
					{
						Main.dust[num41].velocity *= 1.4f;
						Main.dust[num41].noGravity = true;
					}
				}
			}
			if (this.type == 183)
			{
				if (this.life > 0)
				{
					int num42 = 0;
					while ((double)num42 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 136, 0f, 0f, this.alpha, this.color, 1f);
						num42++;
					}
				}
				else
				{
					for (int num43 = 0; num43 < 50; num43++)
					{
						int num44 = Dust.NewDust(this.position, this.width, this.height, 136, (float)hitDirection, 0f, this.alpha, this.color, 1f);
						Main.dust[num44].velocity *= 2f;
					}
				}
			}
			if (this.type == 81 || this.type == 121)
			{
				if (this.life > 0)
				{
					int num45 = 0;
					while ((double)num45 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 14, 0f, 0f, this.alpha, this.color, 1f);
						num45++;
					}
				}
				else
				{
					for (int num46 = 0; num46 < 50; num46++)
					{
						int num47 = Dust.NewDust(this.position, this.width, this.height, 14, (float)hitDirection, 0f, this.alpha, this.color, 1f);
						Main.dust[num47].velocity *= 2f;
					}
					if (Main.netMode != 1)
					{
						if (this.type == 121)
						{
							int num48 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 81, 0);
							Main.npc[num48].SetDefaults("Slimer2");
							Main.npc[num48].velocity.X = this.velocity.X;
							Main.npc[num48].velocity.Y = this.velocity.Y;
							Gore.NewGore(this.position, this.velocity, 94, this.scale);
							if (Main.netMode == 2 && num48 < 200)
							{
								NetMessage.SendData(23, -1, -1, "", num48, 0f, 0f, 0f, 0);
							}
						}
						else if (this.scale >= 1f)
						{
							int num49 = Main.rand.Next(2) + 2;
							for (int num50 = 0; num50 < num49; num50++)
							{
								int num51 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 1, 0);
								Main.npc[num51].SetDefaults("Slimeling");
								Main.npc[num51].velocity.X = this.velocity.X * 3f;
								Main.npc[num51].velocity.Y = this.velocity.Y;
								NPC expr_1BA0_cp_0 = Main.npc[num51];
								expr_1BA0_cp_0.velocity.X = expr_1BA0_cp_0.velocity.X + ((float)Main.rand.Next(-10, 10) * 0.1f + (float)(num50 * this.direction) * 0.3f);
								NPC expr_1BDF_cp_0 = Main.npc[num51];
								expr_1BDF_cp_0.velocity.Y = expr_1BDF_cp_0.velocity.Y - ((float)Main.rand.Next(0, 10) * 0.1f + (float)num50);
								Main.npc[num51].ai[1] = (float)num50;
								if (Main.netMode == 2 && num51 < 200)
								{
									NetMessage.SendData(23, -1, -1, "", num51, 0f, 0f, 0f, 0);
								}
							}
						}
					}
				}
			}
			if (this.type == 120 || this.type == 137 || this.type == 138)
			{
				if (this.life > 0)
				{
					int num52 = 0;
					while ((double)num52 < dmg / (double)this.lifeMax * 50.0)
					{
						int num53 = Dust.NewDust(this.position, this.width, this.height, 71, 0f, 0f, 200, default(Color), 1f);
						Main.dust[num53].velocity *= 1.5f;
						num52++;
					}
				}
				else
				{
					for (int num54 = 0; num54 < 50; num54++)
					{
						int num55 = Dust.NewDust(this.position, this.width, this.height, 71, (float)hitDirection, 0f, 200, default(Color), 1f);
						Main.dust[num55].velocity *= 1.5f;
					}
				}
			}
			if (this.type == 122)
			{
				if (this.life > 0)
				{
					int num56 = 0;
					while ((double)num56 < dmg / (double)this.lifeMax * 50.0)
					{
						int num57 = Dust.NewDust(this.position, this.width, this.height, 72, 0f, 0f, 200, default(Color), 1f);
						Main.dust[num57].velocity *= 1.5f;
						num56++;
					}
				}
				else
				{
					for (int num58 = 0; num58 < 50; num58++)
					{
						int num59 = Dust.NewDust(this.position, this.width, this.height, 72, (float)hitDirection, 0f, 200, default(Color), 1f);
						Main.dust[num59].velocity *= 1.5f;
					}
				}
			}
			if (this.type == 75)
			{
				if (this.life > 0)
				{
					int num60 = 0;
					while ((double)num60 < dmg / (double)this.lifeMax * 50.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 55, 0f, 0f, 200, this.color, 1f);
						num60++;
					}
				}
				else
				{
					for (int num61 = 0; num61 < 50; num61++)
					{
						int num62 = Dust.NewDust(this.position, this.width, this.height, 55, (float)hitDirection, 0f, 200, this.color, 1f);
						Main.dust[num62].velocity *= 2f;
					}
				}
			}
			if (this.type == 63 || this.type == 64 || this.type == 103)
			{
				Color newColor = new Color(50, 120, 255, 100);
				if (this.type == 64)
				{
					newColor = new Color(225, 70, 140, 100);
				}
				if (this.type == 103)
				{
					newColor = new Color(70, 225, 140, 100);
				}
				if (this.life > 0)
				{
					int num63 = 0;
					while ((double)num63 < dmg / (double)this.lifeMax * 50.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 0, newColor, 1f);
						num63++;
					}
					return;
				}
				for (int num64 = 0; num64 < 25; num64++)
				{
					Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, 0, newColor, 1f);
				}
				return;
			}
			else
			{
				if (this.type != 59 && this.type != 60 && this.type != 151)
				{
					if (this.type == 50)
					{
						if (this.life > 0)
						{
							int num65 = 0;
							while ((double)num65 < dmg / (double)this.lifeMax * 300.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 175, new Color(0, 80, 255, 100), 1f);
								num65++;
							}
							return;
						}
						for (int num66 = 0; num66 < 200; num66++)
						{
							Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, 175, new Color(0, 80, 255, 100), 1f);
						}
						if (Main.netMode != 1)
						{
							int num67 = Main.rand.Next(4) + 4;
							for (int num68 = 0; num68 < num67; num68++)
							{
								int x = (int)(this.position.X + (float)Main.rand.Next(this.width - 32));
								int y = (int)(this.position.Y + (float)Main.rand.Next(this.height - 32));
								int num69 = NPC.NewNPC(x, y, 1, 0);
								Main.npc[num69].SetDefaults(1, -1f);
								Main.npc[num69].velocity.X = (float)Main.rand.Next(-15, 16) * 0.1f;
								Main.npc[num69].velocity.Y = (float)Main.rand.Next(-30, 1) * 0.1f;
								Main.npc[num69].ai[1] = (float)Main.rand.Next(3);
								if (Main.netMode == 2 && num69 < 200)
								{
									NetMessage.SendData(23, -1, -1, "", num69, 0f, 0f, 0f, 0);
								}
							}
							return;
						}
					}
					else if (this.type == 153)
					{
						if (this.life > 0)
						{
							int num70 = 0;
							while ((double)num70 < dmg / (double)this.lifeMax * 30.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num70++;
							}
							return;
						}
						for (int num71 = 0; num71 < 15; num71++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 177, 1f);
						Gore.NewGore(this.position, this.velocity, 178, 1f);
						Gore.NewGore(this.position, this.velocity, 179, 1f);
						Gore.NewGore(this.position, this.velocity, 179, 1f);
						return;
					}
					else if (this.type == 177)
					{
						if (this.life > 0)
						{
							int num72 = 0;
							while ((double)num72 < dmg / (double)this.lifeMax * 30.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num72++;
							}
							return;
						}
						for (int num73 = 0; num73 < 15; num73++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 234, 1f);
						Gore.NewGore(this.position, this.velocity, 235, 1f);
						Gore.NewGore(this.position, this.velocity, 236, 1f);
						Gore.NewGore(this.position, this.velocity, 236, 1f);
						return;
					}
					else if (this.type == 49 || this.type == 51 || this.type == 93 || this.type == 150 || this.type == 152 || this.type == 226)
					{
						if (this.life > 0)
						{
							int num74 = 0;
							while ((double)num74 < dmg / (double)this.lifeMax * 30.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num74++;
							}
							return;
						}
						for (int num75 = 0; num75 < 15; num75++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						if (this.type == 51)
						{
							Gore.NewGore(this.position, this.velocity, 83, 1f);
							return;
						}
						if (this.type == 93)
						{
							Gore.NewGore(this.position, this.velocity, 107, 1f);
							return;
						}
						if (this.type == 150)
						{
							Gore.NewGore(this.position, this.velocity, 164, 1f);
							Gore.NewGore(this.position, this.velocity, 165, 1f);
							return;
						}
						if (this.type == 152)
						{
							Gore.NewGore(this.position, this.velocity, 175, 1f);
							Gore.NewGore(this.position, this.velocity, 176, 1f);
							Gore.NewGore(this.position, this.velocity, 176, 1f);
							return;
						}
						if (this.type == 226)
						{
							Gore.NewGore(this.position, this.velocity, 317, 1f);
							Gore.NewGore(this.position, this.velocity, 318, 1f);
							Gore.NewGore(this.position, this.velocity, 318, 1f);
							Gore.NewGore(this.position, this.velocity, 319, 1f);
							return;
						}
						Gore.NewGore(this.position, this.velocity, 82, 1f);
						return;
					}
					else if (this.type == 46 || this.type == 55 || this.type == 67 || this.type == 74 || this.type == 102 || this.type == 224 || this.type == 230 || this.type == 297 || this.type == 298 || this.type == 299 || this.type == 300 || this.type == 303)
					{
						if (this.life > 0)
						{
							int num76 = 0;
							while ((double)num76 < dmg / (double)this.lifeMax * 20.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num76++;
							}
							return;
						}
						for (int num77 = 0; num77 < 10; num77++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						if (this.type == 46 || this.type == 303)
						{
							Gore.NewGore(this.position, this.velocity, 76, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 77, 1f);
							if (this.type == 303)
							{
								for (int num78 = 0; num78 < 10; num78++)
								{
									Dust.NewDust(this.position, this.width, this.height, 193, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
								}
								return;
							}
						}
						else
						{
							if (this.type == 67)
							{
								Gore.NewGore(this.position, this.velocity, 95, 1f);
								Gore.NewGore(this.position, this.velocity, 95, 1f);
								Gore.NewGore(this.position, this.velocity, 96, 1f);
								return;
							}
							if (this.type == 74)
							{
								Gore.NewGore(this.position, this.velocity, 100, 1f);
								return;
							}
							if (this.type == 297)
							{
								Gore.NewGore(this.position, this.velocity, 431, 1f);
								return;
							}
							if (this.type == 298)
							{
								Gore.NewGore(this.position, this.velocity, 432, 1f);
								return;
							}
							if (this.type == 299)
							{
								Gore.NewGore(this.position, this.velocity, 433, 1f);
								return;
							}
							if (this.type == 300)
							{
								Gore.NewGore(this.position, this.velocity, 434, 1f);
								return;
							}
							if (this.type == 102)
							{
								Gore.NewGore(this.position, this.velocity, 116, 1f);
								return;
							}
							if (this.type == 224)
							{
								Gore.NewGore(this.position, this.velocity, 312, 1f);
								Gore.NewGore(this.position, this.velocity, 313, 1f);
								return;
							}
						}
					}
					else if (this.type == 148 || this.type == 149 || this.type == 168)
					{
						if (this.life > 0)
						{
							int num79 = 0;
							while ((double)num79 < dmg / (double)this.lifeMax * 20.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num79++;
							}
							return;
						}
						for (int num80 = 0; num80 < 10; num80++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						if (this.type == 148)
						{
							Gore.NewGore(this.position, this.velocity, 160, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 161, 1f);
							return;
						}
						if (this.type == 149)
						{
							Gore.NewGore(this.position, this.velocity, 162, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 163, 1f);
							return;
						}
						if (this.type == 168)
						{
							Gore.NewGore(this.position, this.velocity, 215, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 216, 1f);
							return;
						}
					}
					else if (this.type == 47 || this.type == 57 || this.type == 58)
					{
						if (this.life > 0)
						{
							int num81 = 0;
							while ((double)num81 < dmg / (double)this.lifeMax * 20.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num81++;
							}
							return;
						}
						for (int num82 = 0; num82 < 10; num82++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						if (this.type == 57)
						{
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 84, 1f);
							return;
						}
						if (this.type == 58)
						{
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 85, 1f);
							return;
						}
						Gore.NewGore(this.position, this.velocity, 78, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 79, 1f);
						return;
					}
					else if (this.type == 173 || this.type == 174 || this.type == 181 || this.type == 182 || this.type == 268)
					{
						if (this.life > 0)
						{
							int num83 = 0;
							while ((double)num83 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, this.alpha, default(Color), 1f);
								num83++;
							}
							return;
						}
						for (int num84 = 0; num84 < 50; num84++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, this.alpha, default(Color), 1f);
						}
						if (this.type == 173)
						{
							Gore.NewGore(this.position, this.velocity, 223, 1f);
							Gore.NewGore(this.position, this.velocity, 224, 1f);
							return;
						}
						if (this.type == 174)
						{
							Gore.NewGore(this.position, this.velocity, 225, 1f);
							Gore.NewGore(this.position, this.velocity, 226, 1f);
							return;
						}
						if (this.type == 181)
						{
							Gore.NewGore(this.position, this.velocity, 237, 1f);
							return;
						}
						if (this.type == 182)
						{
							Gore.NewGore(this.position, this.velocity, 238, 1f);
							Gore.NewGore(this.position, this.velocity, 239, 1f);
							return;
						}
						if (this.type == 268)
						{
							Gore.NewGore(this.position, this.velocity, 403, 1f);
							Gore.NewGore(this.position, this.velocity, 404, 1f);
							Gore.NewGore(this.position, this.velocity, 405, 1f);
							return;
						}
					}
					else if (this.type == 2 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 317 || this.type == 318)
					{
						if (this.life > 0)
						{
							int num85 = 0;
							while ((double)num85 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num85++;
							}
							return;
						}
						for (int num86 = 0; num86 < 50; num86++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						if (this.type == 190)
						{
							Gore.NewGore(this.position, this.velocity, 249, this.scale);
							Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 2, this.scale);
							return;
						}
						if (this.type == 191)
						{
							Gore.NewGore(this.position, this.velocity, 248, this.scale);
							Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 2, this.scale);
							return;
						}
						if (this.type == 192)
						{
							Gore.NewGore(this.position, this.velocity, 247, this.scale);
							Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 2, this.scale);
							return;
						}
						if (this.type == 193)
						{
							Gore.NewGore(this.position, this.velocity, 252, this.scale);
							Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 253, this.scale);
							return;
						}
						if (this.type == 194)
						{
							Gore.NewGore(this.position, this.velocity, 250, this.scale);
							Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 251, this.scale);
							return;
						}
						if (this.type == 317)
						{
							Gore.NewGore(this.position, this.velocity, 447, this.scale);
							Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 448, this.scale);
							return;
						}
						if (this.type == 318)
						{
							Gore.NewGore(this.position, this.velocity, 449, this.scale);
							Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 450, this.scale);
							return;
						}
						Gore.NewGore(this.position, this.velocity, 1, this.scale);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 2, this.scale);
						return;
					}
					else if (this.type == 157)
					{
						if (this.life > 0)
						{
							int num87 = 0;
							while ((double)num87 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num87++;
							}
							return;
						}
						for (int num88 = 0; num88 < 50; num88++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 186, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 187, 1f);
						return;
					}
					else if (this.type == 133)
					{
						if (this.life <= 0)
						{
							for (int num89 = 0; num89 < 50; num89++)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
							}
							Gore.NewGore(this.position, this.velocity, 155, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 14f), this.velocity, 155, 1f);
							return;
						}
						int num90 = 0;
						while ((double)num90 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num90++;
						}
						if ((float)this.life < (float)this.lifeMax * 0.5f && this.localAI[0] == 0f)
						{
							this.localAI[0] = 1f;
							Gore.NewGore(this.position, this.velocity, 1, 1f);
							return;
						}
					}
					else if (this.type == 69)
					{
						if (this.life > 0)
						{
							int num91 = 0;
							while ((double)num91 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num91++;
							}
							return;
						}
						for (int num92 = 0; num92 < 50; num92++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 97, 1f);
						Gore.NewGore(this.position, this.velocity, 98, 1f);
						return;
					}
					else if (this.type == 61)
					{
						if (this.life > 0)
						{
							int num93 = 0;
							while ((double)num93 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num93++;
							}
							return;
						}
						for (int num94 = 0; num94 < 50; num94++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 86, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 87, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 88, 1f);
						return;
					}
					else if (this.type == 301)
					{
						if (this.life > 0)
						{
							int num95 = 0;
							while ((double)num95 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num95++;
							}
							return;
						}
						for (int num96 = 0; num96 < 50; num96++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 438, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 439, 1f);
						return;
					}
					else if (this.type == 252)
					{
						if (this.life > 0)
						{
							int num97 = 0;
							while ((double)num97 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num97++;
							}
							return;
						}
						for (int num98 = 0; num98 < 50; num98++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 373, 1f);
						Gore.NewGore(this.position, this.velocity, 374, 1f);
						return;
					}
					else if (this.type == 65)
					{
						if (this.life > 0)
						{
							int num99 = 0;
							while ((double)num99 < dmg / (double)this.lifeMax * 150.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num99++;
							}
							return;
						}
						for (int num100 = 0; num100 < 75; num100++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity * 0.8f, 89, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 90, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 91, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 92, 1f);
						return;
					}
					else if (this.type == 195 || this.type == 196)
					{
						if (this.life > 0)
						{
							int num101 = 0;
							while ((double)num101 < dmg / (double)this.lifeMax * 150.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num101++;
							}
							return;
						}
						for (int num102 = 0; num102 < 75; num102++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 254, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 255, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 255, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 256, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 256, this.scale);
						return;
					}
					else if (this.type == 198 || this.type == 199)
					{
						if (this.life > 0)
						{
							int num103 = 0;
							while ((double)num103 < dmg / (double)this.lifeMax * 150.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num103++;
							}
							return;
						}
						for (int num104 = 0; num104 < 75; num104++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 258, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 259, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 259, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 260, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 260, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 261, this.scale);
						return;
					}
					else if (this.type == 206)
					{
						if (this.life > 0)
						{
							int num105 = 0;
							while ((double)num105 < dmg / (double)this.lifeMax * 150.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 137, (float)hitDirection, -1f, 0, default(Color), 1f);
								num105++;
							}
							return;
						}
						for (int num106 = 0; num106 < 75; num106++)
						{
							Dust.NewDust(this.position, this.width, this.height, 137, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 273, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 274, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 274, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 275, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 275, this.scale);
						return;
					}
					else if (this.type == 3 || this.type == 52 || this.type == 53 || this.type == 104 || this.type == 109 || this.type == 132 || this.type == 161 || this.type == 162 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 251 || this.type == 319 || this.type == 320 || this.type == 321)
					{
						if (this.life > 0)
						{
							int num107 = 0;
							while ((double)num107 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num107++;
							}
							if (this.type == 186 && Main.rand.Next(5) == 0)
							{
								Gore.NewGore(this.position, this.velocity, 242, 1f);
							}
							if (this.type == 187)
							{
								int num108 = 0;
								while ((double)num108 < dmg / (double)this.lifeMax * 200.0)
								{
									Dust.NewDust(this.position, this.width, 24, 4, (float)hitDirection, -1f, 125, new Color(0, 80, 255, 100), 1f);
									num108++;
								}
								return;
							}
						}
						else
						{
							for (int num109 = 0; num109 < 50; num109++)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
							}
							if (this.type == 187)
							{
								for (int num110 = 0; num110 < 25; num110++)
								{
									Dust.NewDust(this.position, this.width, 24, 4, (float)hitDirection, -1f, 125, new Color(0, 80, 255, 100), 1f);
								}
							}
							if (this.type == 104)
							{
								Gore.NewGore(this.position, this.velocity, 117, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 118, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 118, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 119, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 119, this.scale);
								return;
							}
							if (this.type == 109)
							{
								Gore.NewGore(this.position, this.velocity, 121, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 122, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 122, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 123, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 123, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 46f), this.velocity, 120, this.scale);
								return;
							}
							if (this.type == 161)
							{
								Gore.NewGore(this.position, this.velocity, 191, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 192, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 192, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 193, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 193, this.scale);
								return;
							}
							if (this.type == 162)
							{
								Gore.NewGore(this.position, this.velocity, 194, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 195, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 195, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 196, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 196, this.scale);
								return;
							}
							if (this.type == 188)
							{
								Gore.NewGore(this.position, this.velocity, 243, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 244, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 244, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 245, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 245, this.scale);
								return;
							}
							if (this.type == 200)
							{
								Gore.NewGore(this.position, this.velocity, 262, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 263, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 263, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 264, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 264, this.scale);
								return;
							}
							if (this.type == 319)
							{
								Gore.NewGore(this.position, this.velocity, 451, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 453, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 453, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 452, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 452, this.scale);
								return;
							}
							if (this.type == 320)
							{
								Gore.NewGore(this.position, this.velocity, 454, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 455, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 456, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 456, this.scale);
								return;
							}
							if (this.type == 321)
							{
								Gore.NewGore(this.position, this.velocity, 457, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 458, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 458, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 459, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 459, this.scale);
								return;
							}
							if (this.type == 223)
							{
								Gore.NewGore(this.position, this.velocity, 309, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 310, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 310, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 311, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 311, this.scale);
								return;
							}
							if (this.type == 132)
							{
								Gore.NewGore(this.position, this.velocity, 154, 1f);
							}
							else if (this.type == 186)
							{
								Gore.NewGore(this.position, this.velocity, 241, 1f);
							}
							else if (this.type == 189)
							{
								Gore.NewGore(this.position, this.velocity, 246, 1f);
							}
							else if (this.type == 251)
							{
								Gore.NewGore(this.position, this.velocity, 372, 1f);
							}
							else if (this.type != 187)
							{
								Gore.NewGore(this.position, this.velocity, 3, 1f);
							}
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 4, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 4, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 5, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 5, 1f);
							if (this.type == 186)
							{
								Gore.NewGore(this.position, this.velocity, 242, 1f);
							}
							if (this.type == 186 && Main.rand.Next(2) == 0)
							{
								Gore.NewGore(this.position, this.velocity, 242, 1f);
								return;
							}
						}
					}
					else if (this.type == 83 || this.type == 84 || this.type == 179)
					{
						if (this.life > 0)
						{
							int num111 = 0;
							while ((double)num111 < dmg / (double)this.lifeMax * 50.0)
							{
								int num112 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
								Main.dust[num112].noGravity = true;
								num111++;
							}
							return;
						}
						for (int num113 = 0; num113 < 20; num113++)
						{
							int num114 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
							Main.dust[num114].velocity *= 2f;
							Main.dust[num114].noGravity = true;
						}
						int num115 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)Main.rand.Next(-2, 3), (float)Main.rand.Next(-2, 3)), 61, this.scale);
						Main.gore[num115].velocity *= 0.5f;
						num115 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)Main.rand.Next(-2, 3), (float)Main.rand.Next(-2, 3)), 61, this.scale);
						Main.gore[num115].velocity *= 0.5f;
						num115 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)Main.rand.Next(-2, 3), (float)Main.rand.Next(-2, 3)), 61, this.scale);
						Main.gore[num115].velocity *= 0.5f;
						return;
					}
					else if (this.type == 262 || this.type == 263 || this.type == 264)
					{
						if (this.life > 0)
						{
							int num116 = 0;
							while ((double)num116 < dmg / (double)this.lifeMax * 100.0)
							{
								if (this.type == 262 && this.life > this.lifeMax / 2 && Main.rand.Next(3) != 0)
								{
									Dust.NewDust(this.position, this.width, this.height, 166, (float)hitDirection, -1f, 0, default(Color), 1f);
								}
								else if (this.type == 265 && Main.rand.Next(3) != 0)
								{
									Dust.NewDust(this.position, this.width, this.height, 166, (float)hitDirection, -1f, 0, default(Color), 1f);
								}
								else
								{
									Dust.NewDust(this.position, this.width, this.height, 167, (float)hitDirection, -1f, 0, default(Color), 1f);
								}
								num116++;
							}
							return;
						}
						for (int num117 = 0; num117 < 150; num117++)
						{
							if (this.type == 265 && Main.rand.Next(3) != 0)
							{
								Dust.NewDust(this.position, this.width, this.height, 166, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
							}
							else
							{
								Dust.NewDust(this.position, this.width, this.height, 167, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
							}
						}
						if (this.type == 262)
						{
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 381, this.scale);
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 382, this.scale);
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 383, this.scale);
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 384, this.scale);
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 385, this.scale);
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 386, this.scale);
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 386, this.scale);
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 387, this.scale);
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 387, this.scale);
						}
						if (this.type == 263)
						{
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 390, this.scale);
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 391, this.scale);
						}
						if (this.type == 264)
						{
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 388, this.scale);
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 389, this.scale);
							return;
						}
					}
					else if (this.type == 265)
					{
						if (this.life < 0)
						{
							for (int num118 = 0; num118 < 15; num118++)
							{
								if (Main.rand.Next(3) != 0)
								{
									Dust.NewDust(this.position, this.width, this.height, 166, (float)hitDirection, -1f, 0, default(Color), 1f);
								}
								else
								{
									Dust.NewDust(this.position, this.width, this.height, 167, (float)hitDirection, -1f, 0, default(Color), 1f);
								}
							}
							return;
						}
					}
					else if (this.type == 266)
					{
						if (this.life > 0)
						{
							int num119 = 0;
							while ((double)num119 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num119++;
							}
							return;
						}
						for (int num120 = 0; num120 < 150; num120++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 396, 1f);
						Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 397, 1f);
						Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 398, 1f);
						Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 399, 1f);
						Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 400, 1f);
						Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 401, 1f);
						return;
					}
					else if (this.type == 267)
					{
						if (this.life > 0)
						{
							int num121 = 0;
							while ((double)num121 < dmg / (double)this.lifeMax * 50.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num121++;
							}
							return;
						}
						for (int num122 = 0; num122 < 20; num122++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 402, 1f);
						return;
					}
					else if (this.type == 4 || this.type == 126 || this.type == 125)
					{
						if (this.life > 0)
						{
							int num123 = 0;
							while ((double)num123 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num123++;
							}
							return;
						}
						for (int num124 = 0; num124 < 150; num124++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						for (int num125 = 0; num125 < 2; num125++)
						{
							Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 2, 1f);
							Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 7, 1f);
							Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 9, 1f);
							if (this.type == 4)
							{
								Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 10, 1f);
								Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
							}
							else if (this.type == 125)
							{
								Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 146, 1f);
							}
							else if (this.type == 126)
							{
								Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 145, 1f);
							}
						}
						if (this.type == 125 || this.type == 126)
						{
							for (int num126 = 0; num126 < 10; num126++)
							{
								int num127 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num127].velocity *= 1.4f;
							}
							for (int num128 = 0; num128 < 5; num128++)
							{
								int num129 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
								Main.dust[num129].noGravity = true;
								Main.dust[num129].velocity *= 5f;
								num129 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num129].velocity *= 3f;
							}
							int num130 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num130].velocity *= 0.4f;
							Gore expr_6341_cp_0 = Main.gore[num130];
							expr_6341_cp_0.velocity.X = expr_6341_cp_0.velocity.X + 1f;
							Gore expr_635F_cp_0 = Main.gore[num130];
							expr_635F_cp_0.velocity.Y = expr_635F_cp_0.velocity.Y + 1f;
							num130 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num130].velocity *= 0.4f;
							Gore expr_63DD_cp_0 = Main.gore[num130];
							expr_63DD_cp_0.velocity.X = expr_63DD_cp_0.velocity.X - 1f;
							Gore expr_63FB_cp_0 = Main.gore[num130];
							expr_63FB_cp_0.velocity.Y = expr_63FB_cp_0.velocity.Y + 1f;
							num130 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num130].velocity *= 0.4f;
							Gore expr_6479_cp_0 = Main.gore[num130];
							expr_6479_cp_0.velocity.X = expr_6479_cp_0.velocity.X + 1f;
							Gore expr_6497_cp_0 = Main.gore[num130];
							expr_6497_cp_0.velocity.Y = expr_6497_cp_0.velocity.Y - 1f;
							num130 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num130].velocity *= 0.4f;
							Gore expr_6515_cp_0 = Main.gore[num130];
							expr_6515_cp_0.velocity.X = expr_6515_cp_0.velocity.X - 1f;
							Gore expr_6533_cp_0 = Main.gore[num130];
							expr_6533_cp_0.velocity.Y = expr_6533_cp_0.velocity.Y - 1f;
							return;
						}
					}
					else if (this.type == 5)
					{
						if (this.life > 0)
						{
							int num131 = 0;
							while ((double)num131 < dmg / (double)this.lifeMax * 50.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num131++;
							}
							return;
						}
						for (int num132 = 0; num132 < 20; num132++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 6, 1f);
						Gore.NewGore(this.position, this.velocity, 7, 1f);
						return;
					}
					else if (this.type == 113 || this.type == 114)
					{
						if (this.life > 0)
						{
							for (int num133 = 0; num133 < 20; num133++)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							}
							return;
						}
						for (int num134 = 0; num134 < 50; num134++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -1f, 0, default(Color), 1f);
						}
						if (this.type == 114)
						{
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 137, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2)), this.velocity, 139, this.scale);
							Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y), this.velocity, 139, this.scale);
							Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2)), this.velocity, 137, this.scale);
							return;
						}
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 137, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2)), this.velocity, 138, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y), this.velocity, 138, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2)), this.velocity, 137, this.scale);
						if (Main.player[Main.myPlayer].position.Y / 16f > (float)(Main.maxTilesY - 250))
						{
							int num135 = (int)Main.screenPosition.Y;
							int num136 = num135 + Main.screenWidth;
							int num137 = (int)this.position.X;
							if (this.direction > 0)
							{
								num137 -= 80;
							}
							int num138 = num137 + 140;
							int num139 = num137;
							for (int num140 = num135; num140 < num136; num140 += 50)
							{
								while (num139 < num138)
								{
									for (int num141 = 0; num141 < 5; num141++)
									{
										Dust.NewDust(new Vector2((float)num139, (float)num140), 32, 32, 5, (float)Main.rand.Next(-60, 61) * 0.1f, (float)Main.rand.Next(-60, 61) * 0.1f, 0, default(Color), 1f);
									}
									Vector2 vector = new Vector2((float)Main.rand.Next(-80, 81) * 0.1f, (float)Main.rand.Next(-60, 21) * 0.1f);
									Gore.NewGore(new Vector2((float)num139, (float)num140), vector, Main.rand.Next(140, 143), 1f);
									num139 += 46;
								}
								num139 = num137;
							}
							return;
						}
					}
					else if (this.type == 115 || this.type == 116)
					{
						if (this.life > 0)
						{
							for (int num142 = 0; num142 < 5; num142++)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							}
							return;
						}
						if (this.type == 115 && Main.netMode != 1)
						{
							NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 116, 0);
							for (int num143 = 0; num143 < 10; num143++)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							}
							return;
						}
						for (int num144 = 0; num144 < 20; num144++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 132, this.scale);
						Gore.NewGore(this.position, this.velocity, 133, this.scale);
						return;
					}
					else if (this.type >= 117 && this.type <= 119)
					{
						if (this.life > 0)
						{
							for (int num145 = 0; num145 < 5; num145++)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							}
							return;
						}
						for (int num146 = 0; num146 < 10; num146++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 134 + this.type - 117, this.scale);
						return;
					}
					else if (this.type == 217 || this.type == 218 || this.type == 219)
					{
						if (this.life > 0)
						{
							int num147 = 0;
							while ((double)num147 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
								num147++;
							}
							return;
						}
						for (int num148 = 0; num148 < 50; num148++)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
						}
						if (this.type == 217)
						{
							Gore.NewGore(this.position, this.velocity, 292, this.scale);
							Gore.NewGore(this.position, this.velocity, 293, this.scale);
						}
						if (this.type == 218)
						{
							Gore.NewGore(this.position, this.velocity, 295, this.scale);
							Gore.NewGore(this.position, this.velocity, 296, this.scale);
						}
						if (this.type == 219)
						{
							Gore.NewGore(this.position, this.velocity, 294, this.scale);
							return;
						}
					}
					else if (this.type == 222)
					{
						if (this.life > 0)
						{
							int num149 = 0;
							while ((double)num149 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
								num149++;
							}
							return;
						}
						for (int num150 = 0; num150 < 50; num150++)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
						}
						Gore.NewGore(new Vector2(this.position.X, this.position.Y - 35f), this.velocity, 303, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y - 45f), this.velocity, 304, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 305, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 306, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 10f), this.velocity, 307, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), this.velocity, 308, this.scale);
						return;
					}
					else if (this.type == 6 || this.type == 94 || this.type == 166)
					{
						if (this.life > 0)
						{
							int num151 = 0;
							while ((double)num151 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
								num151++;
							}
							return;
						}
						for (int num152 = 0; num152 < 50; num152++)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
						}
						int num153;
						if (this.type == 94)
						{
							num153 = Gore.NewGore(this.position, this.velocity, 108, this.scale);
							num153 = Gore.NewGore(this.position, this.velocity, 108, this.scale);
							num153 = Gore.NewGore(this.position, this.velocity, 109, this.scale);
							num153 = Gore.NewGore(this.position, this.velocity, 110, this.scale);
							return;
						}
						if (this.type == 166)
						{
							num153 = Gore.NewGore(this.position, this.velocity, 209, this.scale);
							num153 = Gore.NewGore(this.position, this.velocity, 210, this.scale);
							num153 = Gore.NewGore(this.position, this.velocity, 211, this.scale);
							return;
						}
						num153 = Gore.NewGore(this.position, this.velocity, 14, this.scale);
						Main.gore[num153].alpha = this.alpha;
						num153 = Gore.NewGore(this.position, this.velocity, 15, this.scale);
						Main.gore[num153].alpha = this.alpha;
						return;
					}
					else if (this.type == 101)
					{
						if (this.life > 0)
						{
							int num154 = 0;
							while ((double)num154 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
								num154++;
							}
							return;
						}
						for (int num155 = 0; num155 < 50; num155++)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
						}
						Gore.NewGore(this.position, this.velocity, 110, this.scale);
						Gore.NewGore(this.position, this.velocity, 114, this.scale);
						Gore.NewGore(this.position, this.velocity, 114, this.scale);
						Gore.NewGore(this.position, this.velocity, 115, this.scale);
						return;
					}
					else if (this.type == 7 || this.type == 8 || this.type == 9)
					{
						if (this.life > 0)
						{
							int num156 = 0;
							while ((double)num156 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
								num156++;
							}
							return;
						}
						for (int num157 = 0; num157 < 50; num157++)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
						}
						int num158 = Gore.NewGore(this.position, this.velocity, this.type - 7 + 18, 1f);
						Main.gore[num158].alpha = this.alpha;
						return;
					}
					else if (this.type == 98 || this.type == 99 || this.type == 100)
					{
						if (this.life > 0)
						{
							int num159 = 0;
							while ((double)num159 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
								num159++;
							}
							return;
						}
						for (int num160 = 0; num160 < 50; num160++)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
						}
						int num161 = Gore.NewGore(this.position, this.velocity, 110, 1f);
						Main.gore[num161].alpha = this.alpha;
						return;
					}
					else if (this.type == 10 || this.type == 11 || this.type == 12)
					{
						if (this.life > 0)
						{
							int num162 = 0;
							while ((double)num162 < dmg / (double)this.lifeMax * 50.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num162++;
							}
							return;
						}
						for (int num163 = 0; num163 < 10; num163++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, this.type - 7 + 18, 1f);
						return;
					}
					else if (this.type == 95 || this.type == 96 || this.type == 97)
					{
						if (this.life > 0)
						{
							int num164 = 0;
							while ((double)num164 < dmg / (double)this.lifeMax * 50.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num164++;
							}
							return;
						}
						for (int num165 = 0; num165 < 10; num165++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, this.type - 95 + 111, 1f);
						return;
					}
					else if (this.type == 13 || this.type == 14 || this.type == 15)
					{
						if (this.life > 0)
						{
							int num166 = 0;
							while ((double)num166 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
								num166++;
							}
							return;
						}
						for (int num167 = 0; num167 < 50; num167++)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
						}
						if (this.type == 13)
						{
							Gore.NewGore(this.position, this.velocity, 24, 1f);
							Gore.NewGore(this.position, this.velocity, 25, 1f);
							return;
						}
						if (this.type == 14)
						{
							Gore.NewGore(this.position, this.velocity, 26, 1f);
							Gore.NewGore(this.position, this.velocity, 27, 1f);
							return;
						}
						Gore.NewGore(this.position, this.velocity, 28, 1f);
						Gore.NewGore(this.position, this.velocity, 29, 1f);
						return;
					}
					else if (this.type == 17)
					{
						if (this.life > 0)
						{
							int num168 = 0;
							while ((double)num168 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num168++;
							}
							return;
						}
						for (int num169 = 0; num169 < 50; num169++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 30, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 31, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 31, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 32, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 32, 1f);
						return;
					}
					else if (this.type == 86)
					{
						if (this.life > 0)
						{
							int num170 = 0;
							while ((double)num170 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num170++;
							}
							return;
						}
						for (int num171 = 0; num171 < 50; num171++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 101, 1f);
						Gore.NewGore(this.position, this.velocity, 102, 1f);
						Gore.NewGore(this.position, this.velocity, 103, 1f);
						Gore.NewGore(this.position, this.velocity, 103, 1f);
						Gore.NewGore(this.position, this.velocity, 104, 1f);
						Gore.NewGore(this.position, this.velocity, 104, 1f);
						Gore.NewGore(this.position, this.velocity, 105, 1f);
						return;
					}
					else if (this.type == 155)
					{
						if (this.life > 0)
						{
							int num172 = 0;
							while ((double)num172 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num172++;
							}
							return;
						}
						for (int num173 = 0; num173 < 50; num173++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 181, 1f);
						Gore.NewGore(this.position, this.velocity, 182, 1f);
						Gore.NewGore(this.position, this.velocity, 183, 1f);
						Gore.NewGore(this.position, this.velocity, 183, 1f);
						return;
					}
					else if (this.type == 329)
					{
						if (this.life > 0)
						{
							int num174 = 0;
							while ((double)num174 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num174++;
							}
							return;
						}
						for (int num175 = 0; num175 < 50; num175++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 485, 1f);
						Gore.NewGore(this.position, this.velocity, 486, 1f);
						Gore.NewGore(this.position, this.velocity, 487, 1f);
						return;
					}
					else if (this.type == 163 || this.type == 238)
					{
						if (this.life > 0)
						{
							int num176 = 0;
							while ((double)num176 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, 0, default(Color), 1f);
								num176++;
							}
							return;
						}
						for (int num177 = 0; num177 < 50; num177++)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 205, 1f);
						Gore.NewGore(this.position, this.velocity, 206, 1f);
						Gore.NewGore(this.position, this.velocity, 206, 1f);
						Gore.NewGore(this.position, this.velocity, 206, 1f);
						Gore.NewGore(this.position, this.velocity, 206, 1f);
						return;
					}
					else if (this.type == 164 || this.type == 165)
					{
						if (this.life > 0)
						{
							int num178 = 0;
							while ((double)num178 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, 0, default(Color), 1f);
								num178++;
							}
							return;
						}
						for (int num179 = 0; num179 < 50; num179++)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 207, 1f);
						Gore.NewGore(this.position, this.velocity, 208, 1f);
						Gore.NewGore(this.position, this.velocity, 208, 1f);
						Gore.NewGore(this.position, this.velocity, 208, 1f);
						Gore.NewGore(this.position, this.velocity, 208, 1f);
						return;
					}
					else if (this.type == 239 || this.type == 240)
					{
						if (this.life > 0)
						{
							int num180 = 0;
							while ((double)num180 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num180++;
							}
							return;
						}
						for (int num181 = 0; num181 < 50; num181++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 351, 1f);
						Gore.NewGore(this.position, this.velocity, 352, 1f);
						Gore.NewGore(this.position, this.velocity, 352, 1f);
						Gore.NewGore(this.position, this.velocity, 353, 1f);
						Gore.NewGore(this.position, this.velocity, 353, 1f);
						return;
					}
					else if (this.type == 236 || this.type == 237)
					{
						if (this.life > 0)
						{
							int num182 = 0;
							while ((double)num182 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, 0, default(Color), 1f);
								num182++;
							}
							return;
						}
						for (int num183 = 0; num183 < 50; num183++)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 332, 1f);
						Gore.NewGore(this.position, this.velocity, 333, 1f);
						Gore.NewGore(this.position, this.velocity, 334, 1f);
						Gore.NewGore(this.position, this.velocity, 335, 1f);
						Gore.NewGore(this.position, this.velocity, 335, 1f);
						return;
					}
					else if (this.type == 241)
					{
						if (this.life > 0)
						{
							int num184 = 0;
							while ((double)num184 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num184++;
							}
							return;
						}
						for (int num185 = 0; num185 < 50; num185++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 354, 1f);
						Gore.NewGore(this.position, this.velocity, 355, 1f);
						return;
					}
					else if (this.type == 242)
					{
						if (this.life > 0)
						{
							int num186 = 0;
							while ((double)num186 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num186++;
							}
							return;
						}
						for (int num187 = 0; num187 < 50; num187++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 356, 1f);
						Gore.NewGore(this.position, this.velocity, 357, 1f);
						Gore.NewGore(this.position, this.velocity, 357, 1f);
						Gore.NewGore(this.position, this.velocity, 358, 1f);
						Gore.NewGore(this.position, this.velocity, 358, 1f);
						return;
					}
					else if (this.type >= 105 && this.type <= 108)
					{
						if (this.life > 0)
						{
							int num188 = 0;
							while ((double)num188 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num188++;
							}
							return;
						}
						for (int num189 = 0; num189 < 50; num189++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						if (this.type == 105 || this.type == 107)
						{
							Gore.NewGore(this.position, this.velocity, 124, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 125, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 125, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 126, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 126, 1f);
							return;
						}
						Gore.NewGore(this.position, this.velocity, 127, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 128, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 128, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 129, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 129, 1f);
						return;
					}
					else if (this.type == 123 || this.type == 124)
					{
						if (this.life > 0)
						{
							int num190 = 0;
							while ((double)num190 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num190++;
							}
							return;
						}
						for (int num191 = 0; num191 < 50; num191++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 151, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 152, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 152, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 153, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 153, 1f);
						return;
					}
					else if (this.type == 22)
					{
						if (this.life > 0)
						{
							int num192 = 0;
							while ((double)num192 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num192++;
							}
							return;
						}
						for (int num193 = 0; num193 < 50; num193++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 73, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 74, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 74, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 75, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 75, 1f);
						return;
					}
					else if (this.type == 227)
					{
						if (this.life > 0)
						{
							int num194 = 0;
							while ((double)num194 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num194++;
							}
							return;
						}
						for (int num195 = 0; num195 < 50; num195++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 320, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 321, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 322, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 323, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 323, 1f);
						return;
					}
					else if (this.type == 228)
					{
						if (this.life > 0)
						{
							int num196 = 0;
							while ((double)num196 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num196++;
							}
							return;
						}
						for (int num197 = 0; num197 < 50; num197++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 324, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 325, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 326, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 327, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 327, 1f);
						return;
					}
					else if (this.type == 229)
					{
						if (this.life > 0)
						{
							int num198 = 0;
							while ((double)num198 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num198++;
							}
							return;
						}
						for (int num199 = 0; num199 < 50; num199++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 328, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 329, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 329, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 330, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 330, 1f);
						return;
					}
					else if (this.type == 142)
					{
						if (this.life > 0)
						{
							int num200 = 0;
							while ((double)num200 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num200++;
							}
							return;
						}
						for (int num201 = 0; num201 < 50; num201++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 157, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 158, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 158, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 159, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 159, 1f);
						return;
					}
					else if (this.type == 178)
					{
						if (this.life > 0)
						{
							int num202 = 0;
							while ((double)num202 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num202++;
							}
							return;
						}
						for (int num203 = 0; num203 < 50; num203++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 231, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 232, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 232, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 233, 1f);
						return;
					}
					else if (this.type == 37 || this.type == 54)
					{
						if (this.life > 0)
						{
							int num204 = 0;
							while ((double)num204 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num204++;
							}
							return;
						}
						for (int num205 = 0; num205 < 50; num205++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 58, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 59, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 59, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 60, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 60, 1f);
						return;
					}
					else if (this.type == 160)
					{
						if (this.life > 0)
						{
							int num206 = 0;
							while ((double)num206 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 26, (float)hitDirection, -1f, 0, default(Color), 1f);
								num206++;
							}
							return;
						}
						for (int num207 = 0; num207 < 50; num207++)
						{
							Dust.NewDust(this.position, this.width, this.height, 26, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 188, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 189, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 189, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 190, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 190, 1f);
						return;
					}
					else if (this.type == 18)
					{
						if (this.life > 0)
						{
							int num208 = 0;
							while ((double)num208 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num208++;
							}
							return;
						}
						for (int num209 = 0; num209 < 50; num209++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 33, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 34, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 34, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 35, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 35, 1f);
						return;
					}
					else if (this.type == 19)
					{
						if (this.life > 0)
						{
							int num210 = 0;
							while ((double)num210 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num210++;
							}
							return;
						}
						for (int num211 = 0; num211 < 50; num211++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 36, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 37, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 37, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 38, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 38, 1f);
						return;
					}
					else if (this.type == 38)
					{
						if (this.life > 0)
						{
							int num212 = 0;
							while ((double)num212 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num212++;
							}
							return;
						}
						for (int num213 = 0; num213 < 50; num213++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 64, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 65, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 65, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 66, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 66, 1f);
						return;
					}
					else if (this.type == 20)
					{
						if (this.life > 0)
						{
							int num214 = 0;
							while ((double)num214 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num214++;
							}
							return;
						}
						for (int num215 = 0; num215 < 50; num215++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 39, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 40, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 40, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 41, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 41, 1f);
						return;
					}
					else if (this.type == 207)
					{
						if (this.life > 0)
						{
							int num216 = 0;
							while ((double)num216 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num216++;
							}
							return;
						}
						for (int num217 = 0; num217 < 50; num217++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 283, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 284, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 284, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 285, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 285, 1f);
						return;
					}
					else if (this.type == 208)
					{
						if (this.life > 0)
						{
							int num218 = 0;
							while ((double)num218 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num218++;
							}
							return;
						}
						for (int num219 = 0; num219 < 50; num219++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 286, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 287, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 287, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 288, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 288, 1f);
						return;
					}
					else if (this.type == 209)
					{
						if (this.life > 0)
						{
							int num220 = 0;
							while ((double)num220 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num220++;
							}
							return;
						}
						for (int num221 = 0; num221 < 50; num221++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 289, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 290, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 290, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 291, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 291, 1f);
						return;
					}
					else if (this.type >= 212 && this.type <= 216)
					{
						if (this.life > 0)
						{
							int num222 = 0;
							while ((double)num222 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num222++;
							}
							return;
						}
						for (int num223 = 0; num223 < 50; num223++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						if (this.type == 212)
						{
							Gore.NewGore(this.position, this.velocity, 336, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 337, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 337, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 338, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 338, 1f);
							return;
						}
						if (this.type == 213)
						{
							Gore.NewGore(this.position, this.velocity, 339, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 340, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 340, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 341, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 341, 1f);
							return;
						}
						if (this.type == 214)
						{
							Gore.NewGore(this.position, this.velocity, 342, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 343, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 343, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 344, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 344, 1f);
							return;
						}
						if (this.type == 215)
						{
							Gore.NewGore(this.position, this.velocity, 345, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 346, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 346, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 347, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 347, 1f);
							return;
						}
						if (this.type == 216)
						{
							Gore.NewGore(this.position, this.velocity, 348, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 348, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 348, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 348, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 348, 1f);
							return;
						}
					}
					else if (this.type == 220 || this.type == 221)
					{
						if (this.life > 0)
						{
							int num224 = 0;
							while ((double)num224 < dmg / (double)this.lifeMax * 50.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 151, (float)hitDirection, -1f, 0, default(Color), 0.7f);
								num224++;
							}
							return;
						}
						for (int num225 = 0; num225 < 20; num225++)
						{
							Dust.NewDust(this.position, this.width, this.height, 151, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 0.7f);
						}
						if (this.type == 221)
						{
							Gore.NewGore(this.position, this.velocity, 298, this.scale);
							Gore.NewGore(this.position, this.velocity, 299, this.scale);
							return;
						}
						Gore.NewGore(this.position, this.velocity, 297, this.scale);
						return;
					}
					else if (this.type == 21 || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 32 || this.type == 44 || this.type == 45 || this.type == 77 || this.type == 110 || this.type == 167 || this.type == 197 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 287 || this.type == 291 || this.type == 292 || this.type == 293 || (this.type >= 322 && this.type <= 324))
					{
						if (this.life > 0)
						{
							int num226 = 0;
							while ((double)num226 < dmg / (double)this.lifeMax * 50.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 26, (float)hitDirection, -1f, 0, default(Color), 1f);
								num226++;
							}
							return;
						}
						for (int num227 = 0; num227 < 20; num227++)
						{
							Dust.NewDust(this.position, this.width, this.height, 26, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						if (this.type == 167)
						{
							Gore.NewGore(this.position, this.velocity, 213, this.scale);
							Gore.NewGore(this.position, this.velocity, 214, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 212, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 212, this.scale);
							return;
						}
						if (this.type == 197)
						{
							Gore.NewGore(this.position, this.velocity, 257, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 212, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 212, this.scale);
							return;
						}
						if (this.type == 201)
						{
							Gore.NewGore(this.position, this.velocity, 265, this.scale);
							Gore.NewGore(this.position, this.velocity, 267, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
							return;
						}
						if (this.type == 202)
						{
							Gore.NewGore(this.position, this.velocity, 268, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
							return;
						}
						if (this.type == 203)
						{
							Gore.NewGore(this.position, this.velocity, 269, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 266, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 266, this.scale);
							return;
						}
						if (this.type == 322)
						{
							Gore.NewGore(this.position, this.velocity, 460, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 461, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 462, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 461, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 462, this.scale);
							return;
						}
						if (this.type == 323)
						{
							Gore.NewGore(this.position, this.velocity, 463, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 465, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 464, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 464, this.scale);
							return;
						}
						if (this.type == 324)
						{
							Gore.NewGore(this.position, this.velocity, 466, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 467, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 467, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 468, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 468, this.scale);
							return;
						}
						Gore.NewGore(this.position, this.velocity, 42, this.scale);
						if (this.type == 77)
						{
							Gore.NewGore(this.position, this.velocity, 106, this.scale);
						}
						if (this.type == 110)
						{
							Gore.NewGore(this.position, this.velocity, 130, this.scale);
						}
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						if (this.type == 110)
						{
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 131, this.scale);
						}
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
						return;
					}
					else if ((this.type >= 269 && this.type <= 276) || (this.type >= 281 && this.type <= 286))
					{
						if (this.life > 0)
						{
							int num228 = 0;
							while ((double)num228 < dmg / (double)this.lifeMax * 50.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 26, (float)hitDirection, -1f, 0, default(Color), 1f);
								num228++;
							}
							return;
						}
						for (int num229 = 0; num229 < 20; num229++)
						{
							Dust.NewDust(this.position, this.width, this.height, 26, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 42, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
						if (this.type == 269)
						{
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 406, this.scale);
						}
						if (this.type == 270)
						{
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 407, this.scale);
						}
						if (this.type == 271 || this.type == 272)
						{
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 408, this.scale);
						}
						if (this.type == 274)
						{
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 409, this.scale);
						}
						if (this.type == 276)
						{
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 410, this.scale);
							return;
						}
					}
					else if (this.type >= 277 && this.type <= 280)
					{
						if (this.life > 0)
						{
							int num230 = 0;
							while ((double)num230 < dmg / (double)this.lifeMax * 100.0)
							{
								int num231 = Dust.NewDust(this.position, this.width, this.height, 174, (float)hitDirection, -1f, 0, default(Color), 1f);
								Main.dust[num231].scale = 1.1f;
								Main.dust[num231].noGravity = true;
								num230++;
							}
							return;
						}
						for (int num232 = 0; num232 < 75; num232++)
						{
							int num233 = Dust.NewDust(this.position, this.width, this.height, 174, 1.5f * (float)hitDirection, -0.5f, 0, default(Color), 1f);
							Main.dust[num233].velocity *= 2f;
							Main.dust[num233].scale = 1.4f;
							Main.dust[num233].noGravity = true;
						}
						return;
					}
					else if (this.type == 85)
					{
						int num234 = 7;
						if (this.ai[3] == 2f)
						{
							num234 = 10;
						}
						if (this.ai[3] == 3f)
						{
							num234 = 37;
						}
						if (this.life > 0)
						{
							int num235 = 0;
							while ((double)num235 < dmg / (double)this.lifeMax * 50.0)
							{
								Dust.NewDust(this.position, this.width, this.height, num234, 0f, 0f, 0, default(Color), 1f);
								num235++;
							}
							return;
						}
						for (int num236 = 0; num236 < 20; num236++)
						{
							Dust.NewDust(this.position, this.width, this.height, num234, 0f, 0f, 0, default(Color), 1f);
						}
						int num237 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 61, this.scale);
						Main.gore[num237].velocity *= 0.3f;
						num237 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), 62, this.scale);
						Main.gore[num237].velocity *= 0.3f;
						num237 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 10f), new Vector2((float)hitDirection, 0f), 63, this.scale);
						Main.gore[num237].velocity *= 0.3f;
						return;
					}
					else if (this.type == 169)
					{
						if (this.life > 0)
						{
							int num238 = 0;
							while ((double)num238 < dmg / (double)this.lifeMax * 50.0)
							{
								int num239 = Dust.NewDust(this.position, this.width, this.height, 92, 0f, 0f, 0, default(Color), 1.5f);
								Main.dust[num239].velocity *= 1.5f;
								Main.dust[num239].noGravity = true;
								num238++;
							}
							return;
						}
						for (int num240 = 0; num240 < 100; num240++)
						{
							int num241 = Dust.NewDust(this.position, this.width, this.height, 92, 0f, 0f, 0, default(Color), 1.5f);
							Main.dust[num241].scale = 1.5f;
							Main.dust[num241].velocity *= 2f;
							Main.dust[num241].noGravity = true;
						}
						return;
					}
					else if (this.type == 170 || this.type == 180)
					{
						if (this.life > 0)
						{
							int num242 = 0;
							while ((double)num242 < dmg / (double)this.lifeMax * 50.0)
							{
								int num243 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 0, default(Color), 1.5f);
								Main.dust[num243].velocity *= 1.5f;
								Main.dust[num243].noGravity = true;
								num242++;
							}
							return;
						}
						for (int num244 = 0; num244 < 10; num244++)
						{
							int num245 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 0, default(Color), 1.5f);
							Main.dust[num245].velocity *= 2f;
							Main.dust[num245].noGravity = true;
						}
						for (int num246 = 0; num246 < 4; num246++)
						{
							int num247 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), 99, this.scale);
							Main.gore[num247].velocity *= 0.3f;
						}
						return;
					}
					else if (this.type == 171)
					{
						if (this.life > 0)
						{
							int num248 = 0;
							while ((double)num248 < dmg / (double)this.lifeMax * 50.0)
							{
								int num249 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
								Main.dust[num249].velocity *= 1.5f;
								Main.dust[num249].noGravity = true;
								num248++;
							}
							return;
						}
						for (int num250 = 0; num250 < 10; num250++)
						{
							int num251 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
							Main.dust[num251].velocity *= 2f;
							Main.dust[num251].noGravity = true;
						}
						for (int num252 = 0; num252 < 4; num252++)
						{
							int num253 = 11 + num252;
							if (num253 > 13)
							{
								num253 = Main.rand.Next(11, 14);
							}
							int num254 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), num253, this.scale);
							Main.gore[num254].velocity *= 0.3f;
						}
						return;
					}
					else if (this.type == 290)
					{
						if (this.life <= 0)
						{
							for (int num255 = 0; num255 < 10; num255++)
							{
								int num256 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
								Main.dust[num256].velocity *= 2f;
								Main.dust[num256].noGravity = true;
							}
							int num257 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(11, 14), this.scale);
							Main.gore[num257].velocity *= 0.5f;
							num257 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), default(Vector2), Main.rand.Next(11, 14), this.scale);
							Main.gore[num257].velocity *= 0.5f;
							num257 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + 40f), default(Vector2), Main.rand.Next(11, 14), this.scale);
							Main.gore[num257].velocity *= 0.5f;
							return;
						}
					}
					else if (this.type >= 87 && this.type <= 92)
					{
						if (this.life > 0)
						{
							int num258 = 0;
							while ((double)num258 < dmg / (double)this.lifeMax * 50.0)
							{
								int num259 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
								Main.dust[num259].velocity *= 1.5f;
								Main.dust[num259].noGravity = true;
								num258++;
							}
							return;
						}
						for (int num260 = 0; num260 < 10; num260++)
						{
							int num261 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
							Main.dust[num261].velocity *= 2f;
							Main.dust[num261].noGravity = true;
						}
						int num262 = Main.rand.Next(1, 4);
						for (int num263 = 0; num263 < num262; num263++)
						{
							int num264 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), Main.rand.Next(11, 14), this.scale);
							Main.gore[num264].velocity *= 0.8f;
						}
						return;
					}
					else if (this.type == 78 || this.type == 79 || this.type == 80)
					{
						if (this.life > 0)
						{
							int num265 = 0;
							while ((double)num265 < dmg / (double)this.lifeMax * 50.0)
							{
								int num266 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
								Main.dust[num266].velocity *= 2f;
								Main.dust[num266].noGravity = true;
								num265++;
							}
							return;
						}
						for (int num267 = 0; num267 < 20; num267++)
						{
							int num268 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
							Main.dust[num268].velocity *= 2f;
							Main.dust[num268].noGravity = true;
						}
						int num269 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 61, this.scale);
						Main.gore[num269].velocity *= 0.3f;
						num269 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), 62, this.scale);
						Main.gore[num269].velocity *= 0.3f;
						num269 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 10f), new Vector2((float)hitDirection, 0f), 63, this.scale);
						Main.gore[num269].velocity *= 0.3f;
						return;
					}
					else if (this.type == 82 || this.type == 158 || this.type == 159 || this.type == 250 || this.type == 253)
					{
						if (this.life > 0)
						{
							int num270 = 0;
							while ((double)num270 < dmg / (double)this.lifeMax * 50.0)
							{
								int num271 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 50, default(Color), 1.5f);
								Main.dust[num271].velocity *= 2f;
								Main.dust[num271].noGravity = true;
								num270++;
							}
							return;
						}
						for (int num272 = 0; num272 < 20; num272++)
						{
							int num273 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 50, default(Color), 1.5f);
							Main.dust[num273].velocity *= 2f;
							Main.dust[num273].noGravity = true;
						}
						int num274 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 99, this.scale);
						Main.gore[num274].velocity *= 0.3f;
						num274 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 15f), new Vector2((float)hitDirection, 0f), 99, this.scale);
						Main.gore[num274].velocity *= 0.3f;
						num274 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 20f), new Vector2((float)hitDirection, 0f), 99, this.scale);
						Main.gore[num274].velocity *= 0.3f;
						return;
					}
					else if (this.type == 316 || this.type == 330)
					{
						if (this.life > 0)
						{
							int num275 = 0;
							while ((double)num275 < dmg / (double)this.lifeMax * 100.0)
							{
								int num276 = Dust.NewDust(this.position, this.width, this.height, 192, (float)hitDirection, -1f, 100, new Color(100, 100, 100, 100), 1f);
								Main.dust[num276].noGravity = true;
								num275++;
							}
							return;
						}
						for (int num277 = 0; num277 < 50; num277++)
						{
							int num278 = Dust.NewDust(this.position, this.width, this.height, 192, (float)(2 * hitDirection), -2f, 100, new Color(100, 100, 100, 100), 1f);
							Main.dust[num278].noGravity = true;
						}
						return;
					}
					else if (this.type == 315)
					{
						if (this.life > 0)
						{
							int num279 = 0;
							while ((double)num279 < dmg / (double)this.lifeMax * 50.0)
							{
								int num280 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 50, default(Color), 1.5f);
								Main.dust[num280].velocity *= 2f;
								Main.dust[num280].noGravity = true;
								num279++;
							}
							return;
						}
						for (int num281 = 0; num281 < 20; num281++)
						{
							int num282 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 50, default(Color), 1.5f);
							Main.dust[num282].velocity *= 2f;
							Main.dust[num282].noGravity = true;
						}
						int num283 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 99, this.scale);
						Main.gore[num283].velocity *= 0.3f;
						num283 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 15f), new Vector2((float)hitDirection, 0f), 99, this.scale);
						Main.gore[num283].velocity *= 0.3f;
						num283 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 20f), new Vector2((float)hitDirection, 0f), 99, this.scale);
						Main.gore[num283].velocity *= 0.3f;
						num283 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2((float)hitDirection, 0f), 446, this.scale);
						Main.gore[num283].velocity *= 0.1f;
						return;
					}
					else if (this.type == 254 || this.type == 255 || this.type == 256 || this.type == 257 || this.type == 258 || this.type == 259 || this.type == 260 || this.type == 261)
					{
						if (this.life > 0)
						{
							int num284 = 0;
							while ((double)num284 < dmg / (double)this.lifeMax * 50.0)
							{
								int num285 = Dust.NewDust(this.position, this.width, this.height, 165, 0f, 0f, 50, default(Color), 1.5f);
								Main.dust[num285].velocity *= 2f;
								Main.dust[num285].noGravity = true;
								num284++;
							}
							return;
						}
						for (int num286 = 0; num286 < 20; num286++)
						{
							int num287 = Dust.NewDust(this.position, this.width, this.height, 165, 0f, 0f, 50, default(Color), 1.5f);
							Main.dust[num287].velocity *= 2f;
							Main.dust[num287].noGravity = true;
						}
						if (this.type != 261)
						{
							int num288 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 375, this.scale);
							Main.gore[num288].velocity *= 0.3f;
							num288 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 15f), new Vector2((float)hitDirection, 0f), 376, this.scale);
							Main.gore[num288].velocity *= 0.3f;
							num288 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 20f), new Vector2((float)hitDirection, 0f), 377, this.scale);
							Main.gore[num288].velocity *= 0.3f;
							return;
						}
					}
					else if (this.type == 140)
					{
						if (this.life <= 0)
						{
							for (int num289 = 0; num289 < 20; num289++)
							{
								int num290 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 50, default(Color), 1.5f);
								Main.dust[num290].velocity *= 2f;
								Main.dust[num290].noGravity = true;
							}
							int num291 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 99, this.scale);
							Main.gore[num291].velocity *= 0.3f;
							num291 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 15f), new Vector2((float)hitDirection, 0f), 99, this.scale);
							Main.gore[num291].velocity *= 0.3f;
							num291 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 20f), new Vector2((float)hitDirection, 0f), 99, this.scale);
							Main.gore[num291].velocity *= 0.3f;
							return;
						}
					}
					else if (this.type == 39 || this.type == 40 || this.type == 41)
					{
						if (this.life > 0)
						{
							int num292 = 0;
							while ((double)num292 < dmg / (double)this.lifeMax * 50.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 26, (float)hitDirection, -1f, 0, default(Color), 1f);
								num292++;
							}
							return;
						}
						for (int num293 = 0; num293 < 20; num293++)
						{
							Dust.NewDust(this.position, this.width, this.height, 26, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, this.type - 39 + 67, 1f);
						return;
					}
					else if (this.type == 34)
					{
						if (this.life > 0)
						{
							int num294 = 0;
							while ((double)num294 < dmg / (double)this.lifeMax * 30.0)
							{
								int num295 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 15, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1.8f);
								Main.dust[num295].noLight = true;
								Main.dust[num295].noGravity = true;
								Main.dust[num295].velocity *= 1.3f;
								num295 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 26, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 0, default(Color), 0.9f);
								Main.dust[num295].noLight = true;
								Main.dust[num295].velocity *= 1.3f;
								num294++;
							}
							return;
						}
						for (int num296 = 0; num296 < 15; num296++)
						{
							int num297 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 15, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1.8f);
							Main.dust[num297].noLight = true;
							Main.dust[num297].noGravity = true;
							Main.dust[num297].velocity *= 1.3f;
							num297 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 26, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 0, default(Color), 0.9f);
							Main.dust[num297].noLight = true;
							Main.dust[num297].velocity *= 1.3f;
						}
						return;
					}
					else if (this.type == 289)
					{
						if (this.life > 0)
						{
							int num298 = 0;
							while ((double)num298 < dmg / (double)this.lifeMax * 30.0)
							{
								int num299 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 181, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1.8f);
								Main.dust[num299].noLight = true;
								Main.dust[num299].noGravity = true;
								Main.dust[num299].velocity *= 1.3f;
								num298++;
							}
							return;
						}
						for (int num300 = 0; num300 < 50; num300++)
						{
							int num301 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 181, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1.8f);
							Main.dust[num301].noLight = true;
							Main.dust[num301].noGravity = true;
							Main.dust[num301].velocity *= 1.3f;
						}
						return;
					}
					else if (this.type == 35 || this.type == 36)
					{
						if (this.life > 0)
						{
							int num302 = 0;
							while ((double)num302 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 26, (float)hitDirection, -1f, 0, default(Color), 1f);
								num302++;
							}
							return;
						}
						for (int num303 = 0; num303 < 150; num303++)
						{
							Dust.NewDust(this.position, this.width, this.height, 26, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						if (this.type == 35)
						{
							Gore.NewGore(this.position, this.velocity, 54, 1f);
							Gore.NewGore(this.position, this.velocity, 55, 1f);
							return;
						}
						Gore.NewGore(this.position, this.velocity, 56, 1f);
						Gore.NewGore(this.position, this.velocity, 57, 1f);
						Gore.NewGore(this.position, this.velocity, 57, 1f);
						Gore.NewGore(this.position, this.velocity, 57, 1f);
						return;
					}
					else if (this.type == 139)
					{
						if (this.life <= 0)
						{
							for (int num304 = 0; num304 < 10; num304++)
							{
								int num305 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num305].velocity *= 1.4f;
							}
							for (int num306 = 0; num306 < 5; num306++)
							{
								int num307 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
								Main.dust[num307].noGravity = true;
								Main.dust[num307].velocity *= 5f;
								num307 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num307].velocity *= 3f;
							}
							int num308 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num308].velocity *= 0.4f;
							Gore expr_DB46_cp_0 = Main.gore[num308];
							expr_DB46_cp_0.velocity.X = expr_DB46_cp_0.velocity.X + 1f;
							Gore expr_DB66_cp_0 = Main.gore[num308];
							expr_DB66_cp_0.velocity.Y = expr_DB66_cp_0.velocity.Y + 1f;
							num308 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num308].velocity *= 0.4f;
							Gore expr_DBEA_cp_0 = Main.gore[num308];
							expr_DBEA_cp_0.velocity.X = expr_DBEA_cp_0.velocity.X - 1f;
							Gore expr_DC0A_cp_0 = Main.gore[num308];
							expr_DC0A_cp_0.velocity.Y = expr_DC0A_cp_0.velocity.Y + 1f;
							num308 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num308].velocity *= 0.4f;
							Gore expr_DC8E_cp_0 = Main.gore[num308];
							expr_DC8E_cp_0.velocity.X = expr_DC8E_cp_0.velocity.X + 1f;
							Gore expr_DCAE_cp_0 = Main.gore[num308];
							expr_DCAE_cp_0.velocity.Y = expr_DCAE_cp_0.velocity.Y - 1f;
							num308 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num308].velocity *= 0.4f;
							Gore expr_DD32_cp_0 = Main.gore[num308];
							expr_DD32_cp_0.velocity.X = expr_DD32_cp_0.velocity.X - 1f;
							Gore expr_DD52_cp_0 = Main.gore[num308];
							expr_DD52_cp_0.velocity.Y = expr_DD52_cp_0.velocity.Y - 1f;
							return;
						}
					}
					else if (this.type >= 134 && this.type <= 136)
					{
						if (this.type == 135 && this.life > 0 && Main.netMode != 1 && this.ai[2] == 0f && Main.rand.Next(25) == 0)
						{
							this.ai[2] = 1f;
							int num309 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 139, 0);
							if (Main.netMode == 2 && num309 < 200)
							{
								NetMessage.SendData(23, -1, -1, "", num309, 0f, 0f, 0f, 0);
							}
							this.netUpdate = true;
						}
						if (this.life <= 0)
						{
							Gore.NewGore(this.position, this.velocity, 156, 1f);
							if (Main.rand.Next(2) == 0)
							{
								for (int num310 = 0; num310 < 10; num310++)
								{
									int num311 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
									Main.dust[num311].velocity *= 1.4f;
								}
								for (int num312 = 0; num312 < 5; num312++)
								{
									int num313 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
									Main.dust[num313].noGravity = true;
									Main.dust[num313].velocity *= 5f;
									num313 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
									Main.dust[num313].velocity *= 3f;
								}
								int num314 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
								Main.gore[num314].velocity *= 0.4f;
								Gore expr_E093_cp_0 = Main.gore[num314];
								expr_E093_cp_0.velocity.X = expr_E093_cp_0.velocity.X + 1f;
								Gore expr_E0B3_cp_0 = Main.gore[num314];
								expr_E0B3_cp_0.velocity.Y = expr_E0B3_cp_0.velocity.Y + 1f;
								num314 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
								Main.gore[num314].velocity *= 0.4f;
								Gore expr_E137_cp_0 = Main.gore[num314];
								expr_E137_cp_0.velocity.X = expr_E137_cp_0.velocity.X - 1f;
								Gore expr_E157_cp_0 = Main.gore[num314];
								expr_E157_cp_0.velocity.Y = expr_E157_cp_0.velocity.Y + 1f;
								num314 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
								Main.gore[num314].velocity *= 0.4f;
								Gore expr_E1DB_cp_0 = Main.gore[num314];
								expr_E1DB_cp_0.velocity.X = expr_E1DB_cp_0.velocity.X + 1f;
								Gore expr_E1FB_cp_0 = Main.gore[num314];
								expr_E1FB_cp_0.velocity.Y = expr_E1FB_cp_0.velocity.Y - 1f;
								num314 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
								Main.gore[num314].velocity *= 0.4f;
								Gore expr_E27F_cp_0 = Main.gore[num314];
								expr_E27F_cp_0.velocity.X = expr_E27F_cp_0.velocity.X - 1f;
								Gore expr_E29F_cp_0 = Main.gore[num314];
								expr_E29F_cp_0.velocity.Y = expr_E29F_cp_0.velocity.Y - 1f;
								return;
							}
						}
					}
					else if (this.type == 127)
					{
						if (this.life <= 0)
						{
							Gore.NewGore(this.position, this.velocity, 149, 1f);
							Gore.NewGore(this.position, this.velocity, 150, 1f);
							for (int num315 = 0; num315 < 10; num315++)
							{
								int num316 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num316].velocity *= 1.4f;
							}
							for (int num317 = 0; num317 < 5; num317++)
							{
								int num318 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
								Main.dust[num318].noGravity = true;
								Main.dust[num318].velocity *= 5f;
								num318 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num318].velocity *= 3f;
							}
							int num319 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num319].velocity *= 0.4f;
							Gore expr_E50D_cp_0 = Main.gore[num319];
							expr_E50D_cp_0.velocity.X = expr_E50D_cp_0.velocity.X + 1f;
							Gore expr_E52D_cp_0 = Main.gore[num319];
							expr_E52D_cp_0.velocity.Y = expr_E52D_cp_0.velocity.Y + 1f;
							num319 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num319].velocity *= 0.4f;
							Gore expr_E5B1_cp_0 = Main.gore[num319];
							expr_E5B1_cp_0.velocity.X = expr_E5B1_cp_0.velocity.X - 1f;
							Gore expr_E5D1_cp_0 = Main.gore[num319];
							expr_E5D1_cp_0.velocity.Y = expr_E5D1_cp_0.velocity.Y + 1f;
							num319 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num319].velocity *= 0.4f;
							Gore expr_E655_cp_0 = Main.gore[num319];
							expr_E655_cp_0.velocity.X = expr_E655_cp_0.velocity.X + 1f;
							Gore expr_E675_cp_0 = Main.gore[num319];
							expr_E675_cp_0.velocity.Y = expr_E675_cp_0.velocity.Y - 1f;
							num319 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num319].velocity *= 0.4f;
							Gore expr_E6F9_cp_0 = Main.gore[num319];
							expr_E6F9_cp_0.velocity.X = expr_E6F9_cp_0.velocity.X - 1f;
							Gore expr_E719_cp_0 = Main.gore[num319];
							expr_E719_cp_0.velocity.Y = expr_E719_cp_0.velocity.Y - 1f;
							return;
						}
					}
					else if (this.type >= 128 && this.type <= 131)
					{
						if (this.life <= 0)
						{
							Gore.NewGore(this.position, this.velocity, 147, 1f);
							Gore.NewGore(this.position, this.velocity, 148, 1f);
							for (int num320 = 0; num320 < 10; num320++)
							{
								int num321 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num321].velocity *= 1.4f;
							}
							for (int num322 = 0; num322 < 5; num322++)
							{
								int num323 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
								Main.dust[num323].noGravity = true;
								Main.dust[num323].velocity *= 5f;
								num323 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num323].velocity *= 3f;
							}
							int num324 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num324].velocity *= 0.4f;
							Gore expr_E99A_cp_0 = Main.gore[num324];
							expr_E99A_cp_0.velocity.X = expr_E99A_cp_0.velocity.X + 1f;
							Gore expr_E9BA_cp_0 = Main.gore[num324];
							expr_E9BA_cp_0.velocity.Y = expr_E9BA_cp_0.velocity.Y + 1f;
							num324 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num324].velocity *= 0.4f;
							Gore expr_EA3E_cp_0 = Main.gore[num324];
							expr_EA3E_cp_0.velocity.X = expr_EA3E_cp_0.velocity.X - 1f;
							Gore expr_EA5E_cp_0 = Main.gore[num324];
							expr_EA5E_cp_0.velocity.Y = expr_EA5E_cp_0.velocity.Y + 1f;
							num324 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num324].velocity *= 0.4f;
							Gore expr_EAE2_cp_0 = Main.gore[num324];
							expr_EAE2_cp_0.velocity.X = expr_EAE2_cp_0.velocity.X + 1f;
							Gore expr_EB02_cp_0 = Main.gore[num324];
							expr_EB02_cp_0.velocity.Y = expr_EB02_cp_0.velocity.Y - 1f;
							num324 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num324].velocity *= 0.4f;
							Gore expr_EB86_cp_0 = Main.gore[num324];
							expr_EB86_cp_0.velocity.X = expr_EB86_cp_0.velocity.X - 1f;
							Gore expr_EBA6_cp_0 = Main.gore[num324];
							expr_EBA6_cp_0.velocity.Y = expr_EBA6_cp_0.velocity.Y - 1f;
							return;
						}
					}
					else if (this.type == 23)
					{
						if (this.life > 0)
						{
							int num325 = 0;
							while ((double)num325 < dmg / (double)this.lifeMax * 100.0)
							{
								int num326 = 25;
								if (Main.rand.Next(2) == 0)
								{
									num326 = 6;
								}
								Dust.NewDust(this.position, this.width, this.height, num326, (float)hitDirection, -1f, 0, default(Color), 1f);
								int num327 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
								Main.dust[num327].noGravity = true;
								num325++;
							}
							return;
						}
						for (int num328 = 0; num328 < 50; num328++)
						{
							int num329 = 25;
							if (Main.rand.Next(2) == 0)
							{
								num329 = 6;
							}
							Dust.NewDust(this.position, this.width, this.height, num329, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						for (int num330 = 0; num330 < 50; num330++)
						{
							int num331 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2.5f);
							Main.dust[num331].velocity *= 6f;
							Main.dust[num331].noGravity = true;
						}
						return;
					}
					else if (this.type == 24)
					{
						if (this.life > 0)
						{
							int num332 = 0;
							while ((double)num332 < dmg / (double)this.lifeMax * 100.0)
							{
								int num333 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X, this.velocity.Y, 100, default(Color), 2.5f);
								Main.dust[num333].noGravity = true;
								num332++;
							}
							return;
						}
						for (int num334 = 0; num334 < 50; num334++)
						{
							int num335 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X, this.velocity.Y, 100, default(Color), 2.5f);
							Main.dust[num335].noGravity = true;
							Main.dust[num335].velocity *= 2f;
						}
						Gore.NewGore(this.position, this.velocity, 45, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 46, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 46, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 47, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 47, 1f);
						return;
					}
					else
					{
						if (this.type == 25)
						{
							Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
							for (int num336 = 0; num336 < 20; num336++)
							{
								int num337 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 2f);
								Main.dust[num337].noGravity = true;
								Main.dust[num337].velocity *= 2f;
								num337 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1f);
								Main.dust[num337].velocity *= 2f;
							}
							return;
						}
						if (this.type == 33)
						{
							Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
							for (int num338 = 0; num338 < 20; num338++)
							{
								int num339 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 172, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1.2f);
								Main.dust[num339].noGravity = true;
								Main.dust[num339].velocity *= 2f;
								num339 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 172, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 0.6f);
								Main.dust[num339].velocity *= 2f;
							}
							return;
						}
						if (this.type == 26 || this.type == 27 || this.type == 28 || this.type == 29 || this.type == 73 || this.type == 111)
						{
							if (this.life > 0)
							{
								int num340 = 0;
								while ((double)num340 < dmg / (double)this.lifeMax * 100.0)
								{
									Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
									num340++;
								}
								return;
							}
							for (int num341 = 0; num341 < 50; num341++)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
							}
							Gore.NewGore(this.position, this.velocity, 48, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 49, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 49, this.scale);
							if (this.type == 111)
							{
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 131, this.scale);
							}
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 50, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 50, this.scale);
							return;
						}
						else if (this.type == 185)
						{
							if (this.life > 0)
							{
								int num342 = 0;
								while ((double)num342 < dmg / (double)this.lifeMax * 100.0)
								{
									Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
									num342++;
								}
								return;
							}
							for (int num343 = 0; num343 < 50; num343++)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
							}
							Gore.NewGore(this.position, this.velocity, 240, this.scale);
							return;
						}
						else
						{
							if (this.type == 30)
							{
								Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
								for (int num344 = 0; num344 < 20; num344++)
								{
									int num345 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 2f);
									Main.dust[num345].noGravity = true;
									Main.dust[num345].velocity *= 2f;
									num345 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1f);
									Main.dust[num345].velocity *= 2f;
								}
								return;
							}
							if (this.type == 42 || this.type == 176 || this.type == 205 || (this.type >= 231 && this.type <= 235))
							{
								if (this.life > 0)
								{
									int num346 = 0;
									while ((double)num346 < dmg / (double)this.lifeMax * 100.0)
									{
										Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
										num346++;
									}
									return;
								}
								for (int num347 = 0; num347 < 50; num347++)
								{
									Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
								}
								if (this.type == 205)
								{
									Gore.NewGore(this.position, this.velocity, 270, this.scale);
									Gore.NewGore(this.position, this.velocity, 271, this.scale);
									Gore.NewGore(this.position, this.velocity, 271, this.scale);
									Gore.NewGore(this.position, this.velocity, 272, this.scale);
									return;
								}
								if (this.type == 176)
								{
									Gore.NewGore(this.position, this.velocity, 229, this.scale);
									Gore.NewGore(this.position, this.velocity, 230, this.scale);
									return;
								}
								Gore.NewGore(this.position, this.velocity, 70, this.scale);
								Gore.NewGore(this.position, this.velocity, 71, this.scale);
								return;
							}
							else if (this.type == 43 || this.type == 56)
							{
								if (this.life > 0)
								{
									int num348 = 0;
									while ((double)num348 < dmg / (double)this.lifeMax * 100.0)
									{
										Dust.NewDust(this.position, this.width, this.height, 40, (float)hitDirection, -1f, this.alpha, this.color, 1.2f);
										num348++;
									}
									return;
								}
								for (int num349 = 0; num349 < 50; num349++)
								{
									Dust.NewDust(this.position, this.width, this.height, 40, (float)hitDirection, -2f, this.alpha, this.color, 1.2f);
								}
								Gore.NewGore(this.position, this.velocity, 72, 1f);
								Gore.NewGore(this.position, this.velocity, 72, 1f);
								return;
							}
							else if (this.type == 175)
							{
								if (this.life > 0)
								{
									int num350 = 0;
									while ((double)num350 < dmg / (double)this.lifeMax * 100.0)
									{
										Dust.NewDust(this.position, this.width, this.height, 40, (float)hitDirection, -1f, this.alpha, this.color, 1.2f);
										num350++;
									}
									return;
								}
								for (int num351 = 0; num351 < 50; num351++)
								{
									Dust.NewDust(this.position, this.width, this.height, 40, (float)hitDirection, -2f, this.alpha, this.color, 1.2f);
								}
								Gore.NewGore(this.position, this.velocity, 227, 1f);
								Gore.NewGore(this.position, this.velocity, 228, 1f);
								return;
							}
							else if (this.type == 48)
							{
								if (this.life > 0)
								{
									int num352 = 0;
									while ((double)num352 < dmg / (double)this.lifeMax * 100.0)
									{
										Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
										num352++;
									}
									return;
								}
								for (int num353 = 0; num353 < 50; num353++)
								{
									Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
								}
								Gore.NewGore(this.position, this.velocity, 80, 1f);
								Gore.NewGore(this.position, this.velocity, 81, 1f);
								return;
							}
							else if (this.type == 62 || this.type == 66)
							{
								if (this.life > 0)
								{
									int num354 = 0;
									while ((double)num354 < dmg / (double)this.lifeMax * 100.0)
									{
										Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
										num354++;
									}
									return;
								}
								for (int num355 = 0; num355 < 50; num355++)
								{
									Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
								}
								Gore.NewGore(this.position, this.velocity, 93, 1f);
								Gore.NewGore(this.position, this.velocity, 94, 1f);
								Gore.NewGore(this.position, this.velocity, 94, 1f);
								return;
							}
							else if (this.type == 156)
							{
								if (this.life > 0)
								{
									int num356 = 0;
									while ((double)num356 < dmg / (double)this.lifeMax * 100.0)
									{
										Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
										num356++;
									}
									return;
								}
								for (int num357 = 0; num357 < 50; num357++)
								{
									Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
								}
								Gore.NewGore(this.position, this.velocity, 184, 1f);
								Gore.NewGore(this.position, this.velocity, 185, 1f);
								Gore.NewGore(this.position, this.velocity, 185, 1f);
							}
						}
					}
					return;
				}
				if (this.life > 0)
				{
					int num358 = 0;
					while ((double)num358 < dmg / (double)this.lifeMax * 80.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 6, (float)(hitDirection * 2), -1f, this.alpha, default(Color), 1.5f);
						num358++;
					}
					return;
				}
				for (int num359 = 0; num359 < 40; num359++)
				{
					Dust.NewDust(this.position, this.width, this.height, 6, (float)(hitDirection * 2), -1f, this.alpha, default(Color), 1.5f);
				}
				return;
			}
		}
		public static int CountNPCS(int Type)
		{
			int num = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == Type)
				{
					num++;
				}
			}
			return num;
		}
		public static bool AnyNPCs(int Type)
		{
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == Type)
				{
					return true;
				}
			}
			return false;
		}
		public static void SpawnSkeletron()
		{
			bool flag = true;
			bool flag2 = false;
			Vector2 vector = default(Vector2);
			int num = 0;
			int num2 = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == 35)
				{
					flag = false;
					break;
				}
			}
			for (int j = 0; j < 200; j++)
			{
				if (Main.npc[j].active)
				{
					if (Main.npc[j].type == 37)
					{
						flag2 = true;
						Main.npc[j].ai[3] = 1f;
						vector = Main.npc[j].position;
						num = Main.npc[j].width;
						num2 = Main.npc[j].height;
						if (Main.netMode == 2)
						{
							NetMessage.SendData(23, -1, -1, "", j, 0f, 0f, 0f, 0);
						}
					}
					else if (Main.npc[j].type == 54)
					{
						flag2 = true;
						vector = Main.npc[j].position;
						num = Main.npc[j].width;
						num2 = Main.npc[j].height;
					}
				}
			}
			if (flag && flag2)
			{
				int num3 = NPC.NewNPC((int)vector.X + num / 2, (int)vector.Y + num2 / 2, 35, 0);
				Main.npc[num3].netUpdate = true;
				string str = "Skeletron";
				if (Main.netMode == 0)
				{
					Main.NewText(str + " " + Lang.misc[16], 175, 75, 255, false);
					return;
				}
				if (Main.netMode == 2)
				{
					NetMessage.SendData(25, -1, -1, str + " " + Lang.misc[16], 255, 175f, 75f, 255f, 0);
				}
			}
		}
		public static bool NearSpikeBall(int x, int y)
		{
			Rectangle rectangle = new Rectangle(x * 16 - 300, y * 16 - 300, 600, 600);
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].aiStyle == 20)
				{
					Rectangle rectangle2 = new Rectangle((int)Main.npc[i].ai[1], (int)Main.npc[i].ai[2], 20, 20);
					if (rectangle.Intersects(rectangle2))
					{
						return true;
					}
				}
			}
			return false;
		}
		public void AddBuff(int type, int time, bool quiet = false)
		{
			if (this.buffImmune[type])
			{
				return;
			}
			if (!quiet)
			{
				if (Main.netMode == 1)
				{
					NetMessage.SendData(53, -1, -1, "", this.whoAmI, (float)type, (float)time, 0f, 0);
				}
				else if (Main.netMode == 2)
				{
					NetMessage.SendData(54, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0);
				}
			}
			int num = -1;
			for (int i = 0; i < 5; i++)
			{
				if (this.buffType[i] == type)
				{
					if (this.buffTime[i] < time)
					{
						this.buffTime[i] = time;
					}
					return;
				}
			}
			while (num == -1)
			{
				int num2 = -1;
				for (int j = 0; j < 5; j++)
				{
					if (!Main.debuff[this.buffType[j]])
					{
						num2 = j;
						break;
					}
				}
				if (num2 == -1)
				{
					return;
				}
				for (int k = num2; k < 5; k++)
				{
					if (this.buffType[k] == 0)
					{
						num = k;
						break;
					}
				}
				if (num == -1)
				{
					this.DelBuff(num2);
				}
			}
			this.buffType[num] = type;
			this.buffTime[num] = time;
		}
		public void DelBuff(int b)
		{
			this.buffTime[b] = 0;
			this.buffType[b] = 0;
			for (int i = 0; i < 4; i++)
			{
				if (this.buffTime[i] == 0 || this.buffType[i] == 0)
				{
					for (int j = i + 1; j < 5; j++)
					{
						this.buffTime[j - 1] = this.buffTime[j];
						this.buffType[j - 1] = this.buffType[j];
						this.buffTime[j] = 0;
						this.buffType[j] = 0;
					}
				}
			}
			if (Main.netMode == 2)
			{
				NetMessage.SendData(54, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0);
			}
		}
		public Vector2 center()
		{
			return new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2));
		}
		public Rectangle getRect()
		{
			return new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
		}
		public void UpdateNPC(int i)
		{
			this.whoAmI = i;
			if (this.active)
			{
				if (this.realLife >= 0)
				{
					this.life = Main.npc[this.realLife].life;
				}
				if (Main.netMode == 1)
				{
					bool flag = false;
					int num = (int)(this.position.X + (float)(this.width / 2)) / 16;
					int num2 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
					try
					{
						if (num >= 4 && num <= Main.maxTilesX - 4 && num2 >= 4 && num2 <= Main.maxTilesY - 4)
						{
							if (false)
							{
								flag = true;
							}
							else if (false)
							{
								flag = true;
							}
							else if (false)
							{
								flag = true;
							}
							else if (false)
							{
								flag = true;
							}
							else if (false)
							{
								flag = true;
							}
						}
					}
					catch
					{
						flag = true;
					}
					if (flag)
					{
						return;
					}
				}
				if (this.displayName == "")
				{
					this.displayName = this.name;
				}
				if (this.townNPC && Main.chrName[this.type] != "")
				{
					this.displayName = Main.chrName[this.type];
				}
				this.lifeRegen = 0;
				this.poisoned = false;
				this.venom = false;
				this.onFire = false;
				this.midas = false;
				this.ichor = false;
				this.onFrostBurn = false;
				this.onFire2 = false;
				this.confused = false;
				for (int j = 0; j < 5; j++)
				{
					if (this.buffType[j] > 0 && this.buffTime[j] > 0)
					{
						this.buffTime[j]--;
						if (this.buffType[j] == 20)
						{
							this.poisoned = true;
						}
						if (this.buffType[j] == 70)
						{
							this.venom = true;
						}
						if (this.buffType[j] == 24)
						{
							this.onFire = true;
						}
						if (this.buffType[j] == 72)
						{
							this.midas = true;
						}
						if (this.buffType[j] == 69)
						{
							this.ichor = true;
						}
						if (this.buffType[j] == 31)
						{
							this.confused = true;
						}
						if (this.buffType[j] == 39)
						{
							this.onFire2 = true;
						}
						if (this.buffType[j] == 44)
						{
							this.onFrostBurn = true;
						}
					}
				}
				if (Main.netMode != 1)
				{
					for (int k = 0; k < 5; k++)
					{
						if (this.buffType[k] > 0 && this.buffTime[k] <= 0)
						{
							this.DelBuff(k);
							if (Main.netMode == 2)
							{
								NetMessage.SendData(54, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0);
							}
						}
					}
				}
				if (this.teleportTime > 0f)
				{
					if ((float)Main.rand.Next(100) <= 100f * this.teleportTime * 2f)
					{
						int num3 = Dust.NewDust(new Vector2((float)this.getRect().X, (float)this.getRect().Y), this.getRect().Width, this.getRect().Height, 159, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num3].scale = this.teleportTime * 1.5f;
						Main.dust[num3].noGravity = true;
						Main.dust[num3].velocity *= 1.1f;
					}
					this.teleportTime -= 0.005f;
				}
				if (!this.dontTakeDamage)
				{
					if (this.poisoned)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						this.lifeRegen -= 4;
					}
					if (this.onFire)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						this.lifeRegen -= 8;
					}
					if (this.onFrostBurn)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						this.lifeRegen -= 12;
					}
					if (this.onFire2)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						this.lifeRegen -= 12;
					}
					if (this.venom)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						this.lifeRegen -= 12;
					}
					this.lifeRegenCount += this.lifeRegen;
					while (this.lifeRegenCount >= 120)
					{
						this.lifeRegenCount -= 120;
						if (this.life < this.lifeMax)
						{
							this.life++;
						}
						if (this.life > this.lifeMax)
						{
							this.life = this.lifeMax;
						}
					}
					while (this.lifeRegenCount <= -120)
					{
						this.lifeRegenCount += 120;
						int num9 = this.whoAmI;
						if (this.realLife >= 0)
						{
							num9 = this.realLife;
						}
						Main.npc[num9].life--;
						if (Main.npc[num9].life <= 0)
						{
							Main.npc[num9].life = 1;
							if (Main.netMode != 1)
							{
								Main.npc[num9].StrikeNPC(9999, 0f, 0, false, false);
								if (Main.netMode == 2)
								{
									NetMessage.SendData(28, -1, -1, "", num9, 9999f, 0f, 0f, 0);
								}
							}
						}
					}
				}
				if (Main.netMode != 1 && Main.bloodMoon)
				{
					bool flag2 = false;
					if (this.value == 0f)
					{
						flag2 = true;
					}
					if (this.type == 46 || this.type == 303)
					{
						this.Transform(47);
					}
					else if (this.type == 55)
					{
						this.Transform(57);
					}
					else if (this.type == 148 || this.type == 149)
					{
						this.Transform(168);
					}
					if (flag2)
					{
						this.value = 0f;
					}
				}
				float num10 = 10f;
				NPC.gravity = 0.3f;
				if (this.type == 258)
				{
					NPC.gravity = 0.1f;
					if (this.velocity.Y > 3f)
					{
						this.velocity.Y = 3f;
					}
				}
				float num11 = (float)(Main.maxTilesX / 4200);
				num11 *= num11;
				float num12 = (float)((double)(this.position.Y / 16f - (60f + 10f * num11)) / (Main.worldSurface / 6.0));
				if ((double)num12 < 0.25)
				{
					num12 = 0.25f;
				}
				if (num12 > 1f)
				{
					num12 = 1f;
				}
				NPC.gravity *= num12;
				if (this.wet)
				{
					if (this.honeyWet)
					{
						NPC.gravity = 0.1f;
						num10 = 4f;
					}
					else
					{
						NPC.gravity = 0.2f;
						num10 = 7f;
					}
				}
				if (this.soundDelay > 0)
				{
					this.soundDelay--;
				}
				if (this.life <= 0)
				{
					this.active = false;
				}
				this.oldTarget = this.target;
				this.oldDirection = this.direction;
				this.oldDirectionY = this.directionY;
				float num13 = 1f + Math.Abs(this.velocity.X) / 3f;
				if (this.gfxOffY > 0f)
				{
					this.gfxOffY -= num13 * this.stepSpeed;
					if (this.gfxOffY < 0f)
					{
						this.gfxOffY = 0f;
					}
				}
				else if (this.gfxOffY < 0f)
				{
					this.gfxOffY += num13 * this.stepSpeed;
					if (this.gfxOffY > 0f)
					{
						this.gfxOffY = 0f;
					}
				}
				if (this.gfxOffY > 16f)
				{
					this.gfxOffY = 16f;
				}
				if (this.gfxOffY < -16f)
				{
					this.gfxOffY = -16f;
				}
				this.AI();
				for (int l = 0; l < 256; l++)
				{
					if (this.immune[l] > 0)
					{
						this.immune[l]--;
					}
				}
				if (!this.noGravity && !this.noTileCollide)
				{
					int num14 = (int)(this.position.X + (float)(this.width / 2)) / 16;
					int num15 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
					if (false)
					{
						NPC.gravity = 0f;
						this.velocity.X = 0f;
						this.velocity.Y = 0f;
					}
				}
				if (!this.noGravity)
				{
					this.velocity.Y = this.velocity.Y + NPC.gravity;
					if (this.velocity.Y > num10)
					{
						this.velocity.Y = num10;
					}
				}
				if ((double)this.velocity.X < 0.005 && (double)this.velocity.X > -0.005)
				{
					this.velocity.X = 0f;
				}
				if (Main.netMode != 1 && this.type != 37 && (this.friendly || this.type == 46 || this.type == 55 || this.type == 74 || this.type == 148 || this.type == 149 || this.type == 230 || this.type == 297 || this.type == 298 || this.type == 299 || this.type == 303))
				{
					if (this.life < this.lifeMax)
					{
						this.friendlyRegen++;
						if (this.friendlyRegen > 300)
						{
							this.friendlyRegen = 0;
							this.life++;
							this.netUpdate = true;
						}
					}
					if (this.immune[255] == 0)
					{
						Rectangle rectangle = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
						for (int m = 0; m < 200; m++)
						{
							if (Main.npc[m].active && !Main.npc[m].friendly && Main.npc[m].damage > 0)
							{
								Rectangle rectangle2 = new Rectangle((int)Main.npc[m].position.X, (int)Main.npc[m].position.Y, Main.npc[m].width, Main.npc[m].height);
								if (rectangle.Intersects(rectangle2))
								{
									int num16 = Main.npc[m].damage;
									int num17 = 6;
									int num18 = 1;
									if (Main.npc[m].position.X + (float)(Main.npc[m].width / 2) > this.position.X + (float)(this.width / 2))
									{
										num18 = -1;
									}
									Main.npc[i].StrikeNPC(num16, (float)num17, num18, false, false);
									if (Main.netMode != 0)
									{
										NetMessage.SendData(28, -1, -1, "", i, (float)num16, (float)num17, (float)num18, 0);
									}
									this.netUpdate = true;
									this.immune[255] = 30;
								}
							}
						}
					}
				}
				if (!this.noTileCollide)
				{
					Vector4 vector = Collision.WalkDownSlope(this.position, this.velocity, this.width, this.height, NPC.gravity);
					this.position.X = vector.X;
					this.position.Y = vector.Y;
					this.velocity.X = vector.Z;
					this.velocity.Y = vector.W;
					bool flag3 = Collision.LavaCollision(this.position, this.width, this.height);
					if (flag3)
					{
						this.lavaWet = true;
						if (!this.lavaImmune && !this.dontTakeDamage && Main.netMode != 1 && this.immune[255] == 0)
						{
							this.AddBuff(24, 420, false);
							this.immune[255] = 30;
							this.StrikeNPC(50, 0f, 0, false, false);
							if (Main.netMode == 2 && Main.netMode != 0)
							{
								NetMessage.SendData(28, -1, -1, "", this.whoAmI, 50f, 0f, 0f, 0);
							}
						}
					}
					bool flag4;
					if (this.type == 72 || this.aiStyle == 21)
					{
						flag4 = false;
						this.wetCount = 0;
						flag3 = false;
					}
					else
					{
						flag4 = Collision.WetCollision(this.position, this.width, this.height);
						if (Collision.honey)
						{
							this.honeyWet = true;
						}
					}
					if (flag4)
					{
						if (this.onFire && !this.lavaWet && Main.netMode != 1)
						{
							for (int n = 0; n < 5; n++)
							{
								if (this.buffType[n] == 24)
								{
									this.DelBuff(n);
								}
							}
						}
						if (!this.wet && this.wetCount == 0)
						{
							this.wetCount = 10;
							if (!flag3)
							{
								if (this.honeyWet)
								{
									for (int num19 = 0; num19 < 10; num19++)
									{
										int num20 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 152, 0f, 0f, 0, default(Color), 1f);
										Dust expr_F75_cp_0 = Main.dust[num20];
										expr_F75_cp_0.velocity.Y = expr_F75_cp_0.velocity.Y - 1f;
										Dust expr_F93_cp_0 = Main.dust[num20];
										expr_F93_cp_0.velocity.X = expr_F93_cp_0.velocity.X * 2.5f;
										Main.dust[num20].scale = 1.3f;
										Main.dust[num20].alpha = 100;
										Main.dust[num20].noGravity = true;
									}
									if (this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 147 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && !this.noGravity)
									{
										Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
									}
								}
								else
								{
									for (int num21 = 0; num21 < 30; num21++)
									{
										int num22 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, Dust.dustWater(), 0f, 0f, 0, default(Color), 1f);
										Dust expr_10E8_cp_0 = Main.dust[num22];
										expr_10E8_cp_0.velocity.Y = expr_10E8_cp_0.velocity.Y - 4f;
										Dust expr_1106_cp_0 = Main.dust[num22];
										expr_1106_cp_0.velocity.X = expr_1106_cp_0.velocity.X * 2.5f;
										Main.dust[num22].scale *= 0.8f;
										Main.dust[num22].alpha = 100;
										Main.dust[num22].noGravity = true;
									}
									if (this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 147 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && !this.noGravity)
									{
										Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 0);
									}
								}
							}
							else
							{
								for (int num23 = 0; num23 < 10; num23++)
								{
									int num24 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 35, 0f, 0f, 0, default(Color), 1f);
									Dust expr_125F_cp_0 = Main.dust[num24];
									expr_125F_cp_0.velocity.Y = expr_125F_cp_0.velocity.Y - 1.5f;
									Dust expr_127D_cp_0 = Main.dust[num24];
									expr_127D_cp_0.velocity.X = expr_127D_cp_0.velocity.X * 2.5f;
									Main.dust[num24].scale = 1.3f;
									Main.dust[num24].alpha = 100;
									Main.dust[num24].noGravity = true;
								}
								if (this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 147 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && !this.noGravity)
								{
									Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
								}
							}
						}
						this.wet = true;
					}
					else if (this.wet)
					{
						this.velocity.X = this.velocity.X * 0.5f;
						this.wet = false;
						if (this.wetCount == 0)
						{
							this.wetCount = 10;
							if (!this.lavaWet)
							{
								if (this.honeyWet)
								{
									for (int num25 = 0; num25 < 10; num25++)
									{
										int num26 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 152, 0f, 0f, 0, default(Color), 1f);
										Dust expr_1413_cp_0 = Main.dust[num26];
										expr_1413_cp_0.velocity.Y = expr_1413_cp_0.velocity.Y - 1f;
										Dust expr_1431_cp_0 = Main.dust[num26];
										expr_1431_cp_0.velocity.X = expr_1431_cp_0.velocity.X * 2.5f;
										Main.dust[num26].scale = 1.3f;
										Main.dust[num26].alpha = 100;
										Main.dust[num26].noGravity = true;
									}
									if (this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 147 && this.type != 300 && this.type != 59 && this.aiStyle != 39 && !this.noGravity)
									{
										Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
									}
								}
								else
								{
									for (int num27 = 0; num27 < 30; num27++)
									{
										int num28 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, Dust.dustWater(), 0f, 0f, 0, default(Color), 1f);
										Dust expr_1586_cp_0 = Main.dust[num28];
										expr_1586_cp_0.velocity.Y = expr_1586_cp_0.velocity.Y - 4f;
										Dust expr_15A4_cp_0 = Main.dust[num28];
										expr_15A4_cp_0.velocity.X = expr_15A4_cp_0.velocity.X * 2.5f;
										Main.dust[num28].scale *= 0.8f;
										Main.dust[num28].alpha = 100;
										Main.dust[num28].noGravity = true;
									}
									if (this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && !this.noGravity)
									{
										Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 0);
									}
								}
							}
							else
							{
								for (int num29 = 0; num29 < 10; num29++)
								{
									int num30 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 35, 0f, 0f, 0, default(Color), 1f);
									Dust expr_16ED_cp_0 = Main.dust[num30];
									expr_16ED_cp_0.velocity.Y = expr_16ED_cp_0.velocity.Y - 1.5f;
									Dust expr_170B_cp_0 = Main.dust[num30];
									expr_170B_cp_0.velocity.X = expr_170B_cp_0.velocity.X * 2.5f;
									Main.dust[num30].scale = 1.3f;
									Main.dust[num30].alpha = 100;
									Main.dust[num30].noGravity = true;
								}
								if (this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && !this.noGravity)
								{
									Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
								}
							}
						}
					}
					if (!this.wet)
					{
						this.lavaWet = false;
						this.honeyWet = false;
					}
					if (this.wetCount > 0)
					{
						this.wetCount -= 1;
					}
					bool flag5 = false;
					if (this.aiStyle == 10)
					{
						flag5 = true;
					}
					if (this.aiStyle == 14)
					{
						flag5 = true;
					}
					if (this.aiStyle == 3 && this.directionY == 1)
					{
						flag5 = true;
					}
					this.oldVelocity = this.velocity;
					this.collideX = false;
					this.collideY = false;
					if (Main.netMode != 1)
					{
						if (this.type == 230 && this.wet)
						{
							int num31 = this.direction;
							Vector2 vector2 = this.velocity;
							this.Transform(55);
							this.direction = num31;
							this.velocity = vector2;
							this.wet = true;
							if (this.velocity.Y < 0f)
							{
								this.velocity.Y = 0f;
							}
						}
						else if (this.type == 55 && !this.wet && Main.raining)
						{
							int num32 = this.direction;
							Vector2 vector3 = this.velocity;
							this.Transform(230);
							this.direction = num32;
							this.velocity = vector3;
							this.homeTileX = (int)(this.position.X / 16f) + 10 * this.direction;
						}
					}
					Vector2 vector4 = this.position;
					int num33 = this.width;
					int num34 = this.height;
					if (this.type == 243)
					{
						num34 = 90;
					}
					if (this.type == 290)
					{
						num34 = 40;
					}
					if (num34 != this.height)
					{
						vector4.Y += (float)(this.height - num34);
					}
					if (this.wet)
					{
						if (this.honeyWet)
						{
							Vector2 vector5 = this.velocity;
							this.velocity = Collision.TileCollision(vector4, this.velocity, num33, num34, flag5, flag5);
							if (Collision.up)
							{
								this.velocity.Y = 0.01f;
							}
							Vector2 value = this.velocity * 0.25f;
							if (this.velocity.X != vector5.X)
							{
								value.X = this.velocity.X;
								this.collideX = true;
							}
							if (this.velocity.Y != vector5.Y)
							{
								value.Y = this.velocity.Y;
								this.collideY = true;
							}
							this.oldPosition = this.position;
							this.position += value;
						}
						else
						{
							Vector2 vector6 = this.velocity;
							this.velocity = Collision.TileCollision(vector4, this.velocity, num33, num34, flag5, flag5);
							if (Collision.up)
							{
								this.velocity.Y = 0.01f;
							}
							Vector2 value2 = this.velocity * 0.5f;
							if (this.velocity.X != vector6.X)
							{
								value2.X = this.velocity.X;
								this.collideX = true;
							}
							if (this.velocity.Y != vector6.Y)
							{
								value2.Y = this.velocity.Y;
								this.collideY = true;
							}
							this.oldPosition = this.position;
							this.position += value2;
						}
					}
					else
					{
						if (this.type == 72)
						{
							Vector2 vector7 = new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2));
							int num35 = 12;
							int num36 = 12;
							vector7.X -= (float)(num35 / 2);
							vector7.Y -= (float)(num36 / 2);
							this.velocity = Collision.noSlopeCollision(vector4, this.velocity, num33, num34, true, true);
						}
						else
						{
							this.velocity = Collision.TileCollision(vector4, this.velocity, num33, num34, flag5, flag5);
						}
						if (Collision.up)
						{
							this.velocity.Y = 0.01f;
						}
						if (this.oldVelocity.X != this.velocity.X)
						{
							this.collideX = true;
						}
						if (this.oldVelocity.Y != this.velocity.Y)
						{
							this.collideY = true;
						}
						this.oldPosition = this.position;
						this.position += this.velocity;
					}
					Vector4 vector8 = Collision.SlopeCollision(this.position, this.velocity, this.width, this.height, NPC.gravity);
					this.position.X = vector8.X;
					this.position.Y = vector8.Y;
					this.velocity.X = vector8.Z;
					this.velocity.Y = vector8.W;
				}
				else
				{
					this.oldPosition = this.position;
					this.position += this.velocity;
				}
				if (Main.netMode != 1 && !this.noTileCollide && this.lifeMax > 1 && Collision.SwitchTiles(this.position, this.width, this.height, this.oldPosition, 2) && (this.type == 46 || this.type == 148 || this.type == 149 || this.type == 303))
				{
					this.ai[0] = 1f;
					this.ai[1] = 400f;
					this.ai[2] = 0f;
				}
				this.FindFrame();
				if (this.type == 120 || this.type == 137 || this.type == 138)
				{
					for (int num37 = this.oldPos.Length - 1; num37 > 0; num37--)
					{
						this.oldPos[num37] = this.oldPos[num37 - 1];
					}
					this.oldPos[0] = this.position;
				}
				else if (this.type == 94)
				{
					for (int num38 = this.oldPos.Length - 1; num38 > 0; num38--)
					{
						this.oldPos[num38] = this.oldPos[num38 - 1];
					}
					this.oldPos[0] = this.position;
				}
				else if (this.type == 125 || this.type == 126 || this.type == 127 || this.type == 128 || this.type == 129 || this.type == 130 || this.type == 131 || this.type == 139 || this.type == 140)
				{
					for (int num39 = this.oldPos.Length - 1; num39 > 0; num39--)
					{
						this.oldPos[num39] = this.oldPos[num39 - 1];
					}
					this.oldPos[0] = this.position;
				}
				if (!this.active)
				{
					this.netUpdate = true;
				}
				if (Main.netMode == 2)
				{
					if (Main.npcStreamSpeed > 0 && !this.townNPC && Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) > 1f)
					{
						this.netStream += 1;
						if ((int)this.netStream > Main.npcStreamSpeed)
						{
							for (int num40 = 0; num40 < 255; num40++)
							{
								if (Main.player[num40].active)
								{
									float num41 = Math.Abs(this.center().X - Main.player[num40].center().X) + Math.Abs(this.center().Y - Main.player[num40].center().Y);
									if (num41 < 250f)
									{
										byte[] expr_202B_cp_0 = this.streamPlayer;
										int expr_202B_cp_1 = num40;
										expr_202B_cp_0[expr_202B_cp_1] -= 8;
									}
									else if (num41 < 500f)
									{
										byte[] expr_2051_cp_0 = this.streamPlayer;
										int expr_2051_cp_1 = num40;
										expr_2051_cp_0[expr_2051_cp_1] -= 4;
									}
									else if (num41 < 1000f)
									{
										byte[] expr_2077_cp_0 = this.streamPlayer;
										int expr_2077_cp_1 = num40;
										expr_2077_cp_0[expr_2077_cp_1] -= 2;
									}
									else if (num41 < 1500f)
									{
										byte[] expr_209D_cp_0 = this.streamPlayer;
										int expr_209D_cp_1 = num40;
										expr_209D_cp_0[expr_209D_cp_1] -= 1;
									}
									if (this.streamPlayer[num40] <= 0)
									{
										this.streamPlayer[num40] = 8;
										NetMessage.SendData(23, num40, -1, "", i, 0f, 0f, 0f, 0);
									}
								}
							}
						}
					}
					if (this.townNPC)
					{
						this.netSpam = 0;
					}
					if (this.netUpdate2)
					{
						this.netUpdate = true;
					}
					if (!this.active)
					{
						this.netSpam = 0;
					}
					if (this.netUpdate)
					{
						if (this.netSpam <= 90)
						{
							this.netSpam += 30;
							NetMessage.SendData(23, -1, -1, "", i, 0f, 0f, 0f, 0);
							this.netUpdate2 = false;
						}
						else
						{
							this.netUpdate2 = true;
						}
					}
					if (this.netSpam > 0)
					{
						this.netSpam--;
					}
					if (this.active && this.townNPC && NPC.TypeToNum(this.type) != -1)
					{
						if (this.homeless != this.oldHomeless || this.homeTileX != this.oldHomeTileX || this.homeTileY != this.oldHomeTileY)
						{
							int num42 = 0;
							if (this.homeless)
							{
								num42 = 1;
							}
							NetMessage.SendData(60, -1, -1, "", i, (float)Main.npc[i].homeTileX, (float)Main.npc[i].homeTileY, (float)num42, 0);
						}
						this.oldHomeless = this.homeless;
						this.oldHomeTileX = this.homeTileX;
						this.oldHomeTileY = this.homeTileY;
					}
				}
				this.CheckActive();
				this.netUpdate = false;
				this.justHit = false;
			}
		}
		public Color GetAlpha(Color newColor)
		{
			float num = (float)(255 - this.alpha) / 255f;
			int num2 = (int)((float)newColor.R * num);
			int num3 = (int)((float)newColor.G * num);
			int num4 = (int)((float)newColor.B * num);
			int num5 = (int)newColor.A - this.alpha;
			if (this.type == 25 || this.type == 30 || this.type == 59 || this.type == 60)
			{
				return new Color(200, 200, 200, 0);
			}
			if (this.type == 72)
			{
				num2 = (int)newColor.R;
				num3 = (int)newColor.G;
				num4 = (int)newColor.B;
			}
			else
			{
				if (this.type == 288)
				{
					return new Color(200, 200, 200, 0);
				}
				if (this.type == 289)
				{
					return new Color(250, 250, 250, 50);
				}
				if (this.type >= 254 && this.type <= 261)
				{
					num4 = 255;
					if (num2 < 100)
					{
						num2 = 100;
					}
					if (num3 < 150)
					{
						num3 = 150;
					}
				}
				else if (this.type == 64 || this.type == 63 || this.type == 75 || this.type == 103)
				{
					num2 = (int)((double)newColor.R * 1.5);
					num3 = (int)((double)newColor.G * 1.5);
					num4 = (int)((double)newColor.B * 1.5);
					if (num2 > 255)
					{
						num2 = 255;
					}
					if (num3 > 255)
					{
						num3 = 255;
					}
					if (num4 > 255)
					{
						num4 = 255;
					}
				}
			}
			if (num5 < 0)
			{
				num5 = 0;
			}
			if (num5 > 255)
			{
				num5 = 255;
			}
			return new Color(num2, num3, num4, num5);
		}
		public Color GetColor(Color newColor)
		{
			int num = (int)(this.color.R - (255 - newColor.R));
			int num2 = (int)(this.color.G - (255 - newColor.G));
			int num3 = (int)(this.color.B - (255 - newColor.B));
			int num4 = (int)(this.color.A - (255 - newColor.A));
			if (num < 0)
			{
				num = 0;
			}
			if (num > 255)
			{
				num = 255;
			}
			if (num2 < 0)
			{
				num2 = 0;
			}
			if (num2 > 255)
			{
				num2 = 255;
			}
			if (num3 < 0)
			{
				num3 = 0;
			}
			if (num3 > 255)
			{
				num3 = 255;
			}
			if (num4 < 0)
			{
				num4 = 0;
			}
			if (num4 > 255)
			{
				num4 = 255;
			}
			return new Color(num, num2, num3, num4);
		}
		public string GetChat()
		{
			Recipe.FindRecipes();
			bool flag = false;
			bool flag2 = false;
			bool flag3 = false;
			bool flag4 = false;
			bool flag5 = false;
			bool flag6 = false;
			bool flag7 = false;
			bool flag8 = false;
			bool flag9 = false;
			bool flag10 = false;
			bool flag11 = false;
			bool flag12 = false;
			bool flag13 = false;
			bool flag14 = false;
			bool flag15 = false;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active)
				{
					if (Main.npc[i].type == 17)
					{
						flag = true;
					}
					else if (Main.npc[i].type == 18)
					{
						flag2 = true;
					}
					else if (Main.npc[i].type == 19)
					{
						flag3 = true;
					}
					else if (Main.npc[i].type == 20)
					{
						flag4 = true;
					}
					else if (Main.npc[i].type == 37)
					{
						flag5 = true;
					}
					else if (Main.npc[i].type == 38)
					{
						flag6 = true;
					}
					else if (Main.npc[i].type == 124)
					{
						flag7 = true;
					}
					else if (Main.npc[i].type == 107)
					{
						flag8 = true;
					}
					else if (Main.npc[i].type == 54)
					{
						flag9 = true;
					}
					else if (Main.npc[i].type == 160)
					{
						flag10 = true;
					}
					else if (Main.npc[i].type == 178)
					{
						flag11 = true;
					}
					else if (Main.npc[i].type == 229)
					{
						flag12 = true;
					}
					else if (Main.npc[i].type == 209)
					{
						flag13 = true;
					}
					else if (Main.npc[i].type == 208)
					{
						flag14 = true;
					}
					else if (Main.npc[i].type == 2)
					{
						flag15 = true;
					}
				}
			}
			string result = "";
			if (this.type == 17)
			{
				if (!NPC.downedBoss1 && Main.rand.Next(3) == 0)
				{
					if (Main.player[Main.myPlayer].statLifeMax < 200)
					{
						result = Lang.dialog(1, false);
					}
					else if (Main.player[Main.myPlayer].statDefense <= 10)
					{
						result = Lang.dialog(2, false);
					}
					else
					{
						result = Lang.dialog(3, false);
					}
				}
				else if (Main.dayTime)
				{
					if (Main.time < 16200.0)
					{
						int num = Main.rand.Next(3);
						if (num == 0)
						{
							result = Lang.dialog(4, false);
						}
						else if (num == 1)
						{
							result = Lang.dialog(5, false);
						}
						else
						{
							result = Lang.dialog(6, false);
						}
					}
					else if (Main.time > 37800.0)
					{
						int num2 = Main.rand.Next(3);
						if (num2 == 0)
						{
							result = Lang.dialog(7, false);
						}
						else if (num2 == 1)
						{
							result = Lang.dialog(8, false);
						}
						else
						{
							result = Lang.dialog(9, false);
						}
					}
					else
					{
						int num3 = Main.rand.Next(3);
						if (num3 == 0)
						{
							result = Lang.dialog(10, false);
						}
						else if (num3 == 1)
						{
							result = Lang.dialog(11, false);
						}
						else
						{
							result = Lang.dialog(12, false);
						}
					}
				}
				else if (Main.bloodMoon)
				{
					if (flag2 && flag7 && Main.rand.Next(3) == 0)
					{
						result = Lang.dialog(13, false);
					}
					else
					{
						int num4 = Main.rand.Next(4);
						if (num4 == 0)
						{
							result = Lang.dialog(14, false);
						}
						else if (num4 == 1)
						{
							result = Lang.dialog(15, false);
						}
						else if (num4 == 2)
						{
							result = Lang.dialog(16, false);
						}
						else
						{
							result = Lang.dialog(17, false);
						}
					}
				}
				else if (Main.time < 9720.0)
				{
					if (Main.rand.Next(2) == 0)
					{
						result = Lang.dialog(18, false);
					}
					else
					{
						result = Lang.dialog(19, false);
					}
				}
				else if (Main.time > 22680.0)
				{
					if (Main.rand.Next(2) == 0)
					{
						result = Lang.dialog(20, false);
					}
					else
					{
						result = Lang.dialog(21, false);
					}
				}
				else
				{
					int num5 = Main.rand.Next(3);
					if (num5 == 0)
					{
						result = Lang.dialog(22, false);
					}
					else if (num5 == 1)
					{
						result = Lang.dialog(23, false);
					}
					else
					{
						result = Lang.dialog(24, false);
					}
				}
			}
			else if (this.type == 18)
			{
				if (Main.bloodMoon)
				{
					if ((double)Main.player[Main.myPlayer].statLife < (double)Main.player[Main.myPlayer].statLifeMax * 0.66)
					{
						int num6 = Main.rand.Next(3);
						if (num6 == 0)
						{
							result = Lang.dialog(25, false);
						}
						else if (num6 == 1)
						{
							result = Lang.dialog(26, false);
						}
						else
						{
							result = Lang.dialog(27, false);
						}
					}
					else
					{
						int num7 = Main.rand.Next(4);
						if (num7 == 0)
						{
							result = Lang.dialog(28, false);
						}
						else if (num7 == 1)
						{
							result = Lang.dialog(29, false);
						}
						else if (num7 == 2)
						{
							result = Lang.dialog(30, false);
						}
						else
						{
							result = Lang.dialog(31, false);
						}
					}
				}
				else if (Main.rand.Next(3) == 0 && !NPC.downedBoss3)
				{
					result = Lang.dialog(32, false);
				}
				else if (flag6 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(33, false);
				}
				else if (flag3 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(34, false);
				}
				else if (flag15 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(35, false);
				}
				else if ((double)Main.player[Main.myPlayer].statLife < (double)Main.player[Main.myPlayer].statLifeMax * 0.33)
				{
					int num8 = Main.rand.Next(5);
					if (num8 == 0)
					{
						result = Lang.dialog(36, false);
					}
					else if (num8 == 1)
					{
						result = Lang.dialog(37, false);
					}
					else if (num8 == 2)
					{
						result = Lang.dialog(38, false);
					}
					else if (num8 == 3)
					{
						result = Lang.dialog(39, false);
					}
					else
					{
						result = Lang.dialog(40, false);
					}
				}
				else if ((double)Main.player[Main.myPlayer].statLife < (double)Main.player[Main.myPlayer].statLifeMax * 0.66)
				{
					int num9 = Main.rand.Next(7);
					if (num9 == 0)
					{
						result = Lang.dialog(41, false);
					}
					else if (num9 == 1)
					{
						result = Lang.dialog(42, false);
					}
					else if (num9 == 2)
					{
						result = Lang.dialog(43, false);
					}
					else if (num9 == 3)
					{
						result = Lang.dialog(44, false);
					}
					else if (num9 == 4)
					{
						result = Lang.dialog(45, false);
					}
					else if (num9 == 5)
					{
						result = Lang.dialog(46, false);
					}
					else
					{
						result = Lang.dialog(47, false);
					}
				}
				else
				{
					int num10 = Main.rand.Next(4);
					if (num10 == 0)
					{
						result = Lang.dialog(48, false);
					}
					else if (num10 == 1)
					{
						result = Lang.dialog(49, false);
					}
					else if (num10 == 2)
					{
						result = Lang.dialog(50, false);
					}
					else
					{
						result = Lang.dialog(51, false);
					}
				}
			}
			else if (this.type == 19)
			{
				if (NPC.downedBoss3 && !Main.hardMode)
				{
					result = Lang.dialog(58, false);
				}
				else if (flag2 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(59, false);
				}
				else if (flag2 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(60, false);
				}
				else if (flag4 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(61, false);
				}
				else if (flag6 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(62, false);
				}
				else if (flag6 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(63, false);
				}
				else if (Main.bloodMoon)
				{
					if (Main.rand.Next(2) == 0)
					{
						result = Lang.dialog(64, false);
					}
					else
					{
						result = Lang.dialog(65, false);
					}
				}
				else
				{
					int num11 = Main.rand.Next(3);
					if (num11 == 0)
					{
						result = Lang.dialog(66, false);
					}
					else if (num11 == 1)
					{
						result = Lang.dialog(67, false);
					}
					else
					{
						result = Lang.dialog(68, false);
					}
				}
			}
			else if (this.type == 20)
			{
				if (!NPC.downedBoss2 && Main.rand.Next(3) == 0)
				{
					result = Lang.dialog(69, false);
				}
				else if (flag3 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(70, false);
				}
				else if (flag && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(71, false);
				}
				else if (flag5 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(72, false);
				}
				else if (flag10 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(238, false);
				}
				else if (Main.bloodMoon)
				{
					int num12 = Main.rand.Next(4);
					if (num12 == 0)
					{
						result = Lang.dialog(73, false);
					}
					else if (num12 == 1)
					{
						result = Lang.dialog(74, false);
					}
					else if (num12 == 2)
					{
						result = Lang.dialog(75, false);
					}
					else
					{
						result = Lang.dialog(76, false);
					}
				}
				else
				{
					int num13 = Main.rand.Next(5);
					if (num13 == 0)
					{
						result = Lang.dialog(77, false);
					}
					else if (num13 == 1)
					{
						result = Lang.dialog(78, false);
					}
					else if (num13 == 2)
					{
						result = Lang.dialog(79, false);
					}
					else if (num13 == 3)
					{
						result = Lang.dialog(80, false);
					}
					else
					{
						result = Lang.dialog(81, false);
					}
				}
			}
			else if (this.type == 37)
			{
				if (Main.dayTime)
				{
					int num14 = Main.rand.Next(3);
					if (num14 == 0)
					{
						result = Lang.dialog(82, false);
					}
					else if (num14 == 1)
					{
						result = Lang.dialog(83, false);
					}
					else
					{
						result = Lang.dialog(84, false);
					}
				}
				else if (Main.player[Main.myPlayer].statLifeMax < 300 || Main.player[Main.myPlayer].statDefense < 10)
				{
					int num15 = Main.rand.Next(4);
					if (num15 == 0)
					{
						result = Lang.dialog(85, false);
					}
					else if (num15 == 1)
					{
						result = Lang.dialog(86, false);
					}
					else if (num15 == 2)
					{
						result = Lang.dialog(87, false);
					}
					else
					{
						result = Lang.dialog(88, false);
					}
				}
				else
				{
					int num16 = Main.rand.Next(4);
					if (num16 == 0)
					{
						result = Lang.dialog(89, false);
					}
					else if (num16 == 1)
					{
						result = Lang.dialog(90, false);
					}
					else if (num16 == 2)
					{
						result = Lang.dialog(91, false);
					}
					else
					{
						result = Lang.dialog(92, false);
					}
				}
			}
			else if (this.type == 38)
			{
				if (!NPC.downedBoss2 && Main.rand.Next(3) == 0)
				{
					result = Lang.dialog(93, false);
				}
				if (Main.bloodMoon)
				{
					int num17 = Main.rand.Next(3);
					if (num17 == 0)
					{
						result = Lang.dialog(94, false);
					}
					else if (num17 == 1)
					{
						result = Lang.dialog(95, false);
					}
					else
					{
						result = Lang.dialog(96, false);
					}
				}
				else if (flag3 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(97, false);
				}
				else if (flag3 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(98, false);
				}
				else if (flag2 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(99, false);
				}
				else if (flag4 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(100, false);
				}
				else if (!Main.dayTime)
				{
					int num18 = Main.rand.Next(4);
					if (num18 == 0)
					{
						result = Lang.dialog(101, false);
					}
					else if (num18 == 1)
					{
						result = Lang.dialog(102, false);
					}
					else if (num18 == 2)
					{
						result = Lang.dialog(103, false);
					}
					else
					{
						result = Lang.dialog(104, false);
					}
				}
				else
				{
					int num19 = Main.rand.Next(5);
					if (num19 == 0)
					{
						result = Lang.dialog(105, false);
					}
					else if (num19 == 1)
					{
						result = Lang.dialog(106, false);
					}
					else if (num19 == 2)
					{
						result = Lang.dialog(107, false);
					}
					else if (num19 == 3)
					{
						result = Lang.dialog(108, false);
					}
					else
					{
						result = Lang.dialog(109, false);
					}
				}
			}
			else if (this.type == 54)
			{
				if (!flag7 && Main.rand.Next(2) == 0)
				{
					result = Lang.dialog(110, false);
				}
				else if (flag10 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(237, false);
				}
				else if (Main.bloodMoon)
				{
					result = Lang.dialog(111, false);
				}
				else if (flag2 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(112, false);
				}
				else if (Main.player[Main.myPlayer].head == 24)
				{
					result = Lang.dialog(113, false);
				}
				else
				{
					int num20 = Main.rand.Next(6);
					if (num20 == 0)
					{
						result = Lang.dialog(114, false);
					}
					else if (num20 == 1)
					{
						result = Lang.dialog(115, false);
					}
					else if (num20 == 2)
					{
						result = Lang.dialog(116, false);
					}
					else if (num20 == 3)
					{
						result = Lang.dialog(117, false);
					}
					else if (num20 == 4)
					{
						result = Lang.dialog(118, false);
					}
					else
					{
						result = Lang.dialog(119, false);
					}
				}
			}
			else if (this.type == 105)
			{
				result = Lang.dialog(120, false);
			}
			else if (this.type == 107)
			{
				if (this.homeless)
				{
					int num21 = Main.rand.Next(5);
					if (num21 == 0)
					{
						result = Lang.dialog(121, false);
					}
					else if (num21 == 1)
					{
						result = Lang.dialog(122, false);
					}
					else if (num21 == 2)
					{
						result = Lang.dialog(123, false);
					}
					else if (num21 == 3)
					{
						result = Lang.dialog(124, false);
					}
					else
					{
						result = Lang.dialog(125, false);
					}
				}
				else if (flag7 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(126, false);
				}
				else if (!Main.dayTime)
				{
					int num22 = Main.rand.Next(5);
					if (num22 == 0)
					{
						result = Lang.dialog(127, false);
					}
					else if (num22 == 1)
					{
						result = Lang.dialog(128, false);
					}
					else if (num22 == 2)
					{
						result = Lang.dialog(129, false);
					}
					else if (num22 == 3)
					{
						result = Lang.dialog(130, false);
					}
					else
					{
						result = Lang.dialog(131, false);
					}
				}
				else
				{
					int num23 = Main.rand.Next(5);
					if (num23 == 0)
					{
						result = Lang.dialog(132, false);
					}
					else if (num23 == 1)
					{
						result = Lang.dialog(133, false);
					}
					else if (num23 == 2)
					{
						result = Lang.dialog(134, false);
					}
					else if (num23 == 3)
					{
						result = Lang.dialog(135, false);
					}
					else
					{
						result = Lang.dialog(136, false);
					}
				}
			}
			else if (this.type == 106)
			{
				result = Lang.dialog(137, false);
			}
			else if (this.type == 108)
			{
				if (this.homeless)
				{
					int num24 = Main.rand.Next(3);
					if (num24 == 0)
					{
						result = Lang.dialog(138, false);
					}
					else if (num24 == 1 && !Main.player[Main.myPlayer].male)
					{
						result = Lang.dialog(139, false);
					}
					else if (num24 == 1)
					{
						result = Lang.dialog(140, false);
					}
					else if (num24 == 2)
					{
						result = Lang.dialog(141, false);
					}
				}
				else if (Main.player[Main.myPlayer].male && flag15 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(142, false);
				}
				else if (Main.player[Main.myPlayer].male && flag6 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(143, false);
				}
				else if (Main.player[Main.myPlayer].male && flag8 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(144, false);
				}
				else if (!Main.player[Main.myPlayer].male && flag2 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(145, false);
				}
				else if (!Main.player[Main.myPlayer].male && flag7 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(146, false);
				}
				else if (!Main.player[Main.myPlayer].male && flag4 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(147, false);
				}
				else if (!Main.dayTime)
				{
					int num25 = Main.rand.Next(3);
					if (num25 == 0)
					{
						result = Lang.dialog(148, false);
					}
					else if (num25 == 1)
					{
						result = Lang.dialog(149, false);
					}
					else if (num25 == 2)
					{
						result = Lang.dialog(150, false);
					}
				}
				else
				{
					int num26 = Main.rand.Next(5);
					if (num26 == 0)
					{
						result = Lang.dialog(151, false);
					}
					else if (num26 == 1)
					{
						result = Lang.dialog(152, false);
					}
					else if (num26 == 2)
					{
						result = Lang.dialog(153, false);
					}
					else if (num26 == 3)
					{
						result = Lang.dialog(154, false);
					}
					else
					{
						result = Lang.dialog(155, false);
					}
				}
			}
			else if (this.type == 123)
			{
				result = Lang.dialog(156, false);
			}
			else if (this.type == 124)
			{
				if (this.homeless)
				{
					int num27 = Main.rand.Next(4);
					if (num27 == 0)
					{
						result = Lang.dialog(157, false);
					}
					else if (num27 == 1)
					{
						result = Lang.dialog(158, false);
					}
					else if (num27 == 2)
					{
						result = Lang.dialog(159, false);
					}
					else
					{
						result = Lang.dialog(160, false);
					}
				}
				else if (Main.bloodMoon)
				{
					int num28 = Main.rand.Next(4);
					if (num28 == 0)
					{
						result = Lang.dialog(161, false);
					}
					else if (num28 == 1)
					{
						result = Lang.dialog(162, false);
					}
					else if (num28 == 2)
					{
						result = Lang.dialog(163, false);
					}
					else
					{
						result = Lang.dialog(164, false);
					}
				}
				else if (flag8 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(165, false);
				}
				else if (flag3 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(166, false);
				}
				else
				{
					int num29 = Main.rand.Next(3);
					if (num29 == 0)
					{
						result = Lang.dialog(167, false);
					}
					else if (num29 == 1)
					{
						result = Lang.dialog(168, false);
					}
					else
					{
						result = Lang.dialog(169, false);
					}
				}
			}
			else if (this.type == 22)
			{
				if (Main.bloodMoon)
				{
					int num30 = Main.rand.Next(3);
					if (num30 == 0)
					{
						result = Lang.dialog(170, false);
					}
					else if (num30 == 1)
					{
						result = Lang.dialog(171, false);
					}
					else
					{
						result = Lang.dialog(172, false);
					}
				}
				else if (!Main.dayTime)
				{
					result = Lang.dialog(173, false);
				}
				else
				{
					int num31 = Main.rand.Next(3);
					if (num31 == 0)
					{
						result = Lang.dialog(174, false);
					}
					else if (num31 == 1)
					{
						result = Lang.dialog(175, false);
					}
					else
					{
						result = Lang.dialog(176, false);
					}
				}
			}
			else if (this.type == 142)
			{
				int num32 = Main.rand.Next(3);
				if (num32 == 0)
				{
					result = Lang.dialog(224, false);
				}
				else if (num32 == 1)
				{
					result = Lang.dialog(225, false);
				}
				else if (num32 == 2)
				{
					result = Lang.dialog(226, false);
				}
			}
			else if (this.type == 160)
			{
				int num33 = Main.rand.Next(6);
				if (flag4 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(232, false);
				}
				else if (flag9 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(236, false);
				}
				else if (num33 == 0)
				{
					result = Lang.dialog(231, false);
				}
				else if (num33 == 1)
				{
					result = Lang.dialog(233, false);
				}
				else if (num33 == 2)
				{
					result = Lang.dialog(234, false);
				}
				else if (num33 == 3)
				{
					result = Lang.dialog(235, false);
				}
				else if (num33 == 4)
				{
					result = Lang.dialog(240, false);
				}
				else if (num33 == 5)
				{
					result = Lang.dialog(241, false);
				}
			}
			else if (this.type == 178)
			{
				int num34 = Main.rand.Next(5);
				if (Main.bloodMoon && Main.rand.Next(3) == 0)
				{
					result = Lang.dialog(245, false);
				}
				else if (flag13 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(246, false);
				}
				else if (flag12 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(247, false);
				}
				else if (num34 == 0)
				{
					result = Lang.dialog(242, false);
				}
				else if (num34 == 1)
				{
					result = Lang.dialog(243, false);
				}
				else if (num34 == 2)
				{
					result = Lang.dialog(244, false);
				}
				else if (num34 == 3)
				{
					result = Lang.dialog(248, false);
				}
				else if (num34 == 4)
				{
					result = Lang.dialog(249, false);
				}
			}
			else if (this.type == 207)
			{
				int num35 = Main.rand.Next(3);
				if (flag12 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(260, false);
				}
				else if (num35 == 0)
				{
					result = Lang.dialog(257, false);
				}
				else if (num35 == 1)
				{
					result = Lang.dialog(258, false);
				}
				else if (num35 == 2)
				{
					result = Lang.dialog(259, false);
				}
			}
			else if (this.type == 208)
			{
				int num36 = Main.rand.Next(7);
				if (Main.player[Main.myPlayer].male && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(268, false);
				}
				else if (num36 == 0)
				{
					result = Lang.dialog(265, false);
				}
				else if (num36 == 1)
				{
					result = Lang.dialog(266, false);
				}
				else if (num36 == 2)
				{
					result = Lang.dialog(267, false);
				}
				else if (num36 == 3)
				{
					result = Lang.dialog(269, false);
				}
				else if (num36 == 4)
				{
					result = Lang.dialog(270, false);
				}
				else if (num36 == 5)
				{
					result = Lang.dialog(271, false);
				}
				else if (num36 == 6)
				{
					result = Lang.dialog(272, false);
				}
			}
			else if (this.type == 209)
			{
				int num37 = Main.rand.Next(5);
				if (flag12 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(284, false);
				}
				else if (flag11 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(283, false);
				}
				else if (num37 == 0)
				{
					result = Lang.dialog(280, false);
				}
				else if (num37 == 1)
				{
					result = Lang.dialog(281, false);
				}
				else if (num37 == 2)
				{
					result = Lang.dialog(282, false);
				}
				else if (num37 == 3)
				{
					result = Lang.dialog(285, false);
				}
				else if (num37 == 4)
				{
					result = Lang.dialog(286, false);
				}
			}
			else if (this.type == 227)
			{
				int num38 = Main.rand.Next(5);
				if (Main.hardMode && Main.rand.Next(7) == 0)
				{
					result = Lang.dialog(250, false);
				}
				else if (flag14 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(251, false);
				}
				else if (num38 == 0)
				{
					result = Lang.dialog(252, false);
				}
				else if (num38 == 1)
				{
					result = Lang.dialog(253, false);
				}
				else if (num38 == 2)
				{
					result = Lang.dialog(254, false);
				}
				else if (num38 == 3)
				{
					result = Lang.dialog(255, false);
				}
				else if (num38 == 4)
				{
					result = Lang.dialog(256, false);
				}
			}
			else if (this.type == 228)
			{
				int num39 = Main.rand.Next(3);
				if (flag2 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(263, false);
				}
				else if (num39 == 0)
				{
					result = Lang.dialog(261, false);
				}
				else if (num39 == 1)
				{
					result = Lang.dialog(262, false);
				}
				else if (num39 == 2)
				{
					result = Lang.dialog(264, false);
				}
			}
			else if (this.type == 229)
			{
				int num40 = Main.rand.Next(6);
				if (!Main.player[Main.myPlayer].male && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(276, false);
				}
				else if (num40 == 0)
				{
					result = Lang.dialog(273, false);
				}
				else if (num40 == 1)
				{
					result = Lang.dialog(274, false);
				}
				else if (num40 == 2)
				{
					result = Lang.dialog(275, false);
				}
				else if (num40 == 3)
				{
					result = Lang.dialog(277, false);
				}
				else if (num40 == 4)
				{
					result = Lang.dialog(278, false);
				}
				else if (num40 == 5)
				{
					result = Lang.dialog(279, false);
				}
			}
			return result;
		}
		public object Clone()
		{
			return base.MemberwiseClone();
		}
		private void DropLoot(int x, int y, int w, int h, int itemId, int stack = 1, bool broadcast = false, int prefix = 0, bool nodelay = false)
		{
			if (!ServerApi.Hooks.InvokeNpcLootDrop(ref x, ref y, ref w, ref h, ref itemId, ref stack, ref broadcast, ref prefix, type, whoAmI, ref nodelay))
			{
				Item.NewItem(x, y, w, h, itemId, stack, broadcast, prefix, nodelay);
			}
		}
	}
}
